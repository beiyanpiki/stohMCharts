{"version":3,"sources":["components/State.js","components/DelayExp.js","components/DelayUnif.js","components/Delay.js","components/DelayNormal.js","sidebar/StateInfo.js","sidebar/DelayExpStateInfo.js","sidebar/DelayUnifStateInfo.js","sidebar/DelayStateInfo.js","sidebar/DelayNormalStateInfo.js","sidebar/TransitionSidebar.js","sidebar/ProbabilityTransitionSidebar.js","utils/random.js","algorithm/convert.js","algorithm/test_data.js","Title.js","Layout.js","utils/toUppaal.js","index.js"],"names":["State","_ref","_node$data","node","data","title","exp","inv","composite","react_default","a","createElement","className","concat","DelayExpState","variable","rate","DelayUnifState","b","DelayState","t","DelayNormalState","u","StateInfo","state","onChange","_Form$useForm","Form","useForm","form","Object","slicedToArray","useEffect","resetFields","es_form","labelCol","span","wrapperCol","initialValues","id","onFinish","values","objectSpread","Item","label","name","input","disabled","valuePropName","offset","es_checkbox","es_button","type","htmlType","block","DelayExpStateInfo","input_number","DelayUnifStateInfo","DelayStateInfo","DelayNormalStateInfo","TransitionSidebar","onSwitch","guard","sync","update","es_radio","Group","defaultValue","buttonStyle","e","target","value","Button","ProbabilityTransitionSidebar","weight","randomString","randomLen","min","max","str","range","arr","Math","round","random","i","length","generateID","Graph","classCallCheck","this","vertices","Map","adjList","root","chan","createClass","key","shape","push","set","source","get","_this","cnt","forEach","v","_step","_iterator","convert_createForOfIteratorHelper","s","n","done","edge_id","has","err","f","_step2","min_times","min_node","_iterator2","_ref2","node_id","times","nodes","edges","_this2","_ref3","add_vertices","_ref4","action","substr","add_edge","cell","getRoot","convertNode","vis","G","A","node_data","includes","invariant","rate_exp","edge_data","target_id","target_data","_node_data$data","node_data_raw","edge_data_raw","new_node_id","new_edge_1","_node_data$data2","my_prob","sum_prob","edge","ed","prob","test_data_a","cells","position","x","y","size","width","height","view","ports","groups","top","attrs","circle","r","magnet","stroke","strokeWidth","fill","style","visibility","right","bottom","left","items","group","zIndex","children","parent","visible","router","connector","port","line","strokeDasharray","Title","onTitleChange","_useState","useState","_useState2","edit","setEdit","inputRef","useRef","Fragment","compact","ref","onPressEnter","onBlur","onClick","register","component","effect","registerNode","inherit","body","rx","ry","registerEdge","targetMarker","Layout","refContainer","refStencilContainer","setState","_useState3","_useState4","setG","_useState5","_useState6","setTitle","graph","container","current","grid","mousewheel","enabled","zoomAtMousePosition","modifiers","minScale","maxScale","highlighting","embedding","args","padding","magnetAdsorbed","connecting","anchor","connectionPoint","allowBlank","snap","radius","createEdge","validateConnection","targetMagnet","findParent","bbox","getBBox","getNodes","filter","getData","targetBBox","isIntersectWithRect","use","Transform","resizing","rotating","Selection","rubberband","showNodeSelectionBox","Snapline","Keyboard","Clipboard","History","bindKey","getSelectedCells","copy","cut","isClipboardEmpty","paste","cleanSelection","select","canUndo","undo","canRedo","redo","removeCells","showPorts","show","len","on","querySelectorAll","stencil","Stencil","stencilGraphWidth","stencilGraphHeight","appendChild","r1","createNode","r2","r3","r4","r5","r6","load","download","filename","content","arguments","undefined","Base64","encode","downfile","File","tmpLink","document","objectUrl","URL","createObjectURL","href","click","removeChild","revokeObjectURL","space","wrap","src_Title","newTitle","clearCells","upload","showUploadList","beforeUpload","file","Promise","resolve","substring","lastIndexOf","reader","FileReader","readAsText","onload","raw","decode","raw_obj","JSON","parse","fromJSON","loadData","result","graph_data","toJSON","stringify","xml","datas","result1","xml2js","console","log","nta","global_declaretion","_createForOfIteratorHelper","declaration","_text","templates_name","template","_step3","_iterator3","_loop","tpl","location","branchpoint","init","transition","node_shape","obj","_attributes","kind","source_id","_edge_data$data","_edge_data$data2","process","_i","_templates_name","template_name","_i2","_templates_name2","system","js2xml","toUppaalXML","system_name","cell_map","composite_nodes","composite_edges","composite_G","composite_A","composite_node","_composite_nodes","cell_id","cell_data","sub_G","sub_A","Array","from","Set","convert","dropdown","menu","DownOutlined","icon","GithubFilled","sidebar_StateInfo","newState","getCellById","setData","sidebar_DelayExpStateInfo","sidebar_DelayUnifStateInfo","sidebar_DelayStateInfo","sidebar_DelayNormalStateInfo","sidebar_TransitionSidebar","prop","attr","sidebar_ProbabilityTransitionSidebar","ReactDOM","createRoot","getElementById","render","StrictMode","src_Layout"],"mappings":"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","file":"static/js/main.2ec48af5.chunk.js","sourcesContent":["import React from 'react'\n\nconst State = ({ node }) => {\n    const { title, exp, inv, composite } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {inv}\n            </span>\n        </div>\n    )\n}\n\nexport default State\n","import React from 'react'\nconst DelayExpState = ({ node }) => {\n    const { title, composite, exp, variable, rate } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {variable} = DelayExp({rate})\n            </span>\n        </div>\n    )\n}\n\nexport default DelayExpState\n","import React from 'react'\nconst DelayUnifState = ({ node }) => {\n    const { title, composite, exp, variable, a, b } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {variable} = DelayUnif({a}, {b})\n            </span>\n        </div>\n    )\n}\n\nexport default DelayUnifState\n","import React from 'react'\n\nconst DelayState = ({ node }) => {\n    const { title, composite, exp, variable, t } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {variable} = Delay({t})\n            </span>\n        </div>\n    )\n}\n\nexport default DelayState\n","import React from 'react'\nconst DelayNormalState = ({ node }) => {\n    const { title, composite, variable, a, u, inv } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {variable} = Normal({a}, {u})\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {inv}\n            </span>\n        </div>\n    )\n}\n\nexport default DelayNormalState\n","import { Button, Checkbox, Form, Input } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst StateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                inv: state.inv ? state.inv : '',\n                exp: state.exp ? state.exp : '',\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Inv.\" name=\"inv\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 20 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default StateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayExpStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                exp: state.exp ? state.exp : '',\n                variable: state.variable ? state.variable : '',\n                rate: state.rate ? state.rate : 2,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Rate\" name=\"rate\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayExpStateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayUnifStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                exp: state.exp ? state.exp : '',\n                variable: state.variable ? state.variable : '',\n                a: state.a ? state.a : 10,\n                b: state.b ? state.b : 20,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"a\" name=\"a\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item label=\"b\" name=\"b\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayUnifStateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                exp: state.exp ? state.exp : '',\n                variable: state.variable ? state.variable : '',\n                t: state.t ? state.t : 5,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"t\" name=\"t\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayStateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayNormalStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                inv: state.inv ? state.inv : '',\n                variable: state.variable ? state.variable : '',\n                a: state.a ? state.a : 10,\n                u: state.u ? state.u : 20,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"a\" name=\"a\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item label=\"u\" name=\"u\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item label=\"Inv.\" name=\"inv\">\n                <Input />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayNormalStateInfo\n","import { Button, Form, Input, Radio } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst TransitionSidebar = ({ state, onChange, onSwitch }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                guard: state.guard,\n                sync: state.sync,\n                update: state.update,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"type\">\n                <Radio.Group\n                    defaultValue=\"tran\"\n                    buttonStyle=\"solid\"\n                    onChange={(e) => {\n                        if (e.target.value === 'prob') {\n                            onSwitch()\n                        }\n                    }}\n                >\n                    <Radio.Button value=\"tran\">Transition</Radio.Button>\n                    <Radio.Button value=\"prob\">Probability</Radio.Button>\n                </Radio.Group>\n            </Form.Item>\n\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"guard\" name=\"guard\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"sync\" name=\"sync\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"update\" name=\"update\">\n                <Input />\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default TransitionSidebar\n","import { Button, Form, Input, InputNumber, Radio } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst ProbabilityTransitionSidebar = ({ state, onChange, onSwitch }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                weight: state.weight,\n                sync: state.sync,\n                update: state.update,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"type\">\n                <Radio.Group\n                    defaultValue=\"prob\"\n                    buttonStyle=\"solid\"\n                    onChange={(e) => {\n                        if (e.target.value === 'tran') {\n                            onSwitch()\n                        }\n                    }}\n                >\n                    <Radio.Button value=\"tran\">Transition</Radio.Button>\n                    <Radio.Button value=\"prob\">Probability</Radio.Button>\n                </Radio.Group>\n            </Form.Item>\n\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"sync\" name=\"sync\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"update\" name=\"update\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"weight\" name=\"weight\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default ProbabilityTransitionSidebar\n","export const randomString = (randomLen, min, max) => {\n    let str = '',\n        range = min,\n        arr = [\n            '0',\n            '1',\n            '2',\n            '3',\n            '4',\n            '5',\n            '6',\n            '7',\n            '8',\n            '9',\n            'a',\n            'b',\n            'c',\n            'd',\n            'e',\n            'f',\n            'g',\n            'h',\n            'i',\n            'j',\n            'k',\n            'l',\n            'm',\n            'n',\n            'o',\n            'p',\n            'q',\n            'r',\n            's',\n            't',\n            'u',\n            'v',\n            'w',\n            'x',\n            'y',\n            'z',\n            'A',\n            'B',\n            'C',\n            'D',\n            'E',\n            'F',\n            'G',\n            'H',\n            'I',\n            'J',\n            'K',\n            'L',\n            'M',\n            'N',\n            'O',\n            'P',\n            'Q',\n            'R',\n            'S',\n            'T',\n            'U',\n            'V',\n            'W',\n            'X',\n            'Y',\n            'Z',\n        ]\n    // 随机产生\n    if (randomLen) {\n        range = Math.round(Math.random() * (max - min)) + min\n    }\n    for (let i = 0; i < range; i++) {\n        let pos = Math.round(Math.random() * (arr.length - 1))\n        str += arr[pos]\n    }\n    return str\n}\n\nexport const generateID = () => {\n    return `${randomString(false, 8)}-${randomString(false, 4)}-${randomString(\n        false,\n        4\n    )}-${randomString(false, 4)}-${randomString(false, 12)}`\n}\n","import { generateID } from '../utils'\n\nclass Graph {\n    constructor() {\n        this.vertices = [] // Save ID\n        this.data = new Map() // for node, {id: data, shape}; for edge, {id: data, shape, target}\n        this.adjList = new Map() // {id: [edge_id1, edge_id2]}\n        this.root = null\n        this.variable = []\n        this.chan = []\n    }\n\n    add_vertices(id, shape, data) {\n        this.vertices.push(id)\n        this.data.set(id, { shape, data })\n        this.adjList.set(id, [])\n    }\n\n    add_edge(id, shape, data, source, target) {\n        this.adjList.get(source).push(id)\n        this.data.set(id, { shape, data, target })\n    }\n\n    getRoot() {\n        const cnt = new Map()\n\n        this.vertices.forEach((v) => {\n            cnt.set(v, 0)\n        })\n\n        for (let edges of this.adjList.values()) {\n            edges.forEach((edge_id) => {\n                const target = this.data.get(edge_id).target\n                if (cnt.has(target)) {\n                    cnt.set(target, cnt.get(target) + 1)\n                }\n            })\n        }\n        let min_times = 9999999,\n            min_node = ''\n        for (let [node_id, times] of cnt) {\n            if (times <= min_times) {\n                min_times = times\n                min_node = node_id\n            }\n        }\n        this.root = min_node\n    }\n\n    loadData(nodes, edges) {\n        nodes.forEach(({ id, shape, data }) => {\n            if ('variable' in data) {\n                this.variable.push(data.variable)\n            }\n            this.add_vertices(id, shape, data)\n        })\n        edges.forEach(({ id, shape, data, source, target }) => {\n            if ('sync' in data && data.sync !== '') {\n                const action = data.sync\n                // action! => action\n                this.chan.push(action.substr(0, action.length - 1))\n            }\n            this.add_edge(id, shape, data, source.cell, target.cell)\n        })\n        this.getRoot()\n    }\n}\n\nconst convertNode = (node_id, vis, G, A) => {\n    if (vis.has(node_id)) {\n        return\n    }\n    vis.set(node_id, true)\n\n    const node_data = G.data.get(node_id)\n    // If node is not exist, create it.\n    if (!A.vertices.includes(node_id)) {\n        A.add_vertices(\n            node_id,\n            node_data.shape === 'probability-node' ? 'branch' : 'location',\n            {\n                title: node_data.data.title,\n                invariant: '',\n                rate_exp: '',\n            }\n        )\n    }\n    const edges = G.adjList.get(node_id)\n    edges.forEach((edge_id) => {\n        const edge_data = G.data.get(edge_id)\n        const target_id = edge_data.target\n\n        // If target node is not exist, create it.\n        const target_data = G.data.get(target_id)\n        if (!A.vertices.includes(target_id)) {\n            A.add_vertices(\n                target_id,\n                target_data.shape === 'probability-node'\n                    ? 'branch'\n                    : 'location',\n                {\n                    title: target_data.data.title,\n                    invariant: '',\n                    rate_exp: '',\n                }\n            )\n        }\n        // Link source to target\n        if (node_data.shape !== 'delay') {\n            if (node_data.shape === 'probability-node') {\n                A.add_edge(\n                    edge_id,\n                    'prob-transition',\n                    {\n                        update: edge_data.data.update,\n                        sync: edge_data.data.sync,\n                        weight: edge_data.data.weight,\n                    },\n                    node_id,\n                    target_id\n                )\n            } else {\n                A.add_edge(\n                    edge_id,\n                    'transition',\n                    {\n                        guard: edge_data.data.guard,\n                        sync: edge_data.data.sync,\n                        update: edge_data.data.update,\n                    },\n                    node_id,\n                    target_id\n                )\n            }\n        }\n\n        // DelayUnif(a, b)\n        if (node_data.shape === 'delay-unif') {\n            // Algorithm 1: Line 7\n            const { variable, a, b } = node_data.data\n            const node_data_raw = A.data.get(node_id)\n            A.data.set(node_id, {\n                ...node_data_raw,\n                data: {\n                    ...node_data_raw.data,\n                    invariant: `${variable} <= ${b}`,\n                },\n            })\n\n            const edge_data_raw = A.data.get(edge_id)\n            A.data.set(edge_id, {\n                ...edge_data_raw,\n                data: {\n                    ...edge_data_raw.data,\n                    guard: `${variable} >= ${a}`,\n                },\n            })\n        }\n        // DelayExp(rate)\n        if (node_data.shape === 'delay-exp') {\n            // Algorithm 1: Line 8\n            const { rate } = node_data.data\n            const node_data_raw = A.data.get(node_id)\n            A.data.set(node_id, {\n                ...node_data_raw,\n                data: {\n                    ...node_data_raw.data,\n                    rate_exp: rate,\n                },\n            })\n        }\n        // Delay(t)\n        if (node_data.shape === 'delay') {\n            // Algorithm 1: Line 9\n            // Create New Node and Link node\n            const new_node_id = generateID()\n            A.add_vertices(new_node_id, 'location', {\n                title: '',\n                invariant: `${node_data.data.variable} <= ${node_data.data.t}`,\n                rate_exp: '',\n            })\n            const new_edge_1 = generateID()\n            A.add_edge(\n                new_edge_1,\n                'transition',\n                {\n                    guard: '',\n                    sync: '',\n                    update: `${node_data.data.variable} = 0`,\n                },\n                node_id,\n                new_node_id\n            )\n            A.add_edge(\n                edge_id,\n                'transition',\n                {\n                    guard: `${node_data.data.variable} == ${node_data.data.t}`,\n                    sync: edge_data.data.sync,\n                    update: edge_data.data.update,\n                },\n                new_node_id,\n                target_id\n            )\n        }\n        // Normal(a, u)\n        if (node_data.shape === 'normal') {\n            // Algorithm 1: Line 10\n            const { variable, a, u } = node_data.data\n            const edge_data_raw = A.data.get(edge_id)\n            A.data.set(edge_id, {\n                ...edge_data_raw,\n                data: {\n                    ...edge_data_raw.data,\n                    update: `${variable} = Norm(${a}, ${u})`,\n                },\n            })\n        }\n        // Probability\n        if (node_data.shape === 'probability-node') {\n            // Algorithm 1: Line 13\n            const my_prob = edge_data.data.weight\n            let sum_prob = 0\n            edges.forEach((edge) => {\n                const ed = G.data.get(edge)\n                if (ed.shape === 'probability-transition') {\n                    sum_prob += ed.data.weight\n                }\n            })\n            const prob = my_prob / sum_prob\n            const edge_data_raw = A.data.get(edge_id)\n            A.data.set(edge_id, {\n                ...edge_data_raw,\n                data: {\n                    ...edge_data_raw.data,\n                    weight: prob,\n                },\n            })\n        }\n        // Action\n        // if (node_id === target_id) {\n        //     console.log(\"Self Loop!!\", edge_id)\n        //     // Algorithm 1: Line 11\n        //     A.add_edge(edge_id, 'transition', {\n        //         guard: edge_data.data.guard,\n        //         sync: edge_data.data.sync,\n        //         update: edge_data.data.update\n        //     }, node_id, target_id)\n        // }\n        convertNode(target_id, vis, G, A)\n    })\n}\n\nexport const convert = (system_name, data) => {\n    let template = []\n    let variable = []\n    let chan = []\n\n    let cell_map = new Map()\n    data.cells.forEach((cell) => {\n        cell_map.set(cell.id, cell)\n    })\n\n    // Find all composite node\n    let composite_nodes = [],\n        composite_edges = []\n    data.cells.forEach((cell) => {\n        if ('composite' in cell.data && cell.data.composite) {\n            composite_nodes.push(cell)\n        }\n    })\n    data.cells.forEach((cell) => {\n        if (\n            cell.shape === 'transition' ||\n            cell.shape === 'probability-transition'\n        ) {\n            if (!('parent' in cell) || cell.source.cell === cell.target.cell) {\n                composite_edges.push(cell)\n            }\n        }\n    })\n    let composite_G = new Graph(),\n        composite_A = new Graph()\n    composite_G.loadData(composite_nodes, composite_edges)\n    let vis = new Map()\n\n    if (composite_G.vertices.length > 0) {\n        convertNode(composite_G.root, vis, composite_G, composite_A)\n    }\n\n    template.push({\n        name: system_name,\n        vertices: composite_A.vertices,\n        data: composite_A.data,\n        adjList: composite_A.adjList,\n        root: composite_G.root,\n    })\n    variable = variable.concat(composite_G.variable)\n    chan = chan.concat(composite_G.chan)\n\n    // Find all child node\n    for (let composite_node of composite_nodes) {\n        if (composite_node.children === undefined) {\n            break\n        }\n        let nodes = [],\n            edges = []\n        composite_node.children.forEach((cell_id) => {\n            const cell_data = cell_map.get(cell_id)\n            if (\n                cell_data.shape === 'transition' ||\n                cell_data.shape === 'probability-transition'\n            ) {\n                edges.push(cell_data)\n            } else {\n                nodes.push(cell_data)\n            }\n        })\n        if (nodes.length === 0) {\n            break\n        }\n        let sub_G = new Graph(),\n            sub_A = new Graph(),\n            vis = new Map()\n        sub_G.loadData(nodes, edges)\n        convertNode(sub_G.root, vis, sub_G, sub_A)\n        template.push({\n            name: composite_node.data.title,\n            vertices: sub_A.vertices,\n            data: sub_A.data,\n            adjList: sub_A.adjList,\n            root: sub_G.root,\n            variable: Array.from(new Set(sub_G.variable)),\n            chan: Array.from(new Set(sub_G.chan)),\n        })\n\n        variable = variable.concat(sub_G.variable)\n        chan = chan.concat(sub_G.chan)\n    }\n\n    variable = Array.from(new Set(variable))\n    chan = Array.from(new Set(chan))\n    template[0].chan = chan\n    template[0].variable = variable\n    return template\n}\n","export const test_data_a = {\n    cells: [\n        {\n            position: {\n                x: 110,\n                y: 100,\n            },\n            size: {\n                width: 980,\n                height: 520,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n            data: {\n                title: 'A',\n                exp: '',\n                inv: '',\n                composite: true,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 1,\n            children: [\n                'e117d7aa-3ad4-404e-bcee-7b6f186daeec',\n                '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n                'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                'dbf27753-0dc0-4a7b-ad2c-71e163a93f43',\n                '17fb3b36-3d15-4438-b536-82fb04667055',\n                'c847f05b-f39b-4c1a-85b4-1cbdcf8950f2',\n                '5c73ddff-16f4-4bcd-a4d9-f366811d8c3a',\n                'de4750f4-b9f9-492c-89f7-6df3c9fb3a05',\n                'af6313c9-8705-4984-bdb6-23f2ed4612bb',\n            ],\n        },\n        {\n            position: {\n                x: 161,\n                y: 317,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'e117d7aa-3ad4-404e-bcee-7b6f186daeec',\n            data: {\n                title: 'A1',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 2,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 436,\n                y: 317,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'delay',\n            id: '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n            data: {\n                title: 'A2',\n                exp: '',\n                variable: 'c',\n                t: 5,\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '724e8f7d-266c-4145-9c1b-717f521da6dc',\n                    },\n                    {\n                        group: 'right',\n                        id: '5c2655b9-d2cc-43aa-b76e-4deb6af11e02',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '3095bfb1-28a4-4a62-a6a6-1ce986a563d4',\n                    },\n                    {\n                        group: 'left',\n                        id: '247497f9-a0ff-48aa-ba8f-e12b35064613',\n                    },\n                ],\n            },\n            zIndex: 3,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 754,\n                y: 350,\n            },\n            size: {\n                width: 20,\n                height: 20,\n            },\n            visible: true,\n            shape: 'probability-node',\n            id: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n            data: {},\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '54e2d0ab-e2e6-4b20-8215-e2a50d4236a2',\n                    },\n                    {\n                        group: 'right',\n                        id: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '6855da3f-d57c-4ba2-939a-28882eb50ee4',\n                    },\n                    {\n                        group: 'left',\n                        id: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n                    },\n                ],\n            },\n            zIndex: 4,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 850,\n                y: 170,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'dbf27753-0dc0-4a7b-ad2c-71e163a93f43',\n            data: {\n                title: 'A3',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 5,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 850,\n                y: 443,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: '17fb3b36-3d15-4438-b536-82fb04667055',\n            data: {\n                title: 'A4',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 6,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: 'c847f05b-f39b-4c1a-85b4-1cbdcf8950f2',\n            source: {\n                cell: 'e117d7aa-3ad4-404e-bcee-7b6f186daeec',\n                port: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n            },\n            target: {\n                cell: '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n                port: '247497f9-a0ff-48aa-ba8f-e12b35064613',\n            },\n            zIndex: 7,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '5c73ddff-16f4-4bcd-a4d9-f366811d8c3a',\n            source: {\n                cell: '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n                port: '5c2655b9-d2cc-43aa-b76e-4deb6af11e02',\n            },\n            target: {\n                cell: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                port: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n            },\n            zIndex: 8,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 12,\n            },\n            id: 'de4750f4-b9f9-492c-89f7-6df3c9fb3a05',\n            source: {\n                cell: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: 'dbf27753-0dc0-4a7b-ad2c-71e163a93f43',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 9,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 17,\n            },\n            id: 'af6313c9-8705-4984-bdb6-23f2ed4612bb',\n            source: {\n                cell: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: '17fb3b36-3d15-4438-b536-82fb04667055',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 10,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 109.99999999999682,\n                y: 702.0000000000063,\n            },\n            size: {\n                width: 980,\n                height: 530,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n            data: {\n                title: 'B',\n                exp: '',\n                inv: '',\n                composite: true,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 11,\n            children: [\n                '59752520-f097-44d0-a96e-8d563eded661',\n                '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n                'f8c408ab-20dc-4c41-a486-35224d069364',\n                'bc3ef988-e21d-4dd4-a996-d89151cdf37e',\n                '54be5835-e8aa-455a-95f7-a788fca962af',\n                '29916c50-2e09-41c9-9e23-ff6d067e69ce',\n                '37363a6d-ae54-4184-ace6-13f87c89ccec',\n                'fd53a442-3f0f-4f05-aae6-02b0a10e94e7',\n            ],\n        },\n        {\n            position: {\n                x: 161,\n                y: 894,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: '59752520-f097-44d0-a96e-8d563eded661',\n            data: {\n                title: 'B1',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 12,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            position: {\n                x: 454,\n                y: 927,\n            },\n            size: {\n                width: 20,\n                height: 20,\n            },\n            visible: true,\n            shape: 'probability-node',\n            id: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n            data: {},\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '54e2d0ab-e2e6-4b20-8215-e2a50d4236a2',\n                    },\n                    {\n                        group: 'right',\n                        id: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '6855da3f-d57c-4ba2-939a-28882eb50ee4',\n                    },\n                    {\n                        group: 'left',\n                        id: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n                    },\n                ],\n            },\n            zIndex: 13,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            position: {\n                x: 574,\n                y: 789,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n            data: {\n                title: 'B2',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 14,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            position: {\n                x: 574,\n                y: 1020,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'f8c408ab-20dc-4c41-a486-35224d069364',\n            data: {\n                title: 'B3',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 15,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: 'bc3ef988-e21d-4dd4-a996-d89151cdf37e',\n            source: {\n                cell: '59752520-f097-44d0-a96e-8d563eded661',\n                port: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n            },\n            target: {\n                cell: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                port: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n            },\n            zIndex: 16,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 12,\n            },\n            id: 'fd53a442-3f0f-4f05-aae6-02b0a10e94e7',\n            source: {\n                cell: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: 'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 17,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 17,\n            },\n            id: '29916c50-2e09-41c9-9e23-ff6d067e69ce',\n            source: {\n                cell: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: 'f8c408ab-20dc-4c41-a486-35224d069364',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 18,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '37363a6d-ae54-4184-ace6-13f87c89ccec',\n            source: {\n                cell: 'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n                port: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n            },\n            target: {\n                cell: '59752520-f097-44d0-a96e-8d563eded661',\n                port: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n            },\n            zIndex: 19,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '54be5835-e8aa-455a-95f7-a788fca962af',\n            source: {\n                cell: 'f8c408ab-20dc-4c41-a486-35224d069364',\n                port: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n            },\n            target: {\n                cell: '59752520-f097-44d0-a96e-8d563eded661',\n                port: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n            },\n            zIndex: 20,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '1cd45879-64d6-4618-a5af-0b78bf2e3eff',\n            source: {\n                cell: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n                port: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n            },\n            target: {\n                cell: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n                port: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n            },\n            zIndex: 21,\n        },\n    ],\n}\n","import React, { useState, useRef } from 'react'\nimport { Input } from 'antd'\nconst Title = ({ title, onTitleChange }) => {\n    const [edit, setEdit] = useState(false)\n    const inputRef = useRef(null)\n\n    return (\n        <>\n            {edit ? (\n                <Input.Group compact size=\"small\">\n                    <Input\n                        ref={inputRef}\n                        defaultValue={title}\n                        onChange={(e) => {\n                            const { value } = e.target\n                            if (value.length < 20) {\n                                onTitleChange(value)\n                            }\n                        }}\n                        onPressEnter={() => {\n                            setEdit(false)\n                        }}\n                        onBlur={() => {\n                            setEdit(false)\n                        }}\n                    />\n                </Input.Group>\n            ) : (\n                <h3\n                    onClick={() => {\n                        setEdit(true)\n                    }}\n                >\n                    {title}\n                </h3>\n            )}\n        </>\n    )\n}\n\nexport default Title\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Graph } from '@antv/x6'\nimport { Transform } from '@antv/x6-plugin-transform'\nimport { Selection } from '@antv/x6-plugin-selection'\nimport { Snapline } from '@antv/x6-plugin-snapline'\nimport { Keyboard } from '@antv/x6-plugin-keyboard'\nimport { Clipboard } from '@antv/x6-plugin-clipboard'\nimport { History } from '@antv/x6-plugin-history'\nimport { Stencil } from '@antv/x6-plugin-stencil'\nimport { register } from '@antv/x6-react-shape'\n\nimport {\n    DelayExpState,\n    DelayNormalState,\n    DelayState,\n    DelayUnifState,\n    State,\n} from './components'\nimport {\n    DelayExpStateInfo,\n    DelayNormalStateInfo,\n    DelayStateInfo,\n    DelayUnifStateInfo,\n    ProbabilityTransitionSidebar,\n    StateInfo,\n    TransitionSidebar,\n} from './sidebar'\nimport { convert, test_data_a } from './algorithm'\nimport { toUppaalXML } from './utils'\nimport { Button, Dropdown, Space, Upload } from 'antd'\nimport { GithubFilled, DownOutlined } from '@ant-design/icons'\nimport { Base64 } from 'js-base64'\nimport Title from './Title'\n\nconst ports = {\n    groups: {\n        top: {\n            position: 'top',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n        right: {\n            position: 'right',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n        bottom: {\n            position: 'bottom',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n        left: {\n            position: 'left',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n    },\n    items: [\n        {\n            group: 'top',\n        },\n        {\n            group: 'right',\n        },\n        {\n            group: 'bottom',\n        },\n        {\n            group: 'left',\n        },\n    ],\n}\n// Register custom component\nregister({\n    shape: 'state',\n    width: 180,\n    height: 86,\n    component: State,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay-exp',\n    width: 180,\n    height: 86,\n    component: DelayExpState,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay-unif',\n    width: 180,\n    height: 86,\n    component: DelayUnifState,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay',\n    width: 180,\n    height: 86,\n    component: DelayState,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay-normal',\n    width: 180,\n    height: 86,\n    component: DelayNormalState,\n    effect: ['data'],\n})\nGraph.registerNode(\n    'probability-node',\n    {\n        inherit: 'circle',\n        width: 20,\n        height: 20,\n        attrs: {\n            body: {\n                stroke: '#8f8f8f',\n                strokeWidth: 1,\n                fill: '#fff',\n                rx: 6,\n                ry: 6,\n            },\n        },\n    },\n    true\n)\nGraph.registerNode('initial-node', {\n    inherit: 'circle',\n    width: 30,\n    height: 30,\n    attrs: {\n        body: {\n            fill: '#888888',\n        },\n    },\n})\n\n// Register custom edge\nGraph.registerEdge('transition', {\n    inherit: 'edge',\n    router: { name: 'metro' },\n    connector: { name: 'rounded' },\n    attrs: {\n        line: {\n            stroke: '#faad14',\n            strokeDasharray: null,\n            targetMarker: 'classic',\n        },\n    },\n    data: {\n        guard: '',\n        sync: '',\n        update: '',\n    },\n})\nGraph.registerEdge('probability-transition', {\n    inherit: 'edge',\n    router: { name: 'metro' },\n    connector: { name: 'rounded' },\n    attrs: {\n        line: {\n            stroke: '#1890ff',\n            strokeDasharray: 5,\n            targetMarker: 'classic',\n        },\n    },\n    data: {\n        sync: '',\n        update: '',\n        weight: 0,\n    },\n})\n\nconst Layout = () => {\n    const refContainer = useRef(null)\n    const refStencilContainer = useRef(null)\n    const [state, setState] = useState({\n        shape: '',\n        id: '',\n        data: {},\n    })\n    const [G, setG] = useState(null)\n\n    const [title, setTitle] = useState('New System')\n\n    useEffect(() => {\n        // Init graph\n        const graph = new Graph({\n            container: refContainer.current,\n            grid: true,\n            mousewheel: {\n                enabled: true,\n                zoomAtMousePosition: true,\n                modifiers: 'ctrl',\n                minScale: 0.5,\n                maxScale: 3,\n            },\n            highlighting: {\n                embedding: {\n                    name: 'stroke',\n                    args: {\n                        padding: -1,\n                        attrs: {\n                            stroke: '#73d13d',\n                        },\n                    },\n                },\n                magnetAdsorbed: {\n                    name: 'stroke',\n                    args: {\n                        attrs: {\n                            fill: '#5F95FF',\n                            stroke: '#5F95FF',\n                        },\n                    },\n                },\n            },\n            connecting: {\n                anchor: 'center',\n                connectionPoint: 'anchor',\n                allowBlank: false,\n                snap: {\n                    radius: 20,\n                },\n                createEdge() {\n                    return graph.createEdge({ shape: 'transition' })\n                },\n                validateConnection({ targetMagnet }) {\n                    return !!targetMagnet\n                },\n            },\n            embedding: {\n                enabled: true,\n                findParent({ node }) {\n                    const bbox = node.getBBox()\n                    return this.getNodes().filter((node) => {\n                        const data = node.getData()\n                        if (data && data.composite) {\n                            const targetBBox = node.getBBox()\n                            return bbox.isIntersectWithRect(targetBBox)\n                        }\n                        return false\n                    })\n                },\n            },\n        })\n            .use(\n                new Transform({\n                    resizing: true,\n                    rotating: true,\n                })\n            )\n            .use(\n                new Selection({\n                    enabled: true,\n                    rubberband: true,\n                    showNodeSelectionBox: true,\n                })\n            )\n            .use(\n                new Snapline({\n                    enabled: true,\n                })\n            )\n            .use(\n                new Keyboard({\n                    enabled: true,\n                })\n            )\n            .use(\n                new Clipboard({\n                    enabled: true,\n                })\n            )\n            .use(\n                new History({\n                    enabled: true,\n                })\n            )\n\n        // Init keymap\n        graph.bindKey(['meta+c', 'ctrl+c'], () => {\n            const cells = graph.getSelectedCells()\n            if (cells.length) {\n                graph.copy(cells)\n            }\n            return false\n        })\n        graph.bindKey(['meta+x', 'ctrl+x'], () => {\n            const cells = graph.getSelectedCells()\n            if (cells.length) {\n                graph.cut(cells)\n            }\n            return false\n        })\n        graph.bindKey(['meta+v', 'ctrl+v'], () => {\n            if (!graph.isClipboardEmpty()) {\n                const cells = graph.paste({ offset: 32 })\n                graph.cleanSelection()\n                graph.select(cells)\n            }\n            return false\n        })\n        graph.bindKey(['meta+z', 'ctrl+z'], () => {\n            if (graph.canUndo()) {\n                graph.undo()\n            }\n            return false\n        })\n        graph.bindKey(['meta+shift+z', 'ctrl+shift+z'], () => {\n            if (graph.canRedo()) {\n                graph.redo()\n            }\n            return false\n        })\n        graph.bindKey(['meta+a', 'ctrl+a'], () => {\n            const nodes = graph.getNodes()\n            if (nodes) {\n                graph.select(nodes)\n            }\n        })\n        graph.bindKey(['backspace', 'delete'], () => {\n            const cells = graph.getSelectedCells()\n            if (cells.length) {\n                graph.removeCells(cells)\n            }\n        })\n\n        // Init node ports\n        const showPorts = (ports, show) => {\n            for (let i = 0, len = ports.length; i < len; i = i + 1) {\n                ports[i].style.visibility = show ? 'visible' : 'hidden'\n            }\n        }\n        graph.on('node:mouseenter', () => {\n            const container = refContainer.current\n            const ports = container.querySelectorAll('.x6-port-body')\n            showPorts(ports, true)\n        })\n        graph.on('node:mouseleave', () => {\n            const container = refContainer.current\n            const ports = container.querySelectorAll('.x6-port-body')\n            showPorts(ports, false)\n        })\n\n        // Init stencil\n        const stencil = new Stencil({\n            title: 'Components',\n            target: graph,\n            stencilGraphWidth: 350,\n            stencilGraphHeight: 100,\n            groups: [\n                { name: 'STATE', title: 'state' },\n                { name: 'DELAY', title: 'Delay(t)' },\n                {\n                    name: 'DELAY_EXP',\n                    title: 'DelayExp(rate)',\n                },\n                { name: 'DELAY_UNIF', title: 'DelayUnif(a, b)' },\n                {\n                    name: 'DELAY_NORMAL',\n                    title: 'Normal(a, u)',\n                },\n                { name: 'PROBABILITY_NODE', title: 'Probability' },\n            ],\n        })\n        refStencilContainer.current.appendChild(stencil.container)\n        // Init stencil group\n        const r1 = graph.createNode({\n            shape: 'state',\n            x: 180,\n            y: 40,\n            data: { title: 'NEW STATE', exp: '', inv: '', composite: false },\n            ports: { ...ports },\n        })\n        const r2 = graph.createNode({\n            shape: 'delay-exp',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'c',\n                rate: 2,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r3 = graph.createNode({\n            shape: 'delay-unif',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'c',\n                a: 10,\n                b: 20,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r4 = graph.createNode({\n            shape: 'delay',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'c',\n                t: 5,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r5 = graph.createNode({\n            shape: 'delay-normal',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'v',\n                a: 10,\n                u: 5,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r6 = graph.createNode({\n            shape: 'probability-node',\n            x: 180,\n            y: 40,\n            data: {},\n            ports: { ...ports },\n        })\n        stencil.load([r1], 'STATE')\n        stencil.load([r2], 'DELAY_EXP')\n        stencil.load([r3], 'DELAY_UNIF')\n        stencil.load([r4], 'DELAY')\n        stencil.load([r5], 'DELAY_NORMAL')\n        stencil.load([r6], 'PROBABILITY_NODE')\n\n        // Init node&edge action\n        graph.on('cell:click', ({ cell }) => {\n            setState({\n                shape: cell.shape,\n                id: cell.id,\n                data: cell.data ? cell.data : {},\n            })\n        })\n\n        setG(graph)\n    }, [refContainer, refStencilContainer])\n\n    const removeAllCells = () => {\n        G.clearCells()\n    }\n\n    const download = (filename, content, b64 = true) => {\n        if (b64) {\n            content = Base64.encode(content)\n        }\n\n        const downfile = new File([content], filename, {\n            type: 'text/plain',\n        })\n        const tmpLink = document.createElement('a')\n        const objectUrl = URL.createObjectURL(downfile)\n        tmpLink.href = objectUrl\n        tmpLink.download = downfile.name\n        document.body.appendChild(tmpLink)\n        tmpLink.click()\n\n        document.body.removeChild(tmpLink)\n        URL.revokeObjectURL(objectUrl)\n    }\n\n    const loadData = (content) => {\n        const raw = Base64.decode(content)\n        const raw_obj = JSON.parse(raw)\n        G.fromJSON(raw_obj)\n    }\n\n    return (\n        <>\n            <div className=\"topbar\">\n                <div className=\"topbar-left\">\n                    <div className=\"topbar-left-title\">\n                        <Button type=\"text\" size=\"small\">\n                            <b>StohM Charts</b>\n                        </Button>\n                    </div>\n\n                    <div className=\"topbar-left-menu\">\n                        <Space wrap size=\"middle\">\n                            <Title\n                                title={title}\n                                onTitleChange={(newTitle) => {\n                                    setTitle(newTitle)\n                                }}\n                            />\n                            {/* New File */}\n                            <Button\n                                size=\"small\"\n                                type=\"primary\"\n                                onClick={() => {\n                                    removeAllCells()\n                                }}\n                            >\n                                New\n                            </Button>\n                            {/* Load File */}\n                            <Upload\n                                showUploadList={false}\n                                beforeUpload={(file) => {\n                                    return new Promise((resolve) => {\n                                        const filename = file.name.substring(\n                                            0,\n                                            file.name.lastIndexOf('.')\n                                        )\n                                        const reader = new FileReader()\n                                        reader.readAsText(file)\n                                        reader.onload = () => {\n                                            G.clearCells()\n                                            loadData(reader.result)\n                                            setTitle(filename)\n                                        }\n                                    })\n                                }}\n                            >\n                                <Button size=\"small\">Load</Button>\n                            </Upload>\n                            {/* Save File */}\n                            <Button\n                                size=\"small\"\n                                onClick={() => {\n                                    const graph_data = G.toJSON()\n                                    download(\n                                        `${title}.smc`,\n                                        JSON.stringify(graph_data)\n                                    )\n                                }}\n                            >\n                                Save\n                            </Button>\n                            {/* Export to Uppaal xml */}\n                            <Button\n                                size=\"small\"\n                                onClick={() => {\n                                    const cells = G.toJSON()\n                                    const output = convert(title, cells)\n                                    const xml = toUppaalXML(output)\n                                    download(`${title}.xml`, xml, false)\n                                }}\n                            >\n                                Export\n                            </Button>\n                            <Dropdown\n                                menu={{\n                                    items: [{ key: '1', label: 'Case 1' }],\n                                    onClick: ({ key }) => {\n                                        let data\n                                        if (key === '1') {\n                                            data = test_data_a\n                                        }\n                                        G.clearCells()\n                                        G.fromJSON(data)\n                                    },\n                                }}\n                            >\n                                <Button size=\"small\">\n                                    Examples\n                                    <DownOutlined />\n                                </Button>\n                            </Dropdown>\n                        </Space>\n                    </div>\n                </div>\n                <div className=\"topbar-right\">\n                    <Button\n                        type=\"text\"\n                        size=\"small\"\n                        icon={<GithubFilled />}\n                        href=\"https://github.com/beiyanpiki/stohMCharts\"\n                        target=\"__blank\"\n                    />\n                </div>\n            </div>\n            <div className=\"app\">\n                <div className=\"app-stencil\" ref={refStencilContainer} />\n                <div className=\"app-content\" ref={refContainer} />\n                <div className=\"app-sidebar\">\n                    {(() => {\n                        switch (state.shape) {\n                            case 'state':\n                                return (\n                                    <StateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            inv: state.data.inv,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    inv: newState.inv,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                inv: newState.inv,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay-exp':\n                                return (\n                                    <DelayExpStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            variable: state.data.variable,\n                                            rate: state.data.rate,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                data: {\n                                                    shape: state.shape,\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    variable: newState.variable,\n                                                    rate: newState.rate,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                variable: newState.variable,\n                                                rate: newState.rate,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay-unif':\n                                return (\n                                    <DelayUnifStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            variable: state.data.variable,\n                                            a: state.data.a,\n                                            b: state.data.b,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    variable: newState.variable,\n                                                    a: newState.a,\n                                                    b: newState.b,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                variable: newState.variable,\n                                                a: newState.a,\n                                                b: newState.b,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay':\n                                return (\n                                    <DelayStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            variable: state.data.variable,\n                                            t: state.data.t,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    variable: newState.variable,\n                                                    t: newState.t,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                variable: newState.variable,\n                                                t: newState.t,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay-normal':\n                                return (\n                                    <DelayNormalStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            inv: state.data.inv,\n                                            variable: state.data.variable,\n                                            a: state.data.a,\n                                            u: state.data.u,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    inv: newState.inv,\n                                                    variable: newState.variable,\n                                                    a: newState.a,\n                                                    u: newState.u,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                inv: newState.inv,\n                                                variable: newState.variable,\n                                                a: newState.a,\n                                                u: newState.u,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'transition':\n                                return (\n                                    <TransitionSidebar\n                                        state={{\n                                            id: state.id,\n                                            guard: state.data.guard,\n                                            sync: state.data.sync,\n                                            update: state.data.update,\n                                        }}\n                                        onChange={(newState) => {\n                                            console.log(newState)\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    guard: newState.guard,\n                                                    sync: newState.sync,\n                                                    update: newState.update,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                guard: newState.guard,\n                                                sync: newState.sync,\n                                                update: newState.update,\n                                            })\n                                        }}\n                                        onSwitch={() => {\n                                            setState({\n                                                id: state.id,\n                                                shape: 'probability-transition',\n                                                data: {\n                                                    sync: '',\n                                                    update: '',\n                                                    weight: 0,\n                                                },\n                                            })\n                                            const cell = G.getCellById(state.id)\n                                            cell.prop(\n                                                'shape',\n                                                'probability-transition'\n                                            )\n                                            cell.attr('line/stroke', '#1890ff')\n                                            cell.attr('line/strokeDasharray', 5)\n                                            cell.setData({\n                                                sync: '',\n                                                update: '',\n                                                weight: 0,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'probability-transition':\n                                return (\n                                    <ProbabilityTransitionSidebar\n                                        state={{\n                                            id: state.id,\n                                            weight: state.data.weight,\n                                            sync: state.data.sync,\n                                            update: state.data.update,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    weight: newState.weight,\n                                                    sync: newState.sync,\n                                                    update: newState.update,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                weight: newState.weight,\n                                                sync: newState.sync,\n                                                update: newState.update,\n                                            })\n                                        }}\n                                        onSwitch={() => {\n                                            setState({\n                                                id: state.id,\n                                                shape: 'transition',\n                                                data: {\n                                                    sync: '',\n                                                    update: '',\n                                                    guard: '',\n                                                },\n                                            })\n                                            const cell = G.getCellById(state.id)\n                                            cell.prop('shape', 'transition')\n                                            cell.attr('line/stroke', '#faad14')\n                                            cell.attr(\n                                                'line/strokeDasharray',\n                                                null\n                                            )\n                                            cell.setData({\n                                                sync: '',\n                                                update: '',\n                                                weight: 0,\n                                            })\n                                        }}\n                                    />\n                                )\n                            default:\n                                return <div></div>\n                        }\n                    })()}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Layout\n","import xml2js from 'xml-js'\n\nconst baseXML = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>\n<nta>\n\\t<declaration>// Place global declarations here.</declaration>\n\\t<template>\n\\t\\t<name>Empty Template</name>\n\\t\\t<declaration>// Place local declarations here.</declaration>\n\\t</template>\n\\t<system>// Place template instantiations here.\nProcess = Template();\n// List one or more processes to be composed into a system.\nsystem Process;\n    </system>\n\\t<queries>\n\\t\\t<query>\n\\t\\t\\t<formula></formula>\n\\t\\t\\t<comment></comment>\n\\t\\t</query>\n\\t</queries>\n</nta>`\n\nexport const toUppaalXML = (datas) => {\n    let result1 = xml2js.xml2js(baseXML, { compact: true })\n    console.log(result1.nta)\n    let global_declaretion = '\\n'\n    for (const chan of datas[0].chan) {\n        global_declaretion += `broadcast chan ${chan};\\n`\n    }\n    for (const variable of datas[0].variable) {\n        global_declaretion += `clock ${variable};\\n`\n    }\n    result1.nta.declaration._text += global_declaretion\n\n    let templates_name = []\n\n    result1.nta.template = []\n    for (const data of datas) {\n        templates_name.push(data.name)\n\n        let x = 0,\n            y = 0\n\n        const tpl = {\n            name: { _text: data.name },\n            declaration: { _text: '// Place local declarations here.' },\n            location: [],\n            branchpoint: [],\n            init: {},\n            transition: [],\n        }\n        // Add location and branchpoint\n        data.vertices.forEach((node_id) => {\n            x += 100\n            y += 0\n            const node_data = data.data.get(node_id)\n            const node_shape = node_data.shape\n            // Insert node\n            let obj = {\n                _attributes: { id: node_id, x: x, y: y },\n            }\n            if (node_shape === 'location') {\n                const { title, invariant, rate_exp } = node_data.data\n                if (title !== '') {\n                    obj.name = {\n                        _attributes: { x: x, y: y + 20 },\n                        _text: title,\n                    }\n                }\n                if (invariant !== '' || rate_exp !== '') {\n                    obj.label = []\n                    if (invariant !== '') {\n                        obj.label.push({\n                            _attributes: { kind: 'invariant', x: x, y: y + 40 },\n                            _text: invariant,\n                        })\n                    }\n                    if (rate_exp !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'exponentialrate',\n                                x: x,\n                                y: y + 60,\n                            },\n                            _text: `${rate_exp}`,\n                        })\n                    }\n                }\n                tpl.location.push(obj)\n            } else if (node_shape === 'branch') {\n                tpl.branchpoint.push(obj)\n            }\n            // Insert edge\n            const source_id = node_id\n            const edges = data.adjList.get(node_id)\n            edges.forEach((edge_id) => {\n                const edge_data = data.data.get(edge_id)\n                obj = {\n                    source: { _attributes: { ref: source_id } },\n                    target: { _attributes: { ref: edge_data.target } },\n                    label: [],\n                }\n                if (edge_data.shape === 'transition') {\n                    const { guard, sync, update } = edge_data.data\n                    if (guard !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'guard',\n                                x: x + 50,\n                                y: y + 10,\n                            },\n                            _text: guard,\n                        })\n                    }\n                    if (sync !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'synchronisation',\n                                x: x + 50,\n                                y: y + 20,\n                            },\n                            _text: sync,\n                        })\n                    }\n                    if (update !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'assignment',\n                                x: x + 50,\n                                y: y + 30,\n                            },\n                            _text: update,\n                        })\n                    }\n                } else if (edge_data.shape === 'prob-transition') {\n                    const { update, sync, weight } = edge_data.data\n                    if (weight !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'probability',\n                                x: x + 50,\n                                y: y + 10,\n                            },\n                            _text: `${weight}`,\n                        })\n                    }\n                    if (sync !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'synchronisation',\n                                x: x + 50,\n                                y: y + 20,\n                            },\n                            _text: sync,\n                        })\n                    }\n                    if (update !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'update',\n                                x: x + 50,\n                                y: y + 30,\n                            },\n                            _text: update,\n                        })\n                    }\n                }\n                tpl.transition.push(obj)\n            })\n        })\n        tpl.init = { _attributes: { ref: data.root } }\n\n        result1.nta.template.push(tpl)\n    }\n\n    let process = '// Place template instantiations here.\\n'\n    for (const template_name of templates_name) {\n        process += `${template_name}_1 = ${template_name}();\\n`\n    }\n    process += 'system '\n    for (const template_name of templates_name) {\n        process += `${template_name}_1,`\n    }\n    process = process.substring(0, process.length - 1) + ';'\n    result1.nta.system._text = process\n\n    const newXml = xml2js.js2xml(result1, { compact: true })\n    return newXml\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport Layout from './Layout'\nimport 'normalize.css'\nimport 'vfonts/Lato.css'\nimport 'vfonts/FiraCode.css'\nimport './global.css'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n    <React.StrictMode>\n        <Layout />\n    </React.StrictMode>\n)\n"],"sourceRoot":""}