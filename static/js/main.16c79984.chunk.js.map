{"version":3,"sources":["components/State.js","components/DelayExp.js","components/DelayUnif.js","components/Delay.js","components/DelayNormal.js","sidebar/StateInfo.js","sidebar/DelayExpStateInfo.js","sidebar/DelayUnifStateInfo.js","sidebar/DelayStateInfo.js","sidebar/DelayNormalStateInfo.js","sidebar/TransitionSidebar.js","sidebar/ProbabilityTransitionSidebar.js","utils/random.js","utils/toUppaal.js","algorithm/convert.js","algorithm/test_data.js","Layout.js","index.js"],"names":["State","_ref","_node$data","node","data","title","exp","inv","composite","react_default","a","createElement","className","concat","DelayExpState","variable","rate","DelayUnifState","b","DelayState","t","DelayNormalState","u","StateInfo","state","onChange","_Form$useForm","Form","useForm","form","Object","slicedToArray","useEffect","resetFields","es_form","labelCol","span","wrapperCol","initialValues","id","onFinish","values","objectSpread","Item","label","name","input","disabled","valuePropName","offset","es_checkbox","es_button","type","htmlType","block","DelayExpStateInfo","input_number","DelayUnifStateInfo","DelayStateInfo","DelayNormalStateInfo","TransitionSidebar","onSwitch","guard","sync","update","es_radio","Group","defaultValue","buttonStyle","e","target","value","Button","ProbabilityTransitionSidebar","weight","randomString","randomLen","min","max","str","range","arr","Math","round","random","i","length","generateID","toUppaalXML","datas","result1","xml2js","compact","nta","template","_step","_iterator","_createForOfIteratorHelper","_loop","x","y","tpl","_text","declaration","location","branchpoint","init","transition","vertices","forEach","node_id","node_data","get","node_shape","shape","obj","_attributes","_node_data$data","invariant","rate_exp","push","kind","source_id","adjList","edge_id","edge_data","source","ref","_edge_data$data","_edge_data$data2","root","s","n","done","err","f","js2xml","Graph","classCallCheck","this","Map","createClass","key","set","_this","cnt","v","has","min_times","min_node","convert_createForOfIteratorHelper","_ref2","times","nodes","edges","_this2","_ref3","add_vertices","_ref4","add_edge","cell","getRoot","convertNode","vis","G","A","includes","target_id","target_data","node_data_raw","edge_data_raw","new_node_id","new_edge_1","_node_data$data2","my_prob","sum_prob","edge","ed","prob","convert","cell_map","cells","composite_nodes","composite_edges","composite_G","composite_A","loadData","composite_node","_composite_nodes","_i","undefined","children","cell_id","cell_data","sub_G","sub_A","test_data_a","position","size","width","height","view","ports","groups","top","attrs","circle","r","magnet","stroke","strokeWidth","fill","style","visibility","right","bottom","left","items","group","zIndex","parent","visible","router","connector","port","line","strokeDasharray","register","component","effect","registerNode","inherit","body","rx","ry","registerEdge","targetMarker","Layout","refContainer","useRef","refStencilContainer","_useState","useState","_useState2","setState","_useState3","_useState4","setG","graph","container","current","grid","mousewheel","enabled","zoomAtMousePosition","modifiers","minScale","maxScale","highlighting","embedding","args","padding","magnetAdsorbed","connecting","anchor","connectionPoint","allowBlank","snap","radius","createEdge","validateConnection","targetMagnet","findParent","bbox","getBBox","getNodes","filter","getData","targetBBox","isIntersectWithRect","use","Transform","resizing","rotating","Selection","rubberband","showNodeSelectionBox","Snapline","Keyboard","Clipboard","History","bindKey","getSelectedCells","copy","cut","isClipboardEmpty","paste","cleanSelection","select","canUndo","undo","canRedo","redo","removeCells","on","clearCells","fromJSON","toJSON","output","xml","console","log","showPorts","show","len","querySelectorAll","stencil","Stencil","stencilGraphWidth","stencilGraphHeight","appendChild","r1","createNode","r2","r3","r4","r5","r6","load","download","filename","content","arguments","Base64","encode","downfile","File","tmpLink","document","objectUrl","URL","createObjectURL","href","click","removeChild","revokeObjectURL","Fragment","space","wrap","onClick","upload","showUploadList","beforeUpload","file","Promise","resolve","reader","FileReader","readAsText","onload","raw","decode","raw_obj","JSON","parse","result","graph_data","stringify","dropdown","menu","DownOutlined","icon","GithubFilled","sidebar_StateInfo","newState","getCellById","setData","sidebar_DelayExpStateInfo","sidebar_DelayUnifStateInfo","sidebar_DelayStateInfo","sidebar_DelayNormalStateInfo","sidebar_TransitionSidebar","prop","attr","sidebar_ProbabilityTransitionSidebar","ReactDOM","createRoot","getElementById","render","StrictMode","src_Layout"],"mappings":"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","file":"static/js/main.16c79984.chunk.js","sourcesContent":["import React from 'react'\n\nconst State = ({ node }) => {\n    const { title, exp, inv, composite } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {inv}\n            </span>\n        </div>\n    )\n}\n\nexport default State\n","import React from 'react'\nconst DelayExpState = ({ node }) => {\n    const { title, composite, exp, variable, rate } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {variable} = DelayExp({rate})\n            </span>\n        </div>\n    )\n}\n\nexport default DelayExpState\n","import React from 'react'\nconst DelayUnifState = ({ node }) => {\n    const { title, composite, exp, variable, a, b } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {variable} = DelayUnif({a}, {b})\n            </span>\n        </div>\n    )\n}\n\nexport default DelayUnifState\n","import React from 'react'\n\nconst DelayState = ({ node }) => {\n    const { title, composite, exp, variable, t } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {variable} = Delay({t})\n            </span>\n        </div>\n    )\n}\n\nexport default DelayState\n","import React from 'react'\nconst DelayNormalState = ({ node }) => {\n    const { title, composite, variable, a, u, inv } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {variable} = Normal({a}, {u})\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {inv}\n            </span>\n        </div>\n    )\n}\n\nexport default DelayNormalState\n","import { Button, Checkbox, Form, Input } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst StateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                inv: state.inv ? state.inv : '',\n                exp: state.exp ? state.exp : '',\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Inv.\" name=\"inv\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 20 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default StateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayExpStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                exp: state.exp ? state.exp : '',\n                variable: state.variable ? state.variable : '',\n                rate: state.rate ? state.rate : 2,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Rate\" name=\"rate\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayExpStateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayUnifStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                exp: state.exp ? state.exp : '',\n                variable: state.variable ? state.variable : '',\n                a: state.a ? state.a : 10,\n                b: state.b ? state.b : 20,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"a\" name=\"a\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item label=\"b\" name=\"b\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayUnifStateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                exp: state.exp ? state.exp : '',\n                variable: state.variable ? state.variable : '',\n                t: state.t ? state.t : 5,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"t\" name=\"t\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayStateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayNormalStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                inv: state.inv ? state.inv : '',\n                variable: state.variable ? state.variable : '',\n                a: state.a ? state.a : 10,\n                u: state.u ? state.u : 20,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"a\" name=\"a\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item label=\"u\" name=\"u\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item label=\"Inv.\" name=\"inv\">\n                <Input />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayNormalStateInfo\n","import { Button, Form, Input, Radio } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst TransitionSidebar = ({ state, onChange, onSwitch }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                guard: state.guard,\n                sync: state.sync,\n                update: state.update,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"type\">\n                <Radio.Group\n                    defaultValue=\"tran\"\n                    buttonStyle=\"solid\"\n                    onChange={(e) => {\n                        if (e.target.value === 'prob') {\n                            onSwitch()\n                        }\n                    }}\n                >\n                    <Radio.Button value=\"tran\">Transition</Radio.Button>\n                    <Radio.Button value=\"prob\">Probability</Radio.Button>\n                </Radio.Group>\n            </Form.Item>\n\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"guard\" name=\"guard\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"sync\" name=\"sync\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"update\" name=\"update\">\n                <Input />\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default TransitionSidebar\n","import { Button, Form, Input, InputNumber, Radio } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst ProbabilityTransitionSidebar = ({ state, onChange, onSwitch }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                weight: state.weight,\n                sync: state.sync,\n                update: state.update,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"type\">\n                <Radio.Group\n                    defaultValue=\"prob\"\n                    buttonStyle=\"solid\"\n                    onChange={(e) => {\n                        if (e.target.value === 'tran') {\n                            onSwitch()\n                        }\n                    }}\n                >\n                    <Radio.Button value=\"tran\">Transition</Radio.Button>\n                    <Radio.Button value=\"prob\">Probability</Radio.Button>\n                </Radio.Group>\n            </Form.Item>\n\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"sync\" name=\"sync\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"update\" name=\"update\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"weight\" name=\"weight\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default ProbabilityTransitionSidebar\n","export const randomString = (randomLen, min, max) => {\n    let str = '',\n        range = min,\n        arr = [\n            '0',\n            '1',\n            '2',\n            '3',\n            '4',\n            '5',\n            '6',\n            '7',\n            '8',\n            '9',\n            'a',\n            'b',\n            'c',\n            'd',\n            'e',\n            'f',\n            'g',\n            'h',\n            'i',\n            'j',\n            'k',\n            'l',\n            'm',\n            'n',\n            'o',\n            'p',\n            'q',\n            'r',\n            's',\n            't',\n            'u',\n            'v',\n            'w',\n            'x',\n            'y',\n            'z',\n            'A',\n            'B',\n            'C',\n            'D',\n            'E',\n            'F',\n            'G',\n            'H',\n            'I',\n            'J',\n            'K',\n            'L',\n            'M',\n            'N',\n            'O',\n            'P',\n            'Q',\n            'R',\n            'S',\n            'T',\n            'U',\n            'V',\n            'W',\n            'X',\n            'Y',\n            'Z',\n        ]\n    // 随机产生\n    if (randomLen) {\n        range = Math.round(Math.random() * (max - min)) + min\n    }\n    for (let i = 0; i < range; i++) {\n        let pos = Math.round(Math.random() * (arr.length - 1))\n        str += arr[pos]\n    }\n    return str\n}\n\nexport const generateID = () => {\n    return `${randomString(false, 8)}-${randomString(false, 4)}-${randomString(\n        false,\n        4\n    )}-${randomString(false, 4)}-${randomString(false, 12)}`\n}\n","import xml2js from 'xml-js'\n\nconst baseXML = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>\n<nta>\n\\t<declaration>// Place global declarations here.</declaration>\n\\t<template>\n\\t\\t<name>Empty Template</name>\n\\t\\t<declaration>// Place local declarations here.</declaration>\n\\t</template>\n\\t<system>// Place template instantiations here.\nProcess = Template();\n// List one or more processes to be composed into a system.\nsystem Process;\n    </system>\n\\t<queries>\n\\t\\t<query>\n\\t\\t\\t<formula></formula>\n\\t\\t\\t<comment></comment>\n\\t\\t</query>\n\\t</queries>\n</nta>`\n\nexport const toUppaalXML = (datas) => {\n    let result1 = xml2js.xml2js(baseXML, { compact: true })\n    result1.nta.template = []\n\n    for (const data of datas) {\n        let x = 0,\n            y = 0\n        const tpl = {\n            name: { _text: data.name },\n            declaration: { _text: '// Place local declarations here.' },\n            location: [],\n            branchpoint: [],\n            init: {},\n            transition: [],\n        }\n        // Add location and branchpoint\n        data.vertices.forEach((node_id) => {\n            x += 100\n            y += 0\n            const node_data = data.data.get(node_id)\n            const node_shape = node_data.shape\n            // Insert node\n            let obj = {\n                _attributes: { id: node_id, x: x, y: y },\n            }\n            if (node_shape === 'location') {\n                const { title, invariant, rate_exp } = node_data.data\n                if (title !== '') {\n                    obj.name = {\n                        _attributes: { x: x, y: y + 20 },\n                        _text: title,\n                    }\n                }\n                if (invariant !== '' || rate_exp !== '') {\n                    obj.label = []\n                    if (invariant !== '') {\n                        obj.label.push({\n                            _attributes: { kind: 'invariant', x: x, y: y + 40 },\n                            _text: invariant,\n                        })\n                    }\n                    if (rate_exp !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'exponentialrate',\n                                x: x,\n                                y: y + 60,\n                            },\n                            _text: `${rate_exp}`,\n                        })\n                    }\n                }\n                tpl.location.push(obj)\n            } else if (node_shape === 'branch') {\n                tpl.branchpoint.push(obj)\n            }\n            // Insert edge\n            const source_id = node_id\n            const edges = data.adjList.get(node_id)\n            edges.forEach((edge_id) => {\n                const edge_data = data.data.get(edge_id)\n                obj = {\n                    source: { _attributes: { ref: source_id } },\n                    target: { _attributes: { ref: edge_data.target } },\n                    label: [],\n                }\n                if (edge_data.shape === 'transition') {\n                    const { guard, sync, update } = edge_data.data\n                    if (guard !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'guard',\n                                x: x + 50,\n                                y: y + 10,\n                            },\n                            _text: guard,\n                        })\n                    }\n                    if (sync !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'synchronisation',\n                                x: x + 50,\n                                y: y + 20,\n                            },\n                            _text: sync,\n                        })\n                    }\n                    if (update !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'assignment',\n                                x: x + 50,\n                                y: y + 30,\n                            },\n                            _text: update,\n                        })\n                    }\n                } else if (edge_data.shape === 'prob-transition') {\n                    const { update, sync, weight } = edge_data.data\n                    if (weight !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'probability',\n                                x: x + 50,\n                                y: y + 10,\n                            },\n                            _text: `${weight}`,\n                        })\n                    }\n                    if (sync !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'synchronisation',\n                                x: x + 50,\n                                y: y + 20,\n                            },\n                            _text: sync,\n                        })\n                    }\n                    if (update !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'update',\n                                x: x + 50,\n                                y: y + 30,\n                            },\n                            _text: update,\n                        })\n                    }\n                }\n                tpl.transition.push(obj)\n            })\n        })\n        tpl.init = { _attributes: { ref: data.root } }\n\n        result1.nta.template.push(tpl)\n    }\n\n    const newXml = xml2js.js2xml(result1, { compact: true })\n    return newXml\n}\n","import { generateID } from '../utils'\n\nclass Graph {\n    constructor() {\n        this.vertices = [] // Save ID\n        this.data = new Map() // for node, {id: data, shape}; for edge, {id: data, shape, target}\n        this.adjList = new Map() // {id: [edge_id1, edge_id2]}\n        this.root = null\n    }\n\n    add_vertices(id, shape, data) {\n        this.vertices.push(id)\n        this.data.set(id, { shape, data })\n        this.adjList.set(id, [])\n    }\n\n    add_edge(id, shape, data, source, target) {\n        this.adjList.get(source).push(id)\n        this.data.set(id, { shape, data, target })\n    }\n\n    getRoot() {\n        const cnt = new Map()\n        this.vertices.forEach((v) => {\n            cnt.set(v, 0)\n        })\n        for (let source in this.adjList) {\n            const edges = this.adjList[source]\n            edges.forEach((edge_id) => {\n                const target = this.data.get(edge_id).target\n                if (cnt.has(target)) {\n                    cnt.set(target, cnt.get(target) + 1)\n                }\n            })\n        }\n        let min_times = 9999999,\n            min_node = ''\n        for (let [node_id, times] of cnt) {\n            if (times <= min_times) {\n                min_times = times\n                min_node = node_id\n            }\n        }\n        this.root = min_node\n    }\n\n    loadData(nodes, edges) {\n        nodes.forEach(({ id, shape, data }) => {\n            this.add_vertices(id, shape, data)\n        })\n        edges.forEach(({ id, shape, data, source, target }) => {\n            this.add_edge(id, shape, data, source.cell, target.cell)\n        })\n        this.getRoot()\n    }\n}\n\nconst convertNode = (node_id, vis, G, A) => {\n    if (vis.has(node_id)) {\n        return\n    }\n    vis.set(node_id, true)\n\n    const node_data = G.data.get(node_id)\n    // If node is not exist, create it.\n    if (!A.vertices.includes(node_id)) {\n        A.add_vertices(\n            node_id,\n            node_data.shape === 'probability-node' ? 'branch' : 'location',\n            {\n                title: node_data.data.title,\n                invariant: '',\n                rate_exp: '',\n            }\n        )\n    }\n    const edges = G.adjList.get(node_id)\n    edges.forEach((edge_id) => {\n        const edge_data = G.data.get(edge_id)\n        const target_id = edge_data.target\n\n        // If target node is not exist, create it.\n        const target_data = G.data.get(target_id)\n        if (!A.vertices.includes(target_id)) {\n            A.add_vertices(\n                target_id,\n                target_data.shape === 'probability-node'\n                    ? 'branch'\n                    : 'location',\n                {\n                    title: target_data.data.title,\n                    invariant: '',\n                    rate_exp: '',\n                }\n            )\n        }\n        // Link source to target\n        if (node_data.shape !== 'delay') {\n            if (node_data.shape === 'probability-node') {\n                A.add_edge(\n                    edge_id,\n                    'prob-transition',\n                    {\n                        update: edge_data.data.update,\n                        sync: edge_data.data.sync,\n                        weight: edge_data.data.weight,\n                    },\n                    node_id,\n                    target_id\n                )\n            } else {\n                A.add_edge(\n                    edge_id,\n                    'transition',\n                    {\n                        guard: edge_data.data.guard,\n                        sync: edge_data.data.sync,\n                        update: edge_data.data.update,\n                    },\n                    node_id,\n                    target_id\n                )\n            }\n        }\n\n        // DelayUnif(a, b)\n        if (node_data.shape === 'delay-unif') {\n            // Algorithm 1: Line 7\n            const { variable, a, b } = node_data.data\n            const node_data_raw = A.data.get(node_id)\n            A.data.set(node_id, {\n                ...node_data_raw,\n                data: {\n                    ...node_data_raw.data,\n                    invariant: `${variable} <= ${b}`,\n                },\n            })\n\n            const edge_data_raw = A.data.get(edge_id)\n            A.data.set(edge_id, {\n                ...edge_data_raw,\n                data: {\n                    ...edge_data_raw.data,\n                    guard: `${variable} >= ${a}`,\n                },\n            })\n        }\n        // DelayExp(rate)\n        if (node_data.shape === 'delay-exp') {\n            // Algorithm 1: Line 8\n            const { rate } = node_data.data\n            const node_data_raw = A.data.get(node_id)\n            A.data.set(node_id, {\n                ...node_data_raw,\n                data: {\n                    ...node_data_raw.data,\n                    rate_exp: rate,\n                },\n            })\n        }\n        // Delay(t)\n        if (node_data.shape === 'delay') {\n            // Algorithm 1: Line 9\n            // Create New Node and Link node\n            const new_node_id = generateID()\n            A.add_vertices(new_node_id, 'location', {\n                title: '',\n                invariant: `${node_data.data.variable} <= ${node_data.data.t}`,\n                rate_exp: '',\n            })\n            const new_edge_1 = generateID()\n            A.add_edge(\n                new_edge_1,\n                'transition',\n                {\n                    guard: '',\n                    sync: '',\n                    update: `${node_data.data.variable} = 0`,\n                },\n                node_id,\n                new_node_id\n            )\n            A.add_edge(\n                edge_id,\n                'transition',\n                {\n                    guard: `${node_data.data.variable} == ${node_data.data.t}`,\n                    sync: edge_data.data.sync,\n                    update: edge_data.data.update,\n                },\n                new_node_id,\n                target_id\n            )\n        }\n        // Normal(a, u)\n        if (node_data.shape === 'normal') {\n            // Algorithm 1: Line 10\n            const { variable, a, u } = node_data.data\n            const edge_data_raw = A.data.get(edge_id)\n            A.data.set(edge_id, {\n                ...edge_data_raw,\n                data: {\n                    ...edge_data_raw.data,\n                    update: `${variable} = Norm(${a}, ${u})`,\n                },\n            })\n        }\n        // Probability\n        if (node_data.shape === 'probability-node') {\n            // Algorithm 1: Line 13\n            const my_prob = edge_data.data.weight\n            let sum_prob = 0\n            edges.forEach((edge) => {\n                const ed = G.data.get(edge)\n                if (ed.shape === 'probability-transition') {\n                    sum_prob += ed.data.weight\n                }\n            })\n            const prob = my_prob / sum_prob\n            const edge_data_raw = A.data.get(edge_id)\n            A.data.set(edge_id, {\n                ...edge_data_raw,\n                data: {\n                    ...edge_data_raw.data,\n                    weight: prob,\n                },\n            })\n        }\n        // Action\n        // if (node_id === target_id) {\n        //     console.log(\"Self Loop!!\", edge_id)\n        //     // Algorithm 1: Line 11\n        //     A.add_edge(edge_id, 'transition', {\n        //         guard: edge_data.data.guard,\n        //         sync: edge_data.data.sync,\n        //         update: edge_data.data.update\n        //     }, node_id, target_id)\n        // }\n        convertNode(target_id, vis, G, A)\n    })\n}\n\nexport const convert = (data) => {\n    let template = []\n\n    let cell_map = new Map()\n    data.cells.forEach((cell) => {\n        cell_map.set(cell.id, cell)\n    })\n\n    // Find all composite node\n    let composite_nodes = [],\n        composite_edges = []\n    data.cells.forEach((cell) => {\n        if ('composite' in cell.data && cell.data.composite) {\n            composite_nodes.push(cell)\n        }\n    })\n    data.cells.forEach((cell) => {\n        if (\n            cell.shape === 'transition' ||\n            cell.shape === 'probability-transition'\n        ) {\n            if (!('parent' in cell) || cell.source.cell === cell.target.cell) {\n                composite_edges.push(cell)\n            }\n        }\n    })\n    let composite_G = new Graph(),\n        composite_A = new Graph()\n    composite_G.loadData(composite_nodes, composite_edges)\n    let vis = new Map()\n\n    if (composite_G.vertices.length > 0) {\n        convertNode(composite_G.root, vis, composite_G, composite_A)\n    }\n\n    template.push({\n        name: 'overall',\n        vertices: composite_A.vertices,\n        data: composite_A.data,\n        adjList: composite_A.adjList,\n        root: composite_G.root,\n    })\n\n    // Find all child node\n    for (let composite_node of composite_nodes) {\n        if (composite_node.children === undefined) {\n            break\n        }\n        let nodes = [],\n            edges = []\n        composite_node.children.forEach((cell_id) => {\n            const cell_data = cell_map.get(cell_id)\n            if (\n                cell_data.shape === 'transition' ||\n                cell_data.shape === 'probability-transition'\n            ) {\n                edges.push(cell_data)\n            } else {\n                nodes.push(cell_data)\n            }\n        })\n        if (nodes.length === 0) {\n            break\n        }\n        let sub_G = new Graph(),\n            sub_A = new Graph(),\n            vis = new Map()\n        sub_G.loadData(nodes, edges)\n        convertNode(sub_G.root, vis, sub_G, sub_A)\n        template.push({\n            name: composite_node.data.title,\n            vertices: sub_A.vertices,\n            data: sub_A.data,\n            adjList: sub_A.adjList,\n            root: sub_G.root,\n        })\n    }\n    return template\n}\n","export const test_data_a = {\n    cells: [\n        {\n            position: {\n                x: 110,\n                y: 100,\n            },\n            size: {\n                width: 980,\n                height: 520,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n            data: {\n                title: 'A',\n                exp: '',\n                inv: '',\n                composite: true,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 1,\n            children: [\n                'e117d7aa-3ad4-404e-bcee-7b6f186daeec',\n                '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n                'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                'dbf27753-0dc0-4a7b-ad2c-71e163a93f43',\n                '17fb3b36-3d15-4438-b536-82fb04667055',\n                'c847f05b-f39b-4c1a-85b4-1cbdcf8950f2',\n                '5c73ddff-16f4-4bcd-a4d9-f366811d8c3a',\n                'de4750f4-b9f9-492c-89f7-6df3c9fb3a05',\n                'af6313c9-8705-4984-bdb6-23f2ed4612bb',\n            ],\n        },\n        {\n            position: {\n                x: 161,\n                y: 317,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'e117d7aa-3ad4-404e-bcee-7b6f186daeec',\n            data: {\n                title: 'A1',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 2,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 436,\n                y: 317,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'delay',\n            id: '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n            data: {\n                title: 'A2',\n                exp: '',\n                variable: 'c',\n                t: 5,\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '724e8f7d-266c-4145-9c1b-717f521da6dc',\n                    },\n                    {\n                        group: 'right',\n                        id: '5c2655b9-d2cc-43aa-b76e-4deb6af11e02',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '3095bfb1-28a4-4a62-a6a6-1ce986a563d4',\n                    },\n                    {\n                        group: 'left',\n                        id: '247497f9-a0ff-48aa-ba8f-e12b35064613',\n                    },\n                ],\n            },\n            zIndex: 3,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 754,\n                y: 350,\n            },\n            size: {\n                width: 20,\n                height: 20,\n            },\n            visible: true,\n            shape: 'probability-node',\n            id: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n            data: {},\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '54e2d0ab-e2e6-4b20-8215-e2a50d4236a2',\n                    },\n                    {\n                        group: 'right',\n                        id: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '6855da3f-d57c-4ba2-939a-28882eb50ee4',\n                    },\n                    {\n                        group: 'left',\n                        id: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n                    },\n                ],\n            },\n            zIndex: 4,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 850,\n                y: 170,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'dbf27753-0dc0-4a7b-ad2c-71e163a93f43',\n            data: {\n                title: 'A3',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 5,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 850,\n                y: 443,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: '17fb3b36-3d15-4438-b536-82fb04667055',\n            data: {\n                title: 'A4',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 6,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: 'c847f05b-f39b-4c1a-85b4-1cbdcf8950f2',\n            source: {\n                cell: 'e117d7aa-3ad4-404e-bcee-7b6f186daeec',\n                port: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n            },\n            target: {\n                cell: '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n                port: '247497f9-a0ff-48aa-ba8f-e12b35064613',\n            },\n            zIndex: 7,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '5c73ddff-16f4-4bcd-a4d9-f366811d8c3a',\n            source: {\n                cell: '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n                port: '5c2655b9-d2cc-43aa-b76e-4deb6af11e02',\n            },\n            target: {\n                cell: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                port: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n            },\n            zIndex: 8,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 12,\n            },\n            id: 'de4750f4-b9f9-492c-89f7-6df3c9fb3a05',\n            source: {\n                cell: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: 'dbf27753-0dc0-4a7b-ad2c-71e163a93f43',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 9,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 17,\n            },\n            id: 'af6313c9-8705-4984-bdb6-23f2ed4612bb',\n            source: {\n                cell: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: '17fb3b36-3d15-4438-b536-82fb04667055',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 10,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 109.99999999999682,\n                y: 702.0000000000063,\n            },\n            size: {\n                width: 980,\n                height: 530,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n            data: {\n                title: 'B',\n                exp: '',\n                inv: '',\n                composite: true,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 11,\n            children: [\n                '59752520-f097-44d0-a96e-8d563eded661',\n                '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n                'f8c408ab-20dc-4c41-a486-35224d069364',\n                'bc3ef988-e21d-4dd4-a996-d89151cdf37e',\n                '54be5835-e8aa-455a-95f7-a788fca962af',\n                '29916c50-2e09-41c9-9e23-ff6d067e69ce',\n                '37363a6d-ae54-4184-ace6-13f87c89ccec',\n                'fd53a442-3f0f-4f05-aae6-02b0a10e94e7',\n            ],\n        },\n        {\n            position: {\n                x: 161,\n                y: 894,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: '59752520-f097-44d0-a96e-8d563eded661',\n            data: {\n                title: 'B1',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 12,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            position: {\n                x: 454,\n                y: 927,\n            },\n            size: {\n                width: 20,\n                height: 20,\n            },\n            visible: true,\n            shape: 'probability-node',\n            id: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n            data: {},\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '54e2d0ab-e2e6-4b20-8215-e2a50d4236a2',\n                    },\n                    {\n                        group: 'right',\n                        id: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '6855da3f-d57c-4ba2-939a-28882eb50ee4',\n                    },\n                    {\n                        group: 'left',\n                        id: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n                    },\n                ],\n            },\n            zIndex: 13,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            position: {\n                x: 574,\n                y: 789,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 14,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            position: {\n                x: 574,\n                y: 1020,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'f8c408ab-20dc-4c41-a486-35224d069364',\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 15,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: 'bc3ef988-e21d-4dd4-a996-d89151cdf37e',\n            source: {\n                cell: '59752520-f097-44d0-a96e-8d563eded661',\n                port: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n            },\n            target: {\n                cell: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                port: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n            },\n            zIndex: 16,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 12,\n            },\n            id: 'fd53a442-3f0f-4f05-aae6-02b0a10e94e7',\n            source: {\n                cell: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: 'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 17,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 17,\n            },\n            id: '29916c50-2e09-41c9-9e23-ff6d067e69ce',\n            source: {\n                cell: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: 'f8c408ab-20dc-4c41-a486-35224d069364',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 18,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '37363a6d-ae54-4184-ace6-13f87c89ccec',\n            source: {\n                cell: 'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n                port: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n            },\n            target: {\n                cell: '59752520-f097-44d0-a96e-8d563eded661',\n                port: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n            },\n            zIndex: 19,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '54be5835-e8aa-455a-95f7-a788fca962af',\n            source: {\n                cell: 'f8c408ab-20dc-4c41-a486-35224d069364',\n                port: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n            },\n            target: {\n                cell: '59752520-f097-44d0-a96e-8d563eded661',\n                port: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n            },\n            zIndex: 20,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '1cd45879-64d6-4618-a5af-0b78bf2e3eff',\n            source: {\n                cell: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n                port: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n            },\n            target: {\n                cell: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n                port: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n            },\n            zIndex: 21,\n        },\n    ],\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Graph } from '@antv/x6'\nimport { Transform } from '@antv/x6-plugin-transform'\nimport { Selection } from '@antv/x6-plugin-selection'\nimport { Snapline } from '@antv/x6-plugin-snapline'\nimport { Keyboard } from '@antv/x6-plugin-keyboard'\nimport { Clipboard } from '@antv/x6-plugin-clipboard'\nimport { History } from '@antv/x6-plugin-history'\nimport { Stencil } from '@antv/x6-plugin-stencil'\nimport { register } from '@antv/x6-react-shape'\n\nimport {\n    DelayExpState,\n    DelayNormalState,\n    DelayState,\n    DelayUnifState,\n    State,\n} from './components'\nimport {\n    DelayExpStateInfo,\n    DelayNormalStateInfo,\n    DelayStateInfo,\n    DelayUnifStateInfo,\n    ProbabilityTransitionSidebar,\n    StateInfo,\n    TransitionSidebar,\n} from './sidebar'\nimport { convert, test_data_a } from './algorithm'\nimport { toUppaalXML } from './utils'\nimport { Button, Dropdown, Space, Upload } from 'antd'\nimport { GithubFilled, DownOutlined } from '@ant-design/icons'\nimport { Base64 } from 'js-base64'\n\nconst ports = {\n    groups: {\n        top: {\n            position: 'top',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n        right: {\n            position: 'right',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n        bottom: {\n            position: 'bottom',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n        left: {\n            position: 'left',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n    },\n    items: [\n        {\n            group: 'top',\n        },\n        {\n            group: 'right',\n        },\n        {\n            group: 'bottom',\n        },\n        {\n            group: 'left',\n        },\n    ],\n}\n// Register custom component\nregister({\n    shape: 'state',\n    width: 180,\n    height: 86,\n    component: State,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay-exp',\n    width: 180,\n    height: 86,\n    component: DelayExpState,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay-unif',\n    width: 180,\n    height: 86,\n    component: DelayUnifState,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay',\n    width: 180,\n    height: 86,\n    component: DelayState,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay-normal',\n    width: 180,\n    height: 86,\n    component: DelayNormalState,\n    effect: ['data'],\n})\nGraph.registerNode(\n    'probability-node',\n    {\n        inherit: 'circle',\n        width: 20,\n        height: 20,\n        attrs: {\n            body: {\n                stroke: '#8f8f8f',\n                strokeWidth: 1,\n                fill: '#fff',\n                rx: 6,\n                ry: 6,\n            },\n        },\n    },\n    true\n)\nGraph.registerNode('initial-node', {\n    inherit: 'circle',\n    width: 30,\n    height: 30,\n    attrs: {\n        body: {\n            fill: '#888888',\n        },\n    },\n})\n\n// Register custom edge\nGraph.registerEdge('transition', {\n    inherit: 'edge',\n    router: { name: 'metro' },\n    connector: { name: 'rounded' },\n    attrs: {\n        line: {\n            stroke: '#faad14',\n            strokeDasharray: null,\n            targetMarker: 'classic',\n        },\n    },\n    data: {\n        guard: '',\n        sync: '',\n        update: '',\n    },\n})\nGraph.registerEdge('probability-transition', {\n    inherit: 'edge',\n    router: { name: 'metro' },\n    connector: { name: 'rounded' },\n    attrs: {\n        line: {\n            stroke: '#1890ff',\n            strokeDasharray: 5,\n            targetMarker: 'classic',\n        },\n    },\n    data: {\n        sync: '',\n        update: '',\n        weight: 0,\n    },\n})\n\nconst Layout = () => {\n    const refContainer = useRef(null)\n    const refStencilContainer = useRef(null)\n    const [state, setState] = useState({\n        shape: '',\n        id: '',\n        data: {},\n    })\n    const [G, setG] = useState(null)\n\n    useEffect(() => {\n        // Init graph\n        const graph = new Graph({\n            container: refContainer.current,\n            grid: true,\n            mousewheel: {\n                enabled: true,\n                zoomAtMousePosition: true,\n                modifiers: 'ctrl',\n                minScale: 0.5,\n                maxScale: 3,\n            },\n            highlighting: {\n                embedding: {\n                    name: 'stroke',\n                    args: {\n                        padding: -1,\n                        attrs: {\n                            stroke: '#73d13d',\n                        },\n                    },\n                },\n                magnetAdsorbed: {\n                    name: 'stroke',\n                    args: {\n                        attrs: {\n                            fill: '#5F95FF',\n                            stroke: '#5F95FF',\n                        },\n                    },\n                },\n            },\n            connecting: {\n                anchor: 'center',\n                connectionPoint: 'anchor',\n                allowBlank: false,\n                snap: {\n                    radius: 20,\n                },\n                createEdge() {\n                    return graph.createEdge({ shape: 'transition' })\n                },\n                validateConnection({ targetMagnet }) {\n                    return !!targetMagnet\n                },\n            },\n            embedding: {\n                enabled: true,\n                findParent({ node }) {\n                    const bbox = node.getBBox()\n                    return this.getNodes().filter((node) => {\n                        const data = node.getData()\n                        if (data && data.composite) {\n                            const targetBBox = node.getBBox()\n                            return bbox.isIntersectWithRect(targetBBox)\n                        }\n                        return false\n                    })\n                },\n            },\n        })\n            .use(\n                new Transform({\n                    resizing: true,\n                    rotating: true,\n                })\n            )\n            .use(\n                new Selection({\n                    enabled: true,\n                    rubberband: true,\n                    showNodeSelectionBox: true,\n                })\n            )\n            .use(\n                new Snapline({\n                    enabled: true,\n                })\n            )\n            .use(\n                new Keyboard({\n                    enabled: true,\n                })\n            )\n            .use(\n                new Clipboard({\n                    enabled: true,\n                })\n            )\n            .use(\n                new History({\n                    enabled: true,\n                })\n            )\n\n        // Init keymap\n        graph.bindKey(['meta+c', 'ctrl+c'], () => {\n            const cells = graph.getSelectedCells()\n            if (cells.length) {\n                graph.copy(cells)\n            }\n            return false\n        })\n        graph.bindKey(['meta+x', 'ctrl+x'], () => {\n            const cells = graph.getSelectedCells()\n            if (cells.length) {\n                graph.cut(cells)\n            }\n            return false\n        })\n        graph.bindKey(['meta+v', 'ctrl+v'], () => {\n            if (!graph.isClipboardEmpty()) {\n                const cells = graph.paste({ offset: 32 })\n                graph.cleanSelection()\n                graph.select(cells)\n            }\n            return false\n        })\n        graph.bindKey(['meta+z', 'ctrl+z'], () => {\n            if (graph.canUndo()) {\n                graph.undo()\n            }\n            return false\n        })\n        graph.bindKey(['meta+shift+z', 'ctrl+shift+z'], () => {\n            if (graph.canRedo()) {\n                graph.redo()\n            }\n            return false\n        })\n        graph.bindKey(['meta+a', 'ctrl+a'], () => {\n            const nodes = graph.getNodes()\n            if (nodes) {\n                graph.select(nodes)\n            }\n        })\n        graph.bindKey(['backspace', 'delete'], () => {\n            const cells = graph.getSelectedCells()\n            if (cells.length) {\n                graph.removeCells(cells)\n            }\n        })\n\n        graph.on('blank:contextmenu', () => {\n            graph.clearCells()\n            graph.fromJSON(test_data_a)\n        })\n\n        graph.on('blank:dblclick', () => {\n            const cells = graph.toJSON()\n\n            const output = convert(cells)\n            const xml = toUppaalXML(output)\n            console.log(xml)\n        })\n\n        // Init node ports\n        const showPorts = (ports, show) => {\n            for (let i = 0, len = ports.length; i < len; i = i + 1) {\n                ports[i].style.visibility = show ? 'visible' : 'hidden'\n            }\n        }\n        graph.on('node:mouseenter', () => {\n            const container = refContainer.current\n            const ports = container.querySelectorAll('.x6-port-body')\n            showPorts(ports, true)\n        })\n        graph.on('node:mouseleave', () => {\n            const container = refContainer.current\n            const ports = container.querySelectorAll('.x6-port-body')\n            showPorts(ports, false)\n        })\n\n        // Init stencil\n        const stencil = new Stencil({\n            title: 'Components',\n            target: graph,\n            stencilGraphWidth: 350,\n            stencilGraphHeight: 100,\n            groups: [\n                { name: 'STATE', title: 'state' },\n                { name: 'DELAY', title: 'Delay(t)' },\n                {\n                    name: 'DELAY_EXP',\n                    title: 'DelayExp(rate)',\n                },\n                { name: 'DELAY_UNIF', title: 'DelayUnif(a, b)' },\n                {\n                    name: 'DELAY_NORMAL',\n                    title: 'Normal(a, u)',\n                },\n                { name: 'PROBABILITY_NODE', title: 'Probability' },\n            ],\n        })\n        refStencilContainer.current.appendChild(stencil.container)\n        // Init stencil group\n        const r1 = graph.createNode({\n            shape: 'state',\n            x: 180,\n            y: 40,\n            data: { title: 'NEW STATE', exp: '', inv: '', composite: false },\n            ports: { ...ports },\n        })\n        const r2 = graph.createNode({\n            shape: 'delay-exp',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'c',\n                rate: 2,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r3 = graph.createNode({\n            shape: 'delay-unif',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'c',\n                a: 10,\n                b: 20,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r4 = graph.createNode({\n            shape: 'delay',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'c',\n                t: 5,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r5 = graph.createNode({\n            shape: 'delay-normal',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'v',\n                a: 10,\n                u: 5,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r6 = graph.createNode({\n            shape: 'probability-node',\n            x: 180,\n            y: 40,\n            data: {},\n            ports: { ...ports },\n        })\n        stencil.load([r1], 'STATE')\n        stencil.load([r2], 'DELAY_EXP')\n        stencil.load([r3], 'DELAY_UNIF')\n        stencil.load([r4], 'DELAY')\n        stencil.load([r5], 'DELAY_NORMAL')\n        stencil.load([r6], 'PROBABILITY_NODE')\n\n        // Init node&edge action\n        graph.on('cell:click', ({ cell }) => {\n            setState({\n                shape: cell.shape,\n                id: cell.id,\n                data: cell.data ? cell.data : {},\n            })\n        })\n\n        setG(graph)\n    }, [refContainer, refStencilContainer])\n\n    const removeAllCells = () => {\n        G.clearCells()\n    }\n\n    const download = (filename, content, b64 = true) => {\n        if (b64) {\n            content = Base64.encode(content)\n        }\n\n        const downfile = new File([content], filename, {\n            type: 'text/plain',\n        })\n        const tmpLink = document.createElement('a')\n        const objectUrl = URL.createObjectURL(downfile)\n        tmpLink.href = objectUrl\n        tmpLink.download = downfile.name\n        document.body.appendChild(tmpLink)\n        tmpLink.click()\n\n        document.body.removeChild(tmpLink)\n        URL.revokeObjectURL(objectUrl)\n    }\n\n    const loadData = (content) => {\n        const raw = Base64.decode(content)\n        const raw_obj = JSON.parse(raw)\n        G.fromJSON(raw_obj)\n    }\n\n    return (\n        <>\n            <div className=\"topbar\">\n                <div className=\"topbar-left\">\n                    <div className=\"topbar-left-title\">\n                        <Button type=\"text\" size=\"small\">\n                            <b>StohM Charts</b>\n                        </Button>\n                    </div>\n\n                    <div className=\"topbar-left-menu\">\n                        <Space wrap size=\"middle\">\n                            {/* New File */}\n                            <Button\n                                size=\"small\"\n                                type=\"primary\"\n                                onClick={() => {\n                                    removeAllCells()\n                                }}\n                            >\n                                New\n                            </Button>\n                            {/* Load File */}\n                            <Upload\n                                showUploadList={false}\n                                beforeUpload={(file) => {\n                                    return new Promise((resolve) => {\n                                        const reader = new FileReader()\n                                        reader.readAsText(file)\n                                        reader.onload = () => {\n                                            G.clearCells()\n                                            loadData(reader.result)\n                                        }\n                                    })\n                                }}\n                            >\n                                <Button size=\"small\">Load</Button>\n                            </Upload>\n                            {/* Save File */}\n                            <Button\n                                size=\"small\"\n                                onClick={() => {\n                                    const graph_data = G.toJSON()\n                                    download(\n                                        'output.smc',\n                                        JSON.stringify(graph_data)\n                                    )\n                                }}\n                            >\n                                Save\n                            </Button>\n                            {/* Export to Uppaal xml */}\n                            <Button\n                                size=\"small\"\n                                onClick={() => {\n                                    const cells = G.toJSON()\n                                    const output = convert(cells)\n                                    const xml = toUppaalXML(output)\n                                    download('output.xml', xml, false)\n                                }}\n                            >\n                                Export\n                            </Button>\n                            <Dropdown\n                                menu={{\n                                    items: [{ key: '1', label: '123' }],\n                                    onClick: ({ key }) => {\n                                        console.log(key)\n                                    },\n                                }}\n                            >\n                                <Button size=\"small\">\n                                    Examples\n                                    <DownOutlined />\n                                </Button>\n                            </Dropdown>\n                        </Space>\n                    </div>\n                </div>\n                <div className=\"topbar-right\">\n                    <Button\n                        type=\"text\"\n                        size=\"small\"\n                        icon={<GithubFilled />}\n                        href=\"https://github.com/beiyanpiki/stohMCharts\"\n                        target=\"__blank\"\n                    />\n                </div>\n            </div>\n            <div className=\"app\">\n                <div className=\"app-stencil\" ref={refStencilContainer} />\n                <div className=\"app-content\" ref={refContainer} />\n                <div className=\"app-sidebar\">\n                    {(() => {\n                        switch (state.shape) {\n                            case 'state':\n                                return (\n                                    <StateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            inv: state.data.inv,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    inv: newState.inv,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                inv: newState.inv,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay-exp':\n                                return (\n                                    <DelayExpStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            variable: state.data.variable,\n                                            rate: state.data.rate,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                data: {\n                                                    shape: state.shape,\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    variable: newState.variable,\n                                                    rate: newState.rate,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                variable: newState.variable,\n                                                rate: newState.rate,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay-unif':\n                                return (\n                                    <DelayUnifStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            variable: state.data.variable,\n                                            a: state.data.a,\n                                            b: state.data.b,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    variable: newState.variable,\n                                                    a: newState.a,\n                                                    b: newState.b,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                variable: newState.variable,\n                                                a: newState.a,\n                                                b: newState.b,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay':\n                                return (\n                                    <DelayStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            variable: state.data.variable,\n                                            t: state.data.t,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    variable: newState.variable,\n                                                    t: newState.t,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                variable: newState.variable,\n                                                t: newState.t,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay-normal':\n                                return (\n                                    <DelayNormalStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            inv: state.data.inv,\n                                            variable: state.data.variable,\n                                            a: state.data.a,\n                                            u: state.data.u,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    inv: newState.inv,\n                                                    variable: newState.variable,\n                                                    a: newState.a,\n                                                    u: newState.u,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                inv: newState.inv,\n                                                variable: newState.variable,\n                                                a: newState.a,\n                                                u: newState.u,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'transition':\n                                return (\n                                    <TransitionSidebar\n                                        state={{\n                                            id: state.id,\n                                            guard: state.data.guard,\n                                            sync: state.data.sync,\n                                            update: state.data.update,\n                                        }}\n                                        onChange={(newState) => {\n                                            console.log(newState)\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    guard: newState.guard,\n                                                    sync: newState.sync,\n                                                    update: newState.update,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                guard: newState.guard,\n                                                sync: newState.sync,\n                                                update: newState.update,\n                                            })\n                                        }}\n                                        onSwitch={() => {\n                                            setState({\n                                                id: state.id,\n                                                shape: 'probability-transition',\n                                                data: {\n                                                    sync: '',\n                                                    update: '',\n                                                    weight: 0,\n                                                },\n                                            })\n                                            const cell = G.getCellById(state.id)\n                                            cell.prop(\n                                                'shape',\n                                                'probability-transition'\n                                            )\n                                            cell.attr('line/stroke', '#1890ff')\n                                            cell.attr('line/strokeDasharray', 5)\n                                            cell.setData({\n                                                sync: '',\n                                                update: '',\n                                                weight: 0,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'probability-transition':\n                                return (\n                                    <ProbabilityTransitionSidebar\n                                        state={{\n                                            id: state.id,\n                                            weight: state.data.weight,\n                                            sync: state.data.sync,\n                                            update: state.data.update,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    weight: newState.weight,\n                                                    sync: newState.sync,\n                                                    update: newState.update,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                weight: newState.weight,\n                                                sync: newState.sync,\n                                                update: newState.update,\n                                            })\n                                        }}\n                                        onSwitch={() => {\n                                            setState({\n                                                id: state.id,\n                                                shape: 'transition',\n                                                data: {\n                                                    sync: '',\n                                                    update: '',\n                                                    guard: '',\n                                                },\n                                            })\n                                            const cell = G.getCellById(state.id)\n                                            cell.prop('shape', 'transition')\n                                            cell.attr('line/stroke', '#faad14')\n                                            cell.attr(\n                                                'line/strokeDasharray',\n                                                null\n                                            )\n                                            cell.setData({\n                                                sync: '',\n                                                update: '',\n                                                weight: 0,\n                                            })\n                                        }}\n                                    />\n                                )\n                            default:\n                                return <div></div>\n                        }\n                    })()}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Layout\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport Layout from './Layout'\nimport 'normalize.css'\nimport './global.css'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n    <React.StrictMode>\n        <Layout />\n    </React.StrictMode>\n)\n"],"sourceRoot":""}