{"version":3,"sources":["utils/random.js","algorithm/convert.js","algorithm/test_data.js","components/State.js","components/DelayExp.js","components/DelayUnif.js","components/Delay.js","components/DelayNormal.js","sidebar/StateInfo.js","sidebar/DelayExpStateInfo.js","sidebar/DelayUnifStateInfo.js","sidebar/DelayStateInfo.js","sidebar/DelayNormalStateInfo.js","sidebar/TransitionSidebar.js","sidebar/ProbabilityTransitionSidebar.js","Title.js","Layout.js","utils/toUppaal.js","index.js"],"names":["randomString","randomLen","min","max","str","range","arr","Math","round","random","i","length","generateID","concat","Graph","Object","classCallCheck","this","vertices","data","Map","adjList","root","variable","chan","createClass","key","value","id","shape","push","set","source","target","get","_this","cnt","forEach","v","_step","_iterator","convert_createForOfIteratorHelper","values","s","n","done","edge_id","has","err","e","f","_step2","min_times","min_node","_iterator2","_ref","_ref2","slicedToArray","node_id","times","nodes","edges","_this2","_ref3","add_vertices","_ref4","sync","action","substr","update","split","add_edge","cell","getRoot","convertNode","vis","G","A","node_data","includes","title","invariant","rate_exp","edge_data","target_id","target_data","weight","guard","_node_data$data","a","b","node_data_raw","objectSpread","edge_data_raw","rate","new_node_id","t","new_edge_1","_node_data$data2","u","my_prob","sum_prob","edge","ed","prob","test_data_a","cells","position","x","y","size","width","height","view","exp","inv","composite","ports","groups","top","attrs","circle","r","magnet","stroke","strokeWidth","fill","style","visibility","right","bottom","left","items","group","zIndex","children","parent","visible","router","name","connector","port","line","strokeDasharray","test_data_b","State","_node$data","node","react_default","createElement","className","DelayExpState","DelayUnifState","DelayState","DelayNormalState","StateInfo","state","onChange","_Form$useForm","Form","useForm","form","useEffect","resetFields","es_form","labelCol","span","wrapperCol","initialValues","onFinish","Item","label","input","disabled","valuePropName","offset","es_checkbox","es_button","type","htmlType","block","DelayExpStateInfo","input_number","DelayUnifStateInfo","DelayStateInfo","DelayNormalStateInfo","TransitionSidebar","onSwitch","es_radio","Group","defaultValue","buttonStyle","Button","ProbabilityTransitionSidebar","Title","onTitleChange","_useState","useState","_useState2","edit","setEdit","inputRef","useRef","Fragment","compact","ref","onPressEnter","onBlur","onClick","register","component","effect","registerNode","inherit","body","rx","ry","registerEdge","targetMarker","Layout","refContainer","refStencilContainer","setState","_useState3","_useState4","setG","_useState5","_useState6","setTitle","graph","container","current","grid","mousewheel","enabled","zoomAtMousePosition","modifiers","minScale","maxScale","highlighting","embedding","args","padding","magnetAdsorbed","connecting","anchor","connectionPoint","allowBlank","snap","radius","createEdge","validateConnection","targetMagnet","findParent","bbox","getBBox","getNodes","filter","getData","targetBBox","isIntersectWithRect","use","Transform","resizing","rotating","Selection","rubberband","showNodeSelectionBox","Snapline","Keyboard","Clipboard","History","bindKey","getSelectedCells","copy","cut","isClipboardEmpty","paste","cleanSelection","select","canUndo","undo","canRedo","redo","removeCells","showPorts","show","len","on","querySelectorAll","stencil","Stencil","stencilGraphWidth","stencilGraphHeight","appendChild","r1","createNode","r2","r3","r4","r5","r6","load","download","filename","content","arguments","undefined","Base64","encode","downfile","File","tmpLink","document","objectUrl","URL","createObjectURL","href","click","removeChild","revokeObjectURL","space","wrap","src_Title","newTitle","clearCells","upload","showUploadList","beforeUpload","file","Promise","resolve","substring","lastIndexOf","reader","FileReader","readAsText","onload","raw","decode","raw_obj","JSON","parse","fromJSON","loadData","result","graph_data","toJSON","stringify","xml","datas","result1","xml2js","console","log","nta","global_declaretion","_createForOfIteratorHelper","declaration","_text","templates_name","template","_step3","_iterator3","_loop","tpl","location","branchpoint","init","transition","node_shape","obj","_attributes","kind","source_id","_edge_data$data","_edge_data$data2","process","_i","_templates_name","template_name","_i2","_templates_name2","system","js2xml","toUppaalXML","system_name","cell_map","j","splice","findIndex","item","parent_id","composite_nodes","composite_edges","composite_G","composite_A","_loop2","composite_node","_composite_nodes","cell_id","cell_data","sub_G","sub_A","Array","from","Set","convert","dropdown","menu","DownOutlined","icon","GithubFilled","sidebar_StateInfo","newState","getCellById","setData","sidebar_DelayExpStateInfo","sidebar_DelayUnifStateInfo","sidebar_DelayStateInfo","sidebar_DelayNormalStateInfo","sidebar_TransitionSidebar","prop","attr","sidebar_ProbabilityTransitionSidebar","ReactDOM","createRoot","getElementById","render","StrictMode","src_Layout"],"mappings":"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","file":"static/js/main.851c6e1b.chunk.js","sourcesContent":["export const randomString = (randomLen, min, max) => {\n    let str = '',\n        range = min,\n        arr = [\n            '0',\n            '1',\n            '2',\n            '3',\n            '4',\n            '5',\n            '6',\n            '7',\n            '8',\n            '9',\n            'a',\n            'b',\n            'c',\n            'd',\n            'e',\n            'f',\n            'g',\n            'h',\n            'i',\n            'j',\n            'k',\n            'l',\n            'm',\n            'n',\n            'o',\n            'p',\n            'q',\n            'r',\n            's',\n            't',\n            'u',\n            'v',\n            'w',\n            'x',\n            'y',\n            'z',\n            'A',\n            'B',\n            'C',\n            'D',\n            'E',\n            'F',\n            'G',\n            'H',\n            'I',\n            'J',\n            'K',\n            'L',\n            'M',\n            'N',\n            'O',\n            'P',\n            'Q',\n            'R',\n            'S',\n            'T',\n            'U',\n            'V',\n            'W',\n            'X',\n            'Y',\n            'Z',\n        ]\n    // 随机产生\n    if (randomLen) {\n        range = Math.round(Math.random() * (max - min)) + min\n    }\n    for (let i = 0; i < range; i++) {\n        let pos = Math.round(Math.random() * (arr.length - 1))\n        str += arr[pos]\n    }\n    return str\n}\n\nexport const generateID = () => {\n    return `${randomString(false, 8)}-${randomString(false, 4)}-${randomString(\n        false,\n        4\n    )}-${randomString(false, 4)}-${randomString(false, 12)}`\n}\n","import { generateID } from '../utils'\n\nclass Graph {\n    constructor() {\n        this.vertices = [] // Save ID\n        this.data = new Map() // for node, {id: data, shape}; for edge, {id: data, shape, target}\n        this.adjList = new Map() // {id: [edge_id1, edge_id2]}\n        this.root = null\n        this.variable = []\n        this.chan = []\n    }\n\n    add_vertices(id, shape, data) {\n        this.vertices.push(id)\n        this.data.set(id, { shape, data })\n        this.adjList.set(id, [])\n    }\n\n    add_edge(id, shape, data, source, target) {\n        this.adjList.get(source).push(id)\n        this.data.set(id, { shape, data, target })\n    }\n\n    getRoot() {\n        const cnt = new Map()\n\n        this.vertices.forEach((v) => {\n            cnt.set(v, 0)\n        })\n\n        for (let edges of this.adjList.values()) {\n            edges.forEach((edge_id) => {\n                const target = this.data.get(edge_id).target\n                if (cnt.has(target)) {\n                    cnt.set(target, cnt.get(target) + 1)\n                }\n            })\n        }\n        let min_times = 9999999,\n            min_node = ''\n        for (let [node_id, times] of cnt) {\n            if (times <= min_times) {\n                min_times = times\n                min_node = node_id\n            }\n        }\n        this.root = min_node\n    }\n\n    loadData(nodes, edges) {\n        nodes.forEach(({ id, shape, data }) => {\n            if ('variable' in data) {\n                this.variable.push(data.variable)\n            }\n            this.add_vertices(id, shape, data)\n        })\n        edges.forEach(({ id, shape, data, source, target }) => {\n            if ('sync' in data && data.sync !== '') {\n                const action = data.sync\n                // action! => action\n                this.chan.push(action.substr(0, action.length - 1))\n            }\n            if ('update' in data && data.update !== '') {\n                const v = data.update.split(':=')[0]\n                this.variable.push(v)\n            }\n\n            this.add_edge(id, shape, data, source.cell, target.cell)\n        })\n        this.getRoot()\n    }\n}\n\nconst convertNode = (node_id, vis, G, A) => {\n    if (vis.has(node_id)) {\n        return\n    }\n    vis.set(node_id, true)\n\n    const node_data = G.data.get(node_id)\n    // If node is not exist, create it.\n    if (!A.vertices.includes(node_id)) {\n        A.add_vertices(\n            node_id,\n            node_data.shape === 'probability-node' ? 'branch' : 'location',\n            {\n                title: node_data.data.title,\n                invariant: '',\n                rate_exp: '',\n            }\n        )\n    }\n    const edges = G.adjList.get(node_id)\n    edges.forEach((edge_id) => {\n        const edge_data = G.data.get(edge_id)\n        const target_id = edge_data.target\n\n        // If target node is not exist, create it.\n        const target_data = G.data.get(target_id)\n        if (!A.vertices.includes(target_id)) {\n            A.add_vertices(\n                target_id,\n                target_data.shape === 'probability-node'\n                    ? 'branch'\n                    : 'location',\n                {\n                    title: target_data.data.title,\n                    invariant: '',\n                    rate_exp: '',\n                }\n            )\n        }\n        // Link source to target\n        if (node_data.shape !== 'delay') {\n            if (node_data.shape === 'probability-node') {\n                A.add_edge(\n                    edge_id,\n                    'prob-transition',\n                    {\n                        update: edge_data.data.update,\n                        sync: edge_data.data.sync,\n                        weight: edge_data.data.weight,\n                    },\n                    node_id,\n                    target_id\n                )\n            } else {\n                A.add_edge(\n                    edge_id,\n                    'transition',\n                    {\n                        guard: edge_data.data.guard,\n                        sync: edge_data.data.sync,\n                        update: edge_data.data.update,\n                    },\n                    node_id,\n                    target_id\n                )\n            }\n        }\n\n        // DelayUnif(a, b)\n        if (node_data.shape === 'delay-unif') {\n            // Algorithm 1: Line 7\n            const { variable, a, b } = node_data.data\n            const node_data_raw = A.data.get(node_id)\n            A.data.set(node_id, {\n                ...node_data_raw,\n                data: {\n                    ...node_data_raw.data,\n                    invariant: `${variable} <= ${b}`,\n                },\n            })\n\n            const edge_data_raw = A.data.get(edge_id)\n            A.data.set(edge_id, {\n                ...edge_data_raw,\n                data: {\n                    ...edge_data_raw.data,\n                    guard: `${variable} >= ${a}`,\n                },\n            })\n        }\n        // DelayExp(rate)\n        if (node_data.shape === 'delay-exp') {\n            // Algorithm 1: Line 8\n            const { rate } = node_data.data\n            const node_data_raw = A.data.get(node_id)\n            A.data.set(node_id, {\n                ...node_data_raw,\n                data: {\n                    ...node_data_raw.data,\n                    rate_exp: rate,\n                },\n            })\n        }\n        // Delay(t)\n        if (node_data.shape === 'delay') {\n            // Algorithm 1: Line 9\n            // Create New Node and Link node\n            const new_node_id = generateID()\n            A.add_vertices(new_node_id, 'location', {\n                title: '',\n                invariant: `${node_data.data.variable} <= ${node_data.data.t}`,\n                rate_exp: '',\n            })\n            const new_edge_1 = generateID()\n            A.add_edge(\n                new_edge_1,\n                'transition',\n                {\n                    guard: '',\n                    sync: '',\n                    update: `${node_data.data.variable} = 0`,\n                },\n                node_id,\n                new_node_id\n            )\n            A.add_edge(\n                edge_id,\n                'transition',\n                {\n                    guard: `${node_data.data.variable} == ${node_data.data.t}`,\n                    sync: edge_data.data.sync,\n                    update: edge_data.data.update,\n                },\n                new_node_id,\n                target_id\n            )\n        }\n        // Normal(a, u)\n        if (node_data.shape === 'normal') {\n            // Algorithm 1: Line 10\n            const { variable, a, u } = node_data.data\n            const edge_data_raw = A.data.get(edge_id)\n            A.data.set(edge_id, {\n                ...edge_data_raw,\n                data: {\n                    ...edge_data_raw.data,\n                    update: `${variable} = Norm(${a}, ${u})`,\n                },\n            })\n        }\n        // Probability\n        if (node_data.shape === 'probability-node') {\n            // Algorithm 1: Line 13\n            const my_prob = edge_data.data.weight\n            let sum_prob = 0\n            edges.forEach((edge) => {\n                const ed = G.data.get(edge)\n                if (ed.shape === 'probability-transition') {\n                    sum_prob += ed.data.weight\n                }\n            })\n            const prob = my_prob / sum_prob\n            const edge_data_raw = A.data.get(edge_id)\n            A.data.set(edge_id, {\n                ...edge_data_raw,\n                data: {\n                    ...edge_data_raw.data,\n                    weight: prob,\n                },\n            })\n        }\n        // Action\n        // if (node_id === target_id) {\n        //     console.log(\"Self Loop!!\", edge_id)\n        //     // Algorithm 1: Line 11\n        //     A.add_edge(edge_id, 'transition', {\n        //         guard: edge_data.data.guard,\n        //         sync: edge_data.data.sync,\n        //         update: edge_data.data.update\n        //     }, node_id, target_id)\n        // }\n        convertNode(target_id, vis, G, A)\n    })\n}\n\nexport const convert = (system_name, data) => {\n    console.log(data)\n\n    let template = []\n    let variable = []\n    let chan = []\n\n    let cell_map = new Map()\n    data.cells.forEach((cell) => {\n        cell_map.set(cell.id, cell)\n    })\n\n    for (let i = 0; i < data.cells.length; i++) {\n        if (\n            (data.cells[i].shape === 'transition' ||\n                data.cells[i].shape === 'probability-transition') &&\n            data.cells[i].source.cell === data.cells[i].target.cell\n        ) {\n            for (let j = 0; j < data.cells.length; j++) {\n                // 找到原同级节点\n                if (data.cells[j].id === data.cells[i].parent) {\n                    // 删除同级节点的儿子(data.cells[i])\n                    data.cells[j].children.splice(\n                        data.cells[j].children.findIndex(\n                            (item) => item === data.cells[i].id\n                        ),\n                        1\n                    )\n                    if (data.cells[j].children.length === 0) {\n                        delete data.cells[j].children\n                    }\n                    cell_map.set(data.cells[j].id, data.cells[j])\n                }\n            }\n\n            // 同级节点时是子节点\n            if ('parent' in cell_map.get(data.cells[i].source.cell)) {\n                // 绑定到父节点上\n                const parent_id = cell_map.get(data.cells[i].source.cell).parent\n                data.cells[i].parent = parent_id\n                // 父节点的子节点更新\n                for (let j = 0; j < data.cells.length; j++) {\n                    if (data.cells[j].id === parent_id) {\n                        if (!data.cells[j].children) {\n                            data.cells[j].children = []\n                        }\n                        data.cells[j].children.push(data.cells[i].id)\n                    }\n                    cell_map.set(parent_id, data.cells[j])\n                }\n            } else {\n                delete data.cells[i].parent\n            }\n            cell_map.set(data.cells[i].id, data.cells[i])\n        }\n    }\n\n    console.log('after', data)\n    // Find all composite node\n    let composite_nodes = [],\n        composite_edges = []\n    data.cells.forEach((cell) => {\n        if ('composite' in cell.data && cell.data.composite) {\n            composite_nodes.push(cell)\n        }\n    })\n    data.cells.forEach((cell) => {\n        if (\n            (cell.shape === 'transition' ||\n                cell.shape === 'probability-transition') &&\n            !('parent' in cell)\n        ) {\n            composite_edges.push(cell)\n        }\n    })\n\n    let composite_G = new Graph(),\n        composite_A = new Graph()\n    composite_G.loadData(composite_nodes, composite_edges)\n    let vis = new Map()\n\n    if (composite_G.vertices.length > 0) {\n        convertNode(composite_G.root, vis, composite_G, composite_A)\n    }\n\n    if (composite_edges.length > 0) {\n        template.push({\n            name: system_name,\n            vertices: composite_A.vertices,\n            data: composite_A.data,\n            adjList: composite_A.adjList,\n            root: composite_G.root,\n        })\n    }\n\n    variable = variable.concat(composite_G.variable)\n    chan = chan.concat(composite_G.chan)\n\n    // Find all child node\n    for (let composite_node of composite_nodes) {\n        if (composite_node.children === undefined) {\n            break\n        }\n        let nodes = [],\n            edges = []\n        composite_node.children.forEach((cell_id) => {\n            const cell_data = cell_map.get(cell_id)\n            if (\n                cell_data.shape !== 'transition' &&\n                cell_data.shape !== 'probability-transition'\n            ) {\n                nodes.push(cell_data)\n            }\n        })\n        composite_node.children.forEach((cell_id) => {\n            const cell_data = cell_map.get(cell_id)\n            if (\n                cell_data.shape === 'transition' ||\n                cell_data.shape === 'probability-transition'\n            ) {\n                edges.push(cell_data)\n            }\n        })\n        if (nodes.length === 0) {\n            break\n        }\n        let sub_G = new Graph(),\n            sub_A = new Graph(),\n            vis = new Map()\n        sub_G.loadData(nodes, edges)\n        convertNode(sub_G.root, vis, sub_G, sub_A)\n        template.push({\n            name: composite_node.data.title,\n            vertices: sub_A.vertices,\n            data: sub_A.data,\n            adjList: sub_A.adjList,\n            root: sub_G.root,\n            variable: Array.from(new Set(sub_G.variable)),\n            chan: Array.from(new Set(sub_G.chan)),\n        })\n\n        variable = variable.concat(sub_G.variable)\n        chan = chan.concat(sub_G.chan)\n    }\n\n    variable = Array.from(new Set(variable))\n    chan = Array.from(new Set(chan))\n    template[0].chan = chan\n    template[0].variable = variable\n\n    return template\n}\n","export const test_data_a = {\n    cells: [\n        {\n            position: {\n                x: 110,\n                y: 100,\n            },\n            size: {\n                width: 980,\n                height: 520,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n            data: {\n                title: 'A',\n                exp: '',\n                inv: '',\n                composite: true,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 1,\n            children: [\n                'e117d7aa-3ad4-404e-bcee-7b6f186daeec',\n                '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n                'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                'dbf27753-0dc0-4a7b-ad2c-71e163a93f43',\n                '17fb3b36-3d15-4438-b536-82fb04667055',\n                'c847f05b-f39b-4c1a-85b4-1cbdcf8950f2',\n                '5c73ddff-16f4-4bcd-a4d9-f366811d8c3a',\n                'de4750f4-b9f9-492c-89f7-6df3c9fb3a05',\n                'af6313c9-8705-4984-bdb6-23f2ed4612bb',\n            ],\n        },\n        {\n            position: {\n                x: 161,\n                y: 317,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'e117d7aa-3ad4-404e-bcee-7b6f186daeec',\n            data: {\n                title: 'A1',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 2,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 436,\n                y: 317,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'delay',\n            id: '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n            data: {\n                title: 'A2',\n                exp: '',\n                variable: 'c',\n                t: 5,\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '724e8f7d-266c-4145-9c1b-717f521da6dc',\n                    },\n                    {\n                        group: 'right',\n                        id: '5c2655b9-d2cc-43aa-b76e-4deb6af11e02',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '3095bfb1-28a4-4a62-a6a6-1ce986a563d4',\n                    },\n                    {\n                        group: 'left',\n                        id: '247497f9-a0ff-48aa-ba8f-e12b35064613',\n                    },\n                ],\n            },\n            zIndex: 3,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 754,\n                y: 350,\n            },\n            size: {\n                width: 20,\n                height: 20,\n            },\n            visible: true,\n            shape: 'probability-node',\n            id: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n            data: {},\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '54e2d0ab-e2e6-4b20-8215-e2a50d4236a2',\n                    },\n                    {\n                        group: 'right',\n                        id: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '6855da3f-d57c-4ba2-939a-28882eb50ee4',\n                    },\n                    {\n                        group: 'left',\n                        id: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n                    },\n                ],\n            },\n            zIndex: 4,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 850,\n                y: 170,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'dbf27753-0dc0-4a7b-ad2c-71e163a93f43',\n            data: {\n                title: 'A3',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 5,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 850,\n                y: 443,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: '17fb3b36-3d15-4438-b536-82fb04667055',\n            data: {\n                title: 'A4',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 6,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: 'c847f05b-f39b-4c1a-85b4-1cbdcf8950f2',\n            source: {\n                cell: 'e117d7aa-3ad4-404e-bcee-7b6f186daeec',\n                port: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n            },\n            target: {\n                cell: '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n                port: '247497f9-a0ff-48aa-ba8f-e12b35064613',\n            },\n            zIndex: 7,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '5c73ddff-16f4-4bcd-a4d9-f366811d8c3a',\n            source: {\n                cell: '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n                port: '5c2655b9-d2cc-43aa-b76e-4deb6af11e02',\n            },\n            target: {\n                cell: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                port: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n            },\n            zIndex: 8,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 12,\n            },\n            id: 'de4750f4-b9f9-492c-89f7-6df3c9fb3a05',\n            source: {\n                cell: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: 'dbf27753-0dc0-4a7b-ad2c-71e163a93f43',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 9,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 17,\n            },\n            id: 'af6313c9-8705-4984-bdb6-23f2ed4612bb',\n            source: {\n                cell: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: '17fb3b36-3d15-4438-b536-82fb04667055',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 10,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 109.99999999999682,\n                y: 702.0000000000063,\n            },\n            size: {\n                width: 980,\n                height: 530,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n            data: {\n                title: 'B',\n                exp: '',\n                inv: '',\n                composite: true,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 11,\n            children: [\n                '59752520-f097-44d0-a96e-8d563eded661',\n                '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n                'f8c408ab-20dc-4c41-a486-35224d069364',\n                'bc3ef988-e21d-4dd4-a996-d89151cdf37e',\n                '54be5835-e8aa-455a-95f7-a788fca962af',\n                '29916c50-2e09-41c9-9e23-ff6d067e69ce',\n                '37363a6d-ae54-4184-ace6-13f87c89ccec',\n                'fd53a442-3f0f-4f05-aae6-02b0a10e94e7',\n            ],\n        },\n        {\n            position: {\n                x: 161,\n                y: 894,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: '59752520-f097-44d0-a96e-8d563eded661',\n            data: {\n                title: 'B1',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 12,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            position: {\n                x: 454,\n                y: 927,\n            },\n            size: {\n                width: 20,\n                height: 20,\n            },\n            visible: true,\n            shape: 'probability-node',\n            id: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n            data: {},\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '54e2d0ab-e2e6-4b20-8215-e2a50d4236a2',\n                    },\n                    {\n                        group: 'right',\n                        id: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '6855da3f-d57c-4ba2-939a-28882eb50ee4',\n                    },\n                    {\n                        group: 'left',\n                        id: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n                    },\n                ],\n            },\n            zIndex: 13,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            position: {\n                x: 574,\n                y: 789,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n            data: {\n                title: 'B2',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 14,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            position: {\n                x: 574,\n                y: 1020,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'f8c408ab-20dc-4c41-a486-35224d069364',\n            data: {\n                title: 'B3',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 15,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: 'bc3ef988-e21d-4dd4-a996-d89151cdf37e',\n            source: {\n                cell: '59752520-f097-44d0-a96e-8d563eded661',\n                port: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n            },\n            target: {\n                cell: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                port: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n            },\n            zIndex: 16,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 12,\n            },\n            id: 'fd53a442-3f0f-4f05-aae6-02b0a10e94e7',\n            source: {\n                cell: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: 'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 17,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 17,\n            },\n            id: '29916c50-2e09-41c9-9e23-ff6d067e69ce',\n            source: {\n                cell: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: 'f8c408ab-20dc-4c41-a486-35224d069364',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 18,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '37363a6d-ae54-4184-ace6-13f87c89ccec',\n            source: {\n                cell: 'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n                port: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n            },\n            target: {\n                cell: '59752520-f097-44d0-a96e-8d563eded661',\n                port: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n            },\n            zIndex: 19,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '54be5835-e8aa-455a-95f7-a788fca962af',\n            source: {\n                cell: 'f8c408ab-20dc-4c41-a486-35224d069364',\n                port: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n            },\n            target: {\n                cell: '59752520-f097-44d0-a96e-8d563eded661',\n                port: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n            },\n            zIndex: 20,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '1cd45879-64d6-4618-a5af-0b78bf2e3eff',\n            source: {\n                cell: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n                port: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n            },\n            target: {\n                cell: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n                port: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n            },\n            zIndex: 21,\n        },\n    ],\n}\nexport const test_data_b = {\n    cells: [\n        {\n            position: {\n                x: 140,\n                y: 150,\n            },\n            size: {\n                width: 1220,\n                height: 550,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'bb209623-4270-4482-9e80-26ec51f40058',\n            data: {\n                title: 'P1',\n                exp: '',\n                inv: '',\n                composite: true,\n            },\n            zIndex: 1,\n            children: [\n                'c2c8774a-71e0-4440-a4de-7168bfa9cebc',\n                'd92f8899-79b6-478a-8128-9a190a522057',\n                '85bde932-e78a-4992-ad89-8afadbdd1012',\n                'c02bd3b8-7a81-443c-a800-273c1516c593',\n            ],\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '275fff13-3a84-45e9-b177-8d8617ca2954',\n                    },\n                    {\n                        group: 'right',\n                        id: '771b8fa2-9caf-4cfa-a0d5-e1683564e421',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '1dacefb8-396c-420c-867c-a3960afcaf1e',\n                    },\n                    {\n                        group: 'left',\n                        id: 'bbacfa81-1d40-4ea7-97aa-27f102293513',\n                    },\n                ],\n            },\n        },\n        {\n            position: {\n                x: 302,\n                y: 382,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'c2c8774a-71e0-4440-a4de-7168bfa9cebc',\n            data: {\n                title: 'idle',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            zIndex: 2,\n            parent: 'bb209623-4270-4482-9e80-26ec51f40058',\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '275fff13-3a84-45e9-b177-8d8617ca2954',\n                    },\n                    {\n                        group: 'right',\n                        id: '771b8fa2-9caf-4cfa-a0d5-e1683564e421',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '1dacefb8-396c-420c-867c-a3960afcaf1e',\n                    },\n                    {\n                        group: 'left',\n                        id: 'bbacfa81-1d40-4ea7-97aa-27f102293513',\n                    },\n                ],\n            },\n        },\n        {\n            position: {\n                x: 836,\n                y: 382,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'd92f8899-79b6-478a-8128-9a190a522057',\n            data: {\n                title: 'taken',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            zIndex: 3,\n            parent: 'bb209623-4270-4482-9e80-26ec51f40058',\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '275fff13-3a84-45e9-b177-8d8617ca2954',\n                    },\n                    {\n                        group: 'right',\n                        id: '771b8fa2-9caf-4cfa-a0d5-e1683564e421',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '1dacefb8-396c-420c-867c-a3960afcaf1e',\n                    },\n                    {\n                        group: 'left',\n                        id: 'bbacfa81-1d40-4ea7-97aa-27f102293513',\n                    },\n                ],\n            },\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: 'reset?',\n                update: '',\n            },\n            id: '85bde932-e78a-4992-ad89-8afadbdd1012',\n            zIndex: 4,\n            parent: 'bb209623-4270-4482-9e80-26ec51f40058',\n            source: {\n                cell: 'c2c8774a-71e0-4440-a4de-7168bfa9cebc',\n                port: '275fff13-3a84-45e9-b177-8d8617ca2954',\n            },\n            target: {\n                cell: 'd92f8899-79b6-478a-8128-9a190a522057',\n                port: '275fff13-3a84-45e9-b177-8d8617ca2954',\n            },\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: 'x:=0',\n            },\n            id: 'c02bd3b8-7a81-443c-a800-273c1516c593',\n            zIndex: 5,\n            parent: 'bb209623-4270-4482-9e80-26ec51f40058',\n            source: {\n                cell: 'd92f8899-79b6-478a-8128-9a190a522057',\n                port: '1dacefb8-396c-420c-867c-a3960afcaf1e',\n            },\n            target: {\n                cell: 'c2c8774a-71e0-4440-a4de-7168bfa9cebc',\n                port: '1dacefb8-396c-420c-867c-a3960afcaf1e',\n            },\n        },\n        {\n            position: {\n                x: 139.99999999999784,\n                y: 734.0000000000064,\n            },\n            size: {\n                width: 1120,\n                height: 430,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: '6b2d938d-292b-4f7a-87c5-d3b4afb14d8d',\n            data: {\n                title: 'Obs',\n                exp: '',\n                inv: '',\n                composite: true,\n            },\n            zIndex: 6,\n            children: [\n                'daa7700f-32fa-41a7-b221-75a1b7503a43',\n                'e8df1de0-acc7-41bd-a162-b788925f6e22',\n            ],\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '275fff13-3a84-45e9-b177-8d8617ca2954',\n                    },\n                    {\n                        group: 'right',\n                        id: '771b8fa2-9caf-4cfa-a0d5-e1683564e421',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '1dacefb8-396c-420c-867c-a3960afcaf1e',\n                    },\n                    {\n                        group: 'left',\n                        id: 'bbacfa81-1d40-4ea7-97aa-27f102293513',\n                    },\n                ],\n            },\n        },\n        {\n            position: {\n                x: 258,\n                y: 906,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'daa7700f-32fa-41a7-b221-75a1b7503a43',\n            data: {\n                title: 'Loop',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            zIndex: 7,\n            parent: '6b2d938d-292b-4f7a-87c5-d3b4afb14d8d',\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '275fff13-3a84-45e9-b177-8d8617ca2954',\n                    },\n                    {\n                        group: 'right',\n                        id: '771b8fa2-9caf-4cfa-a0d5-e1683564e421',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '1dacefb8-396c-420c-867c-a3960afcaf1e',\n                    },\n                    {\n                        group: 'left',\n                        id: 'bbacfa81-1d40-4ea7-97aa-27f102293513',\n                    },\n                ],\n            },\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: 'x>=2',\n                sync: 'reset!',\n                update: '',\n            },\n            id: 'e8df1de0-acc7-41bd-a162-b788925f6e22',\n            zIndex: 8,\n            parent: '6b2d938d-292b-4f7a-87c5-d3b4afb14d8d',\n            source: {\n                cell: 'daa7700f-32fa-41a7-b221-75a1b7503a43',\n                port: '275fff13-3a84-45e9-b177-8d8617ca2954',\n            },\n            target: {\n                cell: 'daa7700f-32fa-41a7-b221-75a1b7503a43',\n                port: '1dacefb8-396c-420c-867c-a3960afcaf1e',\n            },\n        },\n    ],\n}\n","import React from 'react'\n\nconst State = ({ node }) => {\n    const { title, exp, inv, composite } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {inv}\n            </span>\n        </div>\n    )\n}\n\nexport default State\n","import React from 'react'\nconst DelayExpState = ({ node }) => {\n    const { title, composite, exp, variable, rate } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {variable} = DelayExp({rate})\n            </span>\n        </div>\n    )\n}\n\nexport default DelayExpState\n","import React from 'react'\nconst DelayUnifState = ({ node }) => {\n    const { title, composite, exp, variable, a, b } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {variable} = DelayUnif({a}, {b})\n            </span>\n        </div>\n    )\n}\n\nexport default DelayUnifState\n","import React from 'react'\n\nconst DelayState = ({ node }) => {\n    const { title, composite, exp, variable, t } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {variable} = Delay({t})\n            </span>\n        </div>\n    )\n}\n\nexport default DelayState\n","import React from 'react'\nconst DelayNormalState = ({ node }) => {\n    const { title, composite, variable, a, u, inv } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {variable} = Normal({a}, {u})\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {inv}\n            </span>\n        </div>\n    )\n}\n\nexport default DelayNormalState\n","import { Button, Checkbox, Form, Input } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst StateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                inv: state.inv ? state.inv : '',\n                exp: state.exp ? state.exp : '',\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Inv.\" name=\"inv\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 20 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default StateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayExpStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                exp: state.exp ? state.exp : '',\n                variable: state.variable ? state.variable : '',\n                rate: state.rate ? state.rate : 2,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Rate\" name=\"rate\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayExpStateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayUnifStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                exp: state.exp ? state.exp : '',\n                variable: state.variable ? state.variable : '',\n                a: state.a ? state.a : 10,\n                b: state.b ? state.b : 20,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"a\" name=\"a\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item label=\"b\" name=\"b\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayUnifStateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                exp: state.exp ? state.exp : '',\n                variable: state.variable ? state.variable : '',\n                t: state.t ? state.t : 5,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"t\" name=\"t\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayStateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayNormalStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                inv: state.inv ? state.inv : '',\n                variable: state.variable ? state.variable : '',\n                a: state.a ? state.a : 10,\n                u: state.u ? state.u : 20,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"a\" name=\"a\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item label=\"u\" name=\"u\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item label=\"Inv.\" name=\"inv\">\n                <Input />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayNormalStateInfo\n","import { Button, Form, Input, Radio } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst TransitionSidebar = ({ state, onChange, onSwitch }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                guard: state.guard,\n                sync: state.sync,\n                update: state.update,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"type\">\n                <Radio.Group\n                    defaultValue=\"tran\"\n                    buttonStyle=\"solid\"\n                    onChange={(e) => {\n                        if (e.target.value === 'prob') {\n                            onSwitch()\n                        }\n                    }}\n                >\n                    <Radio.Button value=\"tran\">Transition</Radio.Button>\n                    <Radio.Button value=\"prob\">Probability</Radio.Button>\n                </Radio.Group>\n            </Form.Item>\n\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"guard\" name=\"guard\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"sync\" name=\"sync\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"update\" name=\"update\">\n                <Input />\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default TransitionSidebar\n","import { Button, Form, Input, InputNumber, Radio } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst ProbabilityTransitionSidebar = ({ state, onChange, onSwitch }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                weight: state.weight,\n                sync: state.sync,\n                update: state.update,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"type\">\n                <Radio.Group\n                    defaultValue=\"prob\"\n                    buttonStyle=\"solid\"\n                    onChange={(e) => {\n                        if (e.target.value === 'tran') {\n                            onSwitch()\n                        }\n                    }}\n                >\n                    <Radio.Button value=\"tran\">Transition</Radio.Button>\n                    <Radio.Button value=\"prob\">Probability</Radio.Button>\n                </Radio.Group>\n            </Form.Item>\n\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"sync\" name=\"sync\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"update\" name=\"update\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"weight\" name=\"weight\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default ProbabilityTransitionSidebar\n","import React, { useState, useRef } from 'react'\nimport { Input } from 'antd'\nconst Title = ({ title, onTitleChange }) => {\n    const [edit, setEdit] = useState(false)\n    const inputRef = useRef(null)\n\n    return (\n        <>\n            {edit ? (\n                <Input.Group compact size=\"small\">\n                    <Input\n                        ref={inputRef}\n                        defaultValue={title}\n                        onChange={(e) => {\n                            const { value } = e.target\n                            if (value.length < 20) {\n                                onTitleChange(value)\n                            }\n                        }}\n                        onPressEnter={() => {\n                            setEdit(false)\n                        }}\n                        onBlur={() => {\n                            setEdit(false)\n                        }}\n                    />\n                </Input.Group>\n            ) : (\n                <h3\n                    onClick={() => {\n                        setEdit(true)\n                    }}\n                >\n                    {title}\n                </h3>\n            )}\n        </>\n    )\n}\n\nexport default Title\n","import { Graph } from '@antv/x6'\nimport { Clipboard } from '@antv/x6-plugin-clipboard'\nimport { History } from '@antv/x6-plugin-history'\nimport { Keyboard } from '@antv/x6-plugin-keyboard'\nimport { Selection } from '@antv/x6-plugin-selection'\nimport { Snapline } from '@antv/x6-plugin-snapline'\nimport { Stencil } from '@antv/x6-plugin-stencil'\nimport { Transform } from '@antv/x6-plugin-transform'\nimport { register } from '@antv/x6-react-shape'\nimport React, { useEffect, useRef, useState } from 'react'\n\nimport { DownOutlined, GithubFilled } from '@ant-design/icons'\nimport { Button, Dropdown, Space, Upload } from 'antd'\nimport { Base64 } from 'js-base64'\nimport { convert, test_data_a, test_data_b } from './algorithm'\nimport {\n    DelayExpState,\n    DelayNormalState,\n    DelayState,\n    DelayUnifState,\n    State,\n} from './components'\nimport {\n    DelayExpStateInfo,\n    DelayNormalStateInfo,\n    DelayStateInfo,\n    DelayUnifStateInfo,\n    ProbabilityTransitionSidebar,\n    StateInfo,\n    TransitionSidebar,\n} from './sidebar'\nimport Title from './Title'\nimport { toUppaalXML } from './utils'\n\nconst ports = {\n    groups: {\n        top: {\n            position: 'top',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n        right: {\n            position: 'right',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n        bottom: {\n            position: 'bottom',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n        left: {\n            position: 'left',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n    },\n    items: [\n        {\n            group: 'top',\n        },\n        {\n            group: 'right',\n        },\n        {\n            group: 'bottom',\n        },\n        {\n            group: 'left',\n        },\n    ],\n}\n// Register custom component\nregister({\n    shape: 'state',\n    width: 180,\n    height: 86,\n    component: State,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay-exp',\n    width: 180,\n    height: 86,\n    component: DelayExpState,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay-unif',\n    width: 180,\n    height: 86,\n    component: DelayUnifState,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay',\n    width: 180,\n    height: 86,\n    component: DelayState,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay-normal',\n    width: 180,\n    height: 86,\n    component: DelayNormalState,\n    effect: ['data'],\n})\nGraph.registerNode(\n    'probability-node',\n    {\n        inherit: 'circle',\n        width: 20,\n        height: 20,\n        attrs: {\n            body: {\n                stroke: '#8f8f8f',\n                strokeWidth: 1,\n                fill: '#fff',\n                rx: 6,\n                ry: 6,\n            },\n        },\n    },\n    true\n)\nGraph.registerNode('initial-node', {\n    inherit: 'circle',\n    width: 30,\n    height: 30,\n    attrs: {\n        body: {\n            fill: '#888888',\n        },\n    },\n})\n\n// Register custom edge\nGraph.registerEdge('transition', {\n    inherit: 'edge',\n    router: { name: 'metro' },\n    connector: { name: 'rounded' },\n    attrs: {\n        line: {\n            stroke: '#faad14',\n            strokeDasharray: null,\n            targetMarker: 'classic',\n        },\n    },\n    data: {\n        guard: '',\n        sync: '',\n        update: '',\n    },\n})\nGraph.registerEdge('probability-transition', {\n    inherit: 'edge',\n    router: { name: 'metro' },\n    connector: { name: 'rounded' },\n    attrs: {\n        line: {\n            stroke: '#1890ff',\n            strokeDasharray: 5,\n            targetMarker: 'classic',\n        },\n    },\n    data: {\n        sync: '',\n        update: '',\n        weight: 0,\n    },\n})\n\nconst Layout = () => {\n    const refContainer = useRef(null)\n    const refStencilContainer = useRef(null)\n    const [state, setState] = useState({\n        shape: '',\n        id: '',\n        data: {},\n    })\n    const [G, setG] = useState(null)\n\n    const [title, setTitle] = useState('New System')\n\n    useEffect(() => {\n        // Init graph\n        const graph = new Graph({\n            container: refContainer.current,\n            grid: true,\n            mousewheel: {\n                enabled: true,\n                zoomAtMousePosition: true,\n                modifiers: 'ctrl',\n                minScale: 0.5,\n                maxScale: 3,\n            },\n            highlighting: {\n                embedding: {\n                    name: 'stroke',\n                    args: {\n                        padding: -1,\n                        attrs: {\n                            stroke: '#73d13d',\n                        },\n                    },\n                },\n                magnetAdsorbed: {\n                    name: 'stroke',\n                    args: {\n                        attrs: {\n                            fill: '#5F95FF',\n                            stroke: '#5F95FF',\n                        },\n                    },\n                },\n            },\n            connecting: {\n                anchor: 'center',\n                connectionPoint: 'anchor',\n                allowBlank: false,\n                snap: {\n                    radius: 20,\n                },\n                createEdge() {\n                    return graph.createEdge({ shape: 'transition' })\n                },\n                validateConnection({ targetMagnet }) {\n                    return !!targetMagnet\n                },\n            },\n            embedding: {\n                enabled: true,\n                findParent({ node }) {\n                    const bbox = node.getBBox()\n                    return this.getNodes().filter((node) => {\n                        const data = node.getData()\n                        if (data && data.composite) {\n                            const targetBBox = node.getBBox()\n                            return bbox.isIntersectWithRect(targetBBox)\n                        }\n                        return false\n                    })\n                },\n            },\n        })\n            .use(\n                new Transform({\n                    resizing: true,\n                    rotating: true,\n                })\n            )\n            .use(\n                new Selection({\n                    enabled: true,\n                    rubberband: true,\n                    showNodeSelectionBox: true,\n                })\n            )\n            .use(\n                new Snapline({\n                    enabled: true,\n                })\n            )\n            .use(\n                new Keyboard({\n                    enabled: true,\n                })\n            )\n            .use(\n                new Clipboard({\n                    enabled: true,\n                })\n            )\n            .use(\n                new History({\n                    enabled: true,\n                })\n            )\n\n        // Init keymap\n        graph.bindKey(['meta+c', 'ctrl+c'], () => {\n            const cells = graph.getSelectedCells()\n            if (cells.length) {\n                graph.copy(cells)\n            }\n            return false\n        })\n        graph.bindKey(['meta+x', 'ctrl+x'], () => {\n            const cells = graph.getSelectedCells()\n            if (cells.length) {\n                graph.cut(cells)\n            }\n            return false\n        })\n        graph.bindKey(['meta+v', 'ctrl+v'], () => {\n            if (!graph.isClipboardEmpty()) {\n                const cells = graph.paste({ offset: 32 })\n                graph.cleanSelection()\n                graph.select(cells)\n            }\n            return false\n        })\n        graph.bindKey(['meta+z', 'ctrl+z'], () => {\n            if (graph.canUndo()) {\n                graph.undo()\n            }\n            return false\n        })\n        graph.bindKey(['meta+shift+z', 'ctrl+shift+z'], () => {\n            if (graph.canRedo()) {\n                graph.redo()\n            }\n            return false\n        })\n        graph.bindKey(['meta+a', 'ctrl+a'], () => {\n            const nodes = graph.getNodes()\n            if (nodes) {\n                graph.select(nodes)\n            }\n        })\n        graph.bindKey(['backspace', 'delete'], () => {\n            const cells = graph.getSelectedCells()\n            if (cells.length) {\n                graph.removeCells(cells)\n            }\n        })\n\n        // Init node ports\n        const showPorts = (ports, show) => {\n            for (let i = 0, len = ports.length; i < len; i = i + 1) {\n                ports[i].style.visibility = show ? 'visible' : 'hidden'\n            }\n        }\n        graph.on('node:mouseenter', () => {\n            const container = refContainer.current\n            const ports = container.querySelectorAll('.x6-port-body')\n            showPorts(ports, true)\n        })\n        graph.on('node:mouseleave', () => {\n            const container = refContainer.current\n            const ports = container.querySelectorAll('.x6-port-body')\n            showPorts(ports, false)\n        })\n\n        // Init stencil\n        const stencil = new Stencil({\n            title: 'Components',\n            target: graph,\n            stencilGraphWidth: 350,\n            stencilGraphHeight: 100,\n            groups: [\n                { name: 'STATE', title: 'state' },\n                { name: 'DELAY', title: 'Delay(t)' },\n                {\n                    name: 'DELAY_EXP',\n                    title: 'DelayExp(rate)',\n                },\n                { name: 'DELAY_UNIF', title: 'DelayUnif(a, b)' },\n                {\n                    name: 'DELAY_NORMAL',\n                    title: 'Normal(a, u)',\n                },\n                { name: 'PROBABILITY_NODE', title: 'Probability' },\n            ],\n        })\n        refStencilContainer.current.appendChild(stencil.container)\n        // Init stencil group\n        const r1 = graph.createNode({\n            shape: 'state',\n            x: 180,\n            y: 40,\n            data: { title: 'NEW STATE', exp: '', inv: '', composite: false },\n            ports: { ...ports },\n        })\n        const r2 = graph.createNode({\n            shape: 'delay-exp',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'c',\n                rate: 2,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r3 = graph.createNode({\n            shape: 'delay-unif',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'c',\n                a: 10,\n                b: 20,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r4 = graph.createNode({\n            shape: 'delay',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'c',\n                t: 5,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r5 = graph.createNode({\n            shape: 'delay-normal',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'v',\n                a: 10,\n                u: 5,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r6 = graph.createNode({\n            shape: 'probability-node',\n            x: 180,\n            y: 40,\n            data: {},\n            ports: { ...ports },\n        })\n        stencil.load([r1], 'STATE')\n        stencil.load([r2], 'DELAY_EXP')\n        stencil.load([r3], 'DELAY_UNIF')\n        stencil.load([r4], 'DELAY')\n        stencil.load([r5], 'DELAY_NORMAL')\n        stencil.load([r6], 'PROBABILITY_NODE')\n\n        // Init node&edge action\n        graph.on('cell:click', ({ cell }) => {\n            setState({\n                shape: cell.shape,\n                id: cell.id,\n                data: cell.data ? cell.data : {},\n            })\n        })\n\n        setG(graph)\n    }, [refContainer, refStencilContainer])\n\n    const removeAllCells = () => {\n        G.clearCells()\n    }\n\n    const download = (filename, content, b64 = true) => {\n        if (b64) {\n            content = Base64.encode(content)\n        }\n\n        const downfile = new File([content], filename, {\n            type: 'text/plain',\n        })\n        const tmpLink = document.createElement('a')\n        const objectUrl = URL.createObjectURL(downfile)\n        tmpLink.href = objectUrl\n        tmpLink.download = downfile.name\n        document.body.appendChild(tmpLink)\n        tmpLink.click()\n\n        document.body.removeChild(tmpLink)\n        URL.revokeObjectURL(objectUrl)\n    }\n\n    const loadData = (content) => {\n        const raw = Base64.decode(content)\n        const raw_obj = JSON.parse(raw)\n        G.fromJSON(raw_obj)\n    }\n\n    return (\n        <>\n            <div className=\"topbar\">\n                <div className=\"topbar-left\">\n                    <div className=\"topbar-left-title\">\n                        <Button type=\"text\" size=\"small\">\n                            <b>StohM Charts</b>\n                        </Button>\n                    </div>\n\n                    <div className=\"topbar-left-menu\">\n                        <Space wrap size=\"middle\">\n                            <Title\n                                title={title}\n                                onTitleChange={(newTitle) => {\n                                    setTitle(newTitle)\n                                }}\n                            />\n                            {/* New File */}\n                            <Button\n                                size=\"small\"\n                                type=\"primary\"\n                                onClick={() => {\n                                    removeAllCells()\n                                }}\n                            >\n                                New\n                            </Button>\n                            {/* Load File */}\n                            <Upload\n                                showUploadList={false}\n                                beforeUpload={(file) => {\n                                    return new Promise((resolve) => {\n                                        const filename = file.name.substring(\n                                            0,\n                                            file.name.lastIndexOf('.')\n                                        )\n                                        const reader = new FileReader()\n                                        reader.readAsText(file)\n                                        reader.onload = () => {\n                                            G.clearCells()\n                                            loadData(reader.result)\n                                            setTitle(filename)\n                                        }\n                                    })\n                                }}\n                            >\n                                <Button size=\"small\">Load</Button>\n                            </Upload>\n                            {/* Save File */}\n                            <Button\n                                size=\"small\"\n                                onClick={() => {\n                                    const graph_data = G.toJSON()\n                                    download(\n                                        `${title}.smc`,\n                                        JSON.stringify(graph_data)\n                                    )\n                                }}\n                            >\n                                Save\n                            </Button>\n                            {/* Export to Uppaal xml */}\n                            <Button\n                                size=\"small\"\n                                onClick={() => {\n                                    const cells = G.toJSON()\n                                    const output = convert(title, cells)\n                                    const xml = toUppaalXML(output)\n                                    download(`${title}.xml`, xml, false)\n                                }}\n                            >\n                                Export\n                            </Button>\n                            <Dropdown\n                                menu={{\n                                    items: [\n                                        { key: '1', label: 'Case 1' },\n                                        { key: '2', label: 'Case 2' },\n                                    ],\n                                    onClick: ({ key }) => {\n                                        let data\n                                        if (key === '1') {\n                                            data = test_data_b\n                                        } else if (key === '2') {\n                                            data = test_data_a\n                                        }\n                                        setTitle(`Sample_${key}`)\n                                        G.clearCells()\n                                        G.fromJSON(data)\n                                    },\n                                }}\n                            >\n                                <Button size=\"small\">\n                                    Examples\n                                    <DownOutlined />\n                                </Button>\n                            </Dropdown>\n                        </Space>\n                    </div>\n                </div>\n                <div className=\"topbar-right\">\n                    <Button\n                        type=\"text\"\n                        size=\"small\"\n                        icon={<GithubFilled />}\n                        href=\"https://github.com/beiyanpiki/stohMCharts\"\n                        target=\"__blank\"\n                    />\n                </div>\n            </div>\n            <div className=\"app\">\n                <div className=\"app-stencil\" ref={refStencilContainer} />\n                <div className=\"app-content\" ref={refContainer} />\n                <div className=\"app-sidebar\">\n                    {(() => {\n                        switch (state.shape) {\n                            case 'state':\n                                return (\n                                    <StateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            inv: state.data.inv,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    inv: newState.inv,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                inv: newState.inv,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay-exp':\n                                return (\n                                    <DelayExpStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            variable: state.data.variable,\n                                            rate: state.data.rate,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                data: {\n                                                    shape: state.shape,\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    variable: newState.variable,\n                                                    rate: newState.rate,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                variable: newState.variable,\n                                                rate: newState.rate,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay-unif':\n                                return (\n                                    <DelayUnifStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            variable: state.data.variable,\n                                            a: state.data.a,\n                                            b: state.data.b,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    variable: newState.variable,\n                                                    a: newState.a,\n                                                    b: newState.b,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                variable: newState.variable,\n                                                a: newState.a,\n                                                b: newState.b,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay':\n                                return (\n                                    <DelayStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            variable: state.data.variable,\n                                            t: state.data.t,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    variable: newState.variable,\n                                                    t: newState.t,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                variable: newState.variable,\n                                                t: newState.t,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay-normal':\n                                return (\n                                    <DelayNormalStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            inv: state.data.inv,\n                                            variable: state.data.variable,\n                                            a: state.data.a,\n                                            u: state.data.u,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    inv: newState.inv,\n                                                    variable: newState.variable,\n                                                    a: newState.a,\n                                                    u: newState.u,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                inv: newState.inv,\n                                                variable: newState.variable,\n                                                a: newState.a,\n                                                u: newState.u,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'transition':\n                                return (\n                                    <TransitionSidebar\n                                        state={{\n                                            id: state.id,\n                                            guard: state.data.guard,\n                                            sync: state.data.sync,\n                                            update: state.data.update,\n                                        }}\n                                        onChange={(newState) => {\n                                            console.log(newState)\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    guard: newState.guard,\n                                                    sync: newState.sync,\n                                                    update: newState.update,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                guard: newState.guard,\n                                                sync: newState.sync,\n                                                update: newState.update,\n                                            })\n                                        }}\n                                        onSwitch={() => {\n                                            setState({\n                                                id: state.id,\n                                                shape: 'probability-transition',\n                                                data: {\n                                                    sync: '',\n                                                    update: '',\n                                                    weight: 0,\n                                                },\n                                            })\n                                            const cell = G.getCellById(state.id)\n                                            cell.prop(\n                                                'shape',\n                                                'probability-transition'\n                                            )\n                                            cell.attr('line/stroke', '#1890ff')\n                                            cell.attr('line/strokeDasharray', 5)\n                                            cell.setData({\n                                                sync: '',\n                                                update: '',\n                                                weight: 0,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'probability-transition':\n                                return (\n                                    <ProbabilityTransitionSidebar\n                                        state={{\n                                            id: state.id,\n                                            weight: state.data.weight,\n                                            sync: state.data.sync,\n                                            update: state.data.update,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    weight: newState.weight,\n                                                    sync: newState.sync,\n                                                    update: newState.update,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                weight: newState.weight,\n                                                sync: newState.sync,\n                                                update: newState.update,\n                                            })\n                                        }}\n                                        onSwitch={() => {\n                                            setState({\n                                                id: state.id,\n                                                shape: 'transition',\n                                                data: {\n                                                    sync: '',\n                                                    update: '',\n                                                    guard: '',\n                                                },\n                                            })\n                                            const cell = G.getCellById(state.id)\n                                            cell.prop('shape', 'transition')\n                                            cell.attr('line/stroke', '#faad14')\n                                            cell.attr(\n                                                'line/strokeDasharray',\n                                                null\n                                            )\n                                            cell.setData({\n                                                sync: '',\n                                                update: '',\n                                                weight: 0,\n                                            })\n                                        }}\n                                    />\n                                )\n                            default:\n                                return <div></div>\n                        }\n                    })()}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Layout\n","import xml2js from 'xml-js'\n\nconst baseXML = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>\n<nta>\n\\t<declaration>// Place global declarations here.</declaration>\n\\t<template>\n\\t\\t<name>Empty Template</name>\n\\t\\t<declaration>// Place local declarations here.</declaration>\n\\t</template>\n\\t<system>// Place template instantiations here.\nProcess = Template();\n// List one or more processes to be composed into a system.\nsystem Process;\n    </system>\n\\t<queries>\n\\t\\t<query>\n\\t\\t\\t<formula></formula>\n\\t\\t\\t<comment></comment>\n\\t\\t</query>\n\\t</queries>\n</nta>`\n\nexport const toUppaalXML = (datas) => {\n    let result1 = xml2js.xml2js(baseXML, { compact: true })\n    console.log(result1.nta)\n    let global_declaretion = '\\n'\n    for (const chan of datas[0].chan) {\n        global_declaretion += `broadcast chan ${chan};\\n`\n    }\n    console.log(datas[0].variable)\n    for (const variable of datas[0].variable) {\n        global_declaretion += `clock ${variable};\\n`\n    }\n    result1.nta.declaration._text += global_declaretion\n\n    let templates_name = []\n\n    result1.nta.template = []\n    for (const data of datas) {\n        templates_name.push(data.name)\n\n        let x = 0,\n            y = 0\n\n        const tpl = {\n            name: { _text: data.name },\n            declaration: { _text: '// Place local declarations here.' },\n            location: [],\n            branchpoint: [],\n            init: {},\n            transition: [],\n        }\n        // Add location and branchpoint\n        data.vertices.forEach((node_id) => {\n            x += 100\n            y += 0\n            const node_data = data.data.get(node_id)\n            const node_shape = node_data.shape\n            // Insert node\n            let obj = {\n                _attributes: { id: node_id, x: x, y: y },\n            }\n            if (node_shape === 'location') {\n                const { title, invariant, rate_exp } = node_data.data\n                if (title !== '') {\n                    obj.name = {\n                        _attributes: { x: x, y: y + 20 },\n                        _text: title,\n                    }\n                }\n                if (invariant !== '' || rate_exp !== '') {\n                    obj.label = []\n                    if (invariant !== '') {\n                        obj.label.push({\n                            _attributes: { kind: 'invariant', x: x, y: y + 40 },\n                            _text: invariant,\n                        })\n                    }\n                    if (rate_exp !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'exponentialrate',\n                                x: x,\n                                y: y + 60,\n                            },\n                            _text: `${rate_exp}`,\n                        })\n                    }\n                }\n                tpl.location.push(obj)\n            } else if (node_shape === 'branch') {\n                tpl.branchpoint.push(obj)\n            }\n            // Insert edge\n            const source_id = node_id\n            const edges = data.adjList.get(node_id)\n            edges.forEach((edge_id) => {\n                const edge_data = data.data.get(edge_id)\n                obj = {\n                    source: { _attributes: { ref: source_id } },\n                    target: { _attributes: { ref: edge_data.target } },\n                    label: [],\n                }\n                if (edge_data.shape === 'transition') {\n                    const { guard, sync, update } = edge_data.data\n                    if (guard !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'guard',\n                                x: x + 50,\n                                y: y + 10,\n                            },\n                            _text: guard,\n                        })\n                    }\n                    if (sync !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'synchronisation',\n                                x: x + 50,\n                                y: y + 20,\n                            },\n                            _text: sync,\n                        })\n                    }\n                    if (update !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'assignment',\n                                x: x + 50,\n                                y: y + 30,\n                            },\n                            _text: update,\n                        })\n                    }\n                } else if (edge_data.shape === 'prob-transition') {\n                    const { update, sync, weight } = edge_data.data\n                    if (weight !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'probability',\n                                x: x + 50,\n                                y: y + 10,\n                            },\n                            _text: `${weight}`,\n                        })\n                    }\n                    if (sync !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'synchronisation',\n                                x: x + 50,\n                                y: y + 20,\n                            },\n                            _text: sync,\n                        })\n                    }\n                    if (update !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'update',\n                                x: x + 50,\n                                y: y + 30,\n                            },\n                            _text: update,\n                        })\n                    }\n                }\n                tpl.transition.push(obj)\n            })\n        })\n        tpl.init = { _attributes: { ref: data.root } }\n\n        result1.nta.template.push(tpl)\n    }\n\n    let process = '// Place template instantiations here.\\n'\n    for (const template_name of templates_name) {\n        process += `${template_name}_1 = ${template_name}();\\n`\n    }\n    process += 'system '\n    for (const template_name of templates_name) {\n        process += `${template_name}_1,`\n    }\n    process = process.substring(0, process.length - 1) + ';'\n    result1.nta.system._text = process\n\n    const newXml = xml2js.js2xml(result1, { compact: true })\n    return newXml\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport Layout from './Layout'\nimport 'normalize.css'\nimport 'vfonts/Lato.css'\nimport 'vfonts/FiraCode.css'\nimport './global.css'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n    <React.StrictMode>\n        <Layout />\n    </React.StrictMode>\n)\n"],"sourceRoot":""}