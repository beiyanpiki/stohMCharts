{"version":3,"sources":["components/State.js","components/DelayExp.js","components/DelayUnif.js","components/Delay.js","components/DelayNormal.js","sidebar/StateInfo.js","sidebar/DelayExpStateInfo.js","sidebar/DelayUnifStateInfo.js","sidebar/DelayStateInfo.js","sidebar/DelayNormalStateInfo.js","sidebar/TransitionSidebar.js","sidebar/ProbabilityTransitionSidebar.js","utils/random.js","algorithm/convert.js","algorithm/test_data.js","Layout.js","utils/toUppaal.js","index.js"],"names":["State","_ref","_node$data","node","data","title","exp","inv","composite","react_default","a","createElement","className","concat","DelayExpState","variable","rate","DelayUnifState","b","DelayState","t","DelayNormalState","u","StateInfo","state","onChange","_Form$useForm","Form","useForm","form","Object","slicedToArray","useEffect","resetFields","es_form","labelCol","span","wrapperCol","initialValues","id","onFinish","values","objectSpread","Item","label","name","input","disabled","valuePropName","offset","es_checkbox","es_button","type","htmlType","block","DelayExpStateInfo","input_number","DelayUnifStateInfo","DelayStateInfo","DelayNormalStateInfo","TransitionSidebar","onSwitch","guard","sync","update","es_radio","Group","defaultValue","buttonStyle","e","target","value","Button","ProbabilityTransitionSidebar","weight","randomString","randomLen","min","max","str","range","arr","Math","round","random","i","length","generateID","Graph","classCallCheck","this","vertices","Map","adjList","root","createClass","key","shape","push","set","source","get","_this","cnt","forEach","v","edge_id","has","_step","min_times","min_node","_iterator","convert_createForOfIteratorHelper","s","n","done","_ref2","node_id","times","err","f","nodes","edges","_this2","_ref3","add_vertices","_ref4","add_edge","cell","getRoot","convertNode","vis","G","A","node_data","includes","invariant","rate_exp","edge_data","target_id","target_data","_node_data$data","node_data_raw","edge_data_raw","new_node_id","new_edge_1","_node_data$data2","my_prob","sum_prob","edge","ed","prob","test_data_a","cells","position","x","y","size","width","height","view","ports","groups","top","attrs","circle","r","magnet","stroke","strokeWidth","fill","style","visibility","right","bottom","left","items","group","zIndex","children","parent","visible","router","connector","port","line","strokeDasharray","register","component","effect","registerNode","inherit","body","rx","ry","registerEdge","targetMarker","Layout","refContainer","useRef","refStencilContainer","_useState","useState","_useState2","setState","_useState3","_useState4","setG","graph","container","current","grid","mousewheel","enabled","zoomAtMousePosition","modifiers","minScale","maxScale","highlighting","embedding","args","padding","magnetAdsorbed","connecting","anchor","connectionPoint","allowBlank","snap","radius","createEdge","validateConnection","targetMagnet","findParent","bbox","getBBox","getNodes","filter","getData","targetBBox","isIntersectWithRect","use","Transform","resizing","rotating","Selection","rubberband","showNodeSelectionBox","Snapline","Keyboard","Clipboard","History","bindKey","getSelectedCells","copy","cut","isClipboardEmpty","paste","cleanSelection","select","canUndo","undo","canRedo","redo","removeCells","on","clearCells","fromJSON","xml","datas","result1","xml2js","compact","nta","template","_createForOfIteratorHelper","_loop","tpl","_text","declaration","location","branchpoint","init","transition","node_shape","obj","_attributes","kind","source_id","ref","_edge_data$data","_edge_data$data2","js2xml","toUppaalXML","cell_map","composite_nodes","composite_edges","composite_G","composite_A","loadData","composite_node","_composite_nodes","_i","undefined","cell_id","cell_data","sub_G","sub_A","convert","toJSON","console","log","showPorts","show","len","querySelectorAll","stencil","Stencil","stencilGraphWidth","stencilGraphHeight","appendChild","r1","createNode","r2","r3","r4","r5","r6","load","Fragment","space","wrap","dropdown","menu","onClick","DownOutlined","icon","GithubFilled","href","sidebar_StateInfo","newState","getCellById","setData","sidebar_DelayExpStateInfo","sidebar_DelayUnifStateInfo","sidebar_DelayStateInfo","sidebar_DelayNormalStateInfo","sidebar_TransitionSidebar","prop","attr","sidebar_ProbabilityTransitionSidebar","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Layout"],"mappings":"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","file":"static/js/main.75af87b8.chunk.js","sourcesContent":["import React from 'react'\n\nconst State = ({ node }) => {\n    const { title, exp, inv, composite } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {inv}\n            </span>\n        </div>\n    )\n}\n\nexport default State\n","import React from 'react'\nconst DelayExpState = ({ node }) => {\n    const { title, composite, exp, variable, rate } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {variable} = DelayExp({rate})\n            </span>\n        </div>\n    )\n}\n\nexport default DelayExpState\n","import React from 'react'\nconst DelayUnifState = ({ node }) => {\n    const { title, composite, exp, variable, a, b } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {variable} = DelayUnif({a}, {b})\n            </span>\n        </div>\n    )\n}\n\nexport default DelayUnifState\n","import React from 'react'\n\nconst DelayState = ({ node }) => {\n    const { title, composite, exp, variable, t } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {exp}\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {variable} = Delay({t})\n            </span>\n        </div>\n    )\n}\n\nexport default DelayState\n","import React from 'react'\nconst DelayNormalState = ({ node }) => {\n    const { title, composite, variable, a, u, inv } = node.data\n    return (\n        <div className={`node ${composite ? 'parent' : 'child'}`}>\n            <span className=\"label\">\n                <b>{title}</b>\n            </span>\n            <hr />\n            <span className=\"label\">\n                <b>Exp.</b> {variable} = Normal({a}, {u})\n            </span>\n            <br />\n            <span className=\"label\">\n                <b>Inv.</b> {inv}\n            </span>\n        </div>\n    )\n}\n\nexport default DelayNormalState\n","import { Button, Checkbox, Form, Input } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst StateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                inv: state.inv ? state.inv : '',\n                exp: state.exp ? state.exp : '',\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Inv.\" name=\"inv\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 20 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default StateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayExpStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                exp: state.exp ? state.exp : '',\n                variable: state.variable ? state.variable : '',\n                rate: state.rate ? state.rate : 2,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Rate\" name=\"rate\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayExpStateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayUnifStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                exp: state.exp ? state.exp : '',\n                variable: state.variable ? state.variable : '',\n                a: state.a ? state.a : 10,\n                b: state.b ? state.b : 20,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"a\" name=\"a\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item label=\"b\" name=\"b\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayUnifStateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                exp: state.exp ? state.exp : '',\n                variable: state.variable ? state.variable : '',\n                t: state.t ? state.t : 5,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Exp.\" name=\"exp\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"t\" name=\"t\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayStateInfo\n","import { Button, Checkbox, Form, Input, InputNumber } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst DelayNormalStateInfo = ({ state, onChange }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                title: state.title,\n                inv: state.inv ? state.inv : '',\n                variable: state.variable ? state.variable : '',\n                a: state.a ? state.a : 10,\n                u: state.u ? state.u : 20,\n                composite: state.composite,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Var.\" name=\"variable\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"a\" name=\"a\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item label=\"u\" name=\"u\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item label=\"Inv.\" name=\"inv\">\n                <Input />\n            </Form.Item>\n            <Form.Item\n                name=\"composite\"\n                valuePropName=\"checked\"\n                wrapperCol={{ offset: 4, span: 16 }}\n            >\n                <Checkbox>Composite</Checkbox>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default DelayNormalStateInfo\n","import { Button, Form, Input, Radio } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst TransitionSidebar = ({ state, onChange, onSwitch }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                guard: state.guard,\n                sync: state.sync,\n                update: state.update,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"type\">\n                <Radio.Group\n                    defaultValue=\"tran\"\n                    buttonStyle=\"solid\"\n                    onChange={(e) => {\n                        if (e.target.value === 'prob') {\n                            onSwitch()\n                        }\n                    }}\n                >\n                    <Radio.Button value=\"tran\">Transition</Radio.Button>\n                    <Radio.Button value=\"prob\">Probability</Radio.Button>\n                </Radio.Group>\n            </Form.Item>\n\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"guard\" name=\"guard\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"sync\" name=\"sync\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"update\" name=\"update\">\n                <Input />\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default TransitionSidebar\n","import { Button, Form, Input, InputNumber, Radio } from 'antd'\nimport React, { useEffect } from 'react'\n\nconst ProbabilityTransitionSidebar = ({ state, onChange, onSwitch }) => {\n    const [form] = Form.useForm()\n    useEffect(() => {\n        form.resetFields()\n    }, [state])\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 20 }}\n            form={form}\n            initialValues={{\n                id: state.id,\n                weight: state.weight,\n                sync: state.sync,\n                update: state.update,\n            }}\n            onFinish={(values) => {\n                onChange({ ...values })\n            }}\n        >\n            <Form.Item label=\"type\">\n                <Radio.Group\n                    defaultValue=\"prob\"\n                    buttonStyle=\"solid\"\n                    onChange={(e) => {\n                        if (e.target.value === 'tran') {\n                            onSwitch()\n                        }\n                    }}\n                >\n                    <Radio.Button value=\"tran\">Transition</Radio.Button>\n                    <Radio.Button value=\"prob\">Probability</Radio.Button>\n                </Radio.Group>\n            </Form.Item>\n\n            <Form.Item label=\"id\" name=\"id\">\n                <Input disabled />\n            </Form.Item>\n            <Form.Item label=\"sync\" name=\"sync\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"update\" name=\"update\">\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"weight\" name=\"weight\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\" block>\n                    Apply\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default ProbabilityTransitionSidebar\n","export const randomString = (randomLen, min, max) => {\n    let str = '',\n        range = min,\n        arr = [\n            '0',\n            '1',\n            '2',\n            '3',\n            '4',\n            '5',\n            '6',\n            '7',\n            '8',\n            '9',\n            'a',\n            'b',\n            'c',\n            'd',\n            'e',\n            'f',\n            'g',\n            'h',\n            'i',\n            'j',\n            'k',\n            'l',\n            'm',\n            'n',\n            'o',\n            'p',\n            'q',\n            'r',\n            's',\n            't',\n            'u',\n            'v',\n            'w',\n            'x',\n            'y',\n            'z',\n            'A',\n            'B',\n            'C',\n            'D',\n            'E',\n            'F',\n            'G',\n            'H',\n            'I',\n            'J',\n            'K',\n            'L',\n            'M',\n            'N',\n            'O',\n            'P',\n            'Q',\n            'R',\n            'S',\n            'T',\n            'U',\n            'V',\n            'W',\n            'X',\n            'Y',\n            'Z',\n        ]\n    // 随机产生\n    if (randomLen) {\n        range = Math.round(Math.random() * (max - min)) + min\n    }\n    for (let i = 0; i < range; i++) {\n        let pos = Math.round(Math.random() * (arr.length - 1))\n        str += arr[pos]\n    }\n    return str\n}\n\nexport const generateID = () => {\n    return `${randomString(false, 8)}-${randomString(false, 4)}-${randomString(\n        false,\n        4\n    )}-${randomString(false, 4)}-${randomString(false, 12)}`\n}\n","import { generateID } from '../utils'\n\nclass Graph {\n    constructor() {\n        this.vertices = [] // Save ID\n        this.data = new Map() // for node, {id: data, shape}; for edge, {id: data, shape, target}\n        this.adjList = new Map() // {id: [edge_id1, edge_id2]}\n        this.root = null\n    }\n\n    add_vertices(id, shape, data) {\n        this.vertices.push(id)\n        this.data.set(id, { shape, data })\n        this.adjList.set(id, [])\n    }\n\n    add_edge(id, shape, data, source, target) {\n        this.adjList.get(source).push(id)\n        this.data.set(id, { shape, data, target })\n    }\n\n    getRoot() {\n        const cnt = new Map()\n        this.vertices.forEach((v) => {\n            cnt.set(v, 0)\n        })\n        for (let source in this.adjList) {\n            const edges = this.adjList[source]\n            edges.forEach((edge_id) => {\n                const target = this.data.get(edge_id).target\n                if (cnt.has(target)) {\n                    cnt.set(target, cnt.get(target) + 1)\n                }\n            })\n        }\n        let min_times = 9999999,\n            min_node = ''\n        for (let [node_id, times] of cnt) {\n            if (times <= min_times) {\n                min_times = times\n                min_node = node_id\n            }\n        }\n        this.root = min_node\n    }\n\n    loadData(nodes, edges) {\n        nodes.forEach(({ id, shape, data }) => {\n            this.add_vertices(id, shape, data)\n        })\n        edges.forEach(({ id, shape, data, source, target }) => {\n            this.add_edge(id, shape, data, source.cell, target.cell)\n        })\n        this.getRoot()\n    }\n}\n\nconst convertNode = (node_id, vis, G, A) => {\n    if (vis.has(node_id)) {\n        return\n    }\n    vis.set(node_id, true)\n\n    const node_data = G.data.get(node_id)\n    // If node is not exist, create it.\n    if (!A.vertices.includes(node_id)) {\n        A.add_vertices(\n            node_id,\n            node_data.shape === 'probability-node' ? 'branch' : 'location',\n            {\n                title: node_data.data.title,\n                invariant: '',\n                rate_exp: '',\n            }\n        )\n    }\n    const edges = G.adjList.get(node_id)\n    edges.forEach((edge_id) => {\n        const edge_data = G.data.get(edge_id)\n        const target_id = edge_data.target\n\n        // If target node is not exist, create it.\n        const target_data = G.data.get(target_id)\n        if (!A.vertices.includes(target_id)) {\n            A.add_vertices(\n                target_id,\n                target_data.shape === 'probability-node'\n                    ? 'branch'\n                    : 'location',\n                {\n                    title: target_data.data.title,\n                    invariant: '',\n                    rate_exp: '',\n                }\n            )\n        }\n        // Link source to target\n        if (node_data.shape !== 'delay') {\n            if (node_data.shape === 'probability-node') {\n                A.add_edge(\n                    edge_id,\n                    'prob-transition',\n                    {\n                        update: edge_data.data.update,\n                        sync: edge_data.data.sync,\n                        weight: edge_data.data.weight,\n                    },\n                    node_id,\n                    target_id\n                )\n            } else {\n                A.add_edge(\n                    edge_id,\n                    'transition',\n                    {\n                        guard: edge_data.data.guard,\n                        sync: edge_data.data.sync,\n                        update: edge_data.data.update,\n                    },\n                    node_id,\n                    target_id\n                )\n            }\n        }\n\n        // DelayUnif(a, b)\n        if (node_data.shape === 'delay-unif') {\n            // Algorithm 1: Line 7\n            const { variable, a, b } = node_data.data\n            const node_data_raw = A.data.get(node_id)\n            A.data.set(node_id, {\n                ...node_data_raw,\n                data: {\n                    ...node_data_raw.data,\n                    invariant: `${variable} <= ${b}`,\n                },\n            })\n\n            const edge_data_raw = A.data.get(edge_id)\n            A.data.set(edge_id, {\n                ...edge_data_raw,\n                data: {\n                    ...edge_data_raw.data,\n                    guard: `${variable} >= ${a}`,\n                },\n            })\n        }\n        // DelayExp(rate)\n        if (node_data.shape === 'delay-exp') {\n            // Algorithm 1: Line 8\n            const { rate } = node_data.data\n            const node_data_raw = A.data.get(node_id)\n            A.data.set(node_id, {\n                ...node_data_raw,\n                data: {\n                    ...node_data_raw.data,\n                    rate_exp: rate,\n                },\n            })\n        }\n        // Delay(t)\n        if (node_data.shape === 'delay') {\n            // Algorithm 1: Line 9\n            // Create New Node and Link node\n            const new_node_id = generateID()\n            A.add_vertices(new_node_id, 'location', {\n                title: '',\n                invariant: `${node_data.data.variable} <= ${node_data.data.t}`,\n                rate_exp: '',\n            })\n            const new_edge_1 = generateID()\n            A.add_edge(\n                new_edge_1,\n                'transition',\n                {\n                    guard: '',\n                    sync: '',\n                    update: `${node_data.data.variable} = 0`,\n                },\n                node_id,\n                new_node_id\n            )\n            A.add_edge(\n                edge_id,\n                'transition',\n                {\n                    guard: `${node_data.data.variable} == ${node_data.data.t}`,\n                    sync: edge_data.data.sync,\n                    update: edge_data.data.update,\n                },\n                new_node_id,\n                target_id\n            )\n        }\n        // Normal(a, u)\n        if (node_data.shape === 'normal') {\n            // Algorithm 1: Line 10\n            const { variable, a, u } = node_data.data\n            const edge_data_raw = A.data.get(edge_id)\n            A.data.set(edge_id, {\n                ...edge_data_raw,\n                data: {\n                    ...edge_data_raw.data,\n                    update: `${variable} = Norm(${a}, ${u})`,\n                },\n            })\n        }\n        // Probability\n        if (node_data.shape === 'probability-node') {\n            // Algorithm 1: Line 13\n            const my_prob = edge_data.data.weight\n            let sum_prob = 0\n            edges.forEach((edge) => {\n                const ed = G.data.get(edge)\n                if (ed.shape === 'probability-transition') {\n                    sum_prob += ed.data.weight\n                }\n            })\n            const prob = my_prob / sum_prob\n            const edge_data_raw = A.data.get(edge_id)\n            A.data.set(edge_id, {\n                ...edge_data_raw,\n                data: {\n                    ...edge_data_raw.data,\n                    weight: prob,\n                },\n            })\n        }\n        // Action\n        // if (node_id === target_id) {\n        //     console.log(\"Self Loop!!\", edge_id)\n        //     // Algorithm 1: Line 11\n        //     A.add_edge(edge_id, 'transition', {\n        //         guard: edge_data.data.guard,\n        //         sync: edge_data.data.sync,\n        //         update: edge_data.data.update\n        //     }, node_id, target_id)\n        // }\n        convertNode(target_id, vis, G, A)\n    })\n}\n\nexport const convert = (data) => {\n    let template = []\n\n    let cell_map = new Map()\n    data.cells.forEach((cell) => {\n        cell_map.set(cell.id, cell)\n    })\n\n    // Find all composite node\n    let composite_nodes = [],\n        composite_edges = []\n    data.cells.forEach((cell) => {\n        if ('composite' in cell.data && cell.data.composite) {\n            composite_nodes.push(cell)\n        }\n    })\n    data.cells.forEach((cell) => {\n        if (\n            cell.shape === 'transition' ||\n            cell.shape === 'probability-transition'\n        ) {\n            if (!('parent' in cell) || cell.source.cell === cell.target.cell) {\n                composite_edges.push(cell)\n            }\n        }\n    })\n    let composite_G = new Graph(),\n        composite_A = new Graph()\n    composite_G.loadData(composite_nodes, composite_edges)\n    let vis = new Map()\n    convertNode(composite_G.root, vis, composite_G, composite_A)\n\n    template.push({\n        name: 'overall',\n        vertices: composite_A.vertices,\n        data: composite_A.data,\n        adjList: composite_A.adjList,\n        root: composite_G.root,\n    })\n\n    // Find all child node\n    for (let composite_node of composite_nodes) {\n        if (composite_node.children === undefined) {\n            break\n        }\n        let nodes = [],\n            edges = []\n        composite_node.children.forEach((cell_id) => {\n            const cell_data = cell_map.get(cell_id)\n            if (\n                cell_data.shape === 'transition' ||\n                cell_data.shape === 'probability-transition'\n            ) {\n                edges.push(cell_data)\n            } else {\n                nodes.push(cell_data)\n            }\n        })\n        if (nodes.length === 0) {\n            break\n        }\n        let sub_G = new Graph(),\n            sub_A = new Graph(),\n            vis = new Map()\n        sub_G.loadData(nodes, edges)\n        convertNode(sub_G.root, vis, sub_G, sub_A)\n        template.push({\n            name: composite_node.data.title,\n            vertices: sub_A.vertices,\n            data: sub_A.data,\n            adjList: sub_A.adjList,\n            root: sub_G.root,\n        })\n    }\n    return template\n}\n","export const test_data_a = {\n    cells: [\n        {\n            position: {\n                x: 110,\n                y: 100,\n            },\n            size: {\n                width: 980,\n                height: 520,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n            data: {\n                title: 'A',\n                exp: '',\n                inv: '',\n                composite: true,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 1,\n            children: [\n                'e117d7aa-3ad4-404e-bcee-7b6f186daeec',\n                '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n                'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                'dbf27753-0dc0-4a7b-ad2c-71e163a93f43',\n                '17fb3b36-3d15-4438-b536-82fb04667055',\n                'c847f05b-f39b-4c1a-85b4-1cbdcf8950f2',\n                '5c73ddff-16f4-4bcd-a4d9-f366811d8c3a',\n                'de4750f4-b9f9-492c-89f7-6df3c9fb3a05',\n                'af6313c9-8705-4984-bdb6-23f2ed4612bb',\n            ],\n        },\n        {\n            position: {\n                x: 161,\n                y: 317,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'e117d7aa-3ad4-404e-bcee-7b6f186daeec',\n            data: {\n                title: 'A1',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 2,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 436,\n                y: 317,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'delay',\n            id: '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n            data: {\n                title: 'A2',\n                exp: '',\n                variable: 'c',\n                t: 5,\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '724e8f7d-266c-4145-9c1b-717f521da6dc',\n                    },\n                    {\n                        group: 'right',\n                        id: '5c2655b9-d2cc-43aa-b76e-4deb6af11e02',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '3095bfb1-28a4-4a62-a6a6-1ce986a563d4',\n                    },\n                    {\n                        group: 'left',\n                        id: '247497f9-a0ff-48aa-ba8f-e12b35064613',\n                    },\n                ],\n            },\n            zIndex: 3,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 754,\n                y: 350,\n            },\n            size: {\n                width: 20,\n                height: 20,\n            },\n            visible: true,\n            shape: 'probability-node',\n            id: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n            data: {},\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '54e2d0ab-e2e6-4b20-8215-e2a50d4236a2',\n                    },\n                    {\n                        group: 'right',\n                        id: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '6855da3f-d57c-4ba2-939a-28882eb50ee4',\n                    },\n                    {\n                        group: 'left',\n                        id: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n                    },\n                ],\n            },\n            zIndex: 4,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 850,\n                y: 170,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'dbf27753-0dc0-4a7b-ad2c-71e163a93f43',\n            data: {\n                title: 'A3',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 5,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 850,\n                y: 443,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: '17fb3b36-3d15-4438-b536-82fb04667055',\n            data: {\n                title: 'A4',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 6,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: 'c847f05b-f39b-4c1a-85b4-1cbdcf8950f2',\n            source: {\n                cell: 'e117d7aa-3ad4-404e-bcee-7b6f186daeec',\n                port: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n            },\n            target: {\n                cell: '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n                port: '247497f9-a0ff-48aa-ba8f-e12b35064613',\n            },\n            zIndex: 7,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '5c73ddff-16f4-4bcd-a4d9-f366811d8c3a',\n            source: {\n                cell: '9d3efdb3-f87f-4e78-a9c0-a9dc5805caa3',\n                port: '5c2655b9-d2cc-43aa-b76e-4deb6af11e02',\n            },\n            target: {\n                cell: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                port: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n            },\n            zIndex: 8,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 12,\n            },\n            id: 'de4750f4-b9f9-492c-89f7-6df3c9fb3a05',\n            source: {\n                cell: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: 'dbf27753-0dc0-4a7b-ad2c-71e163a93f43',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 9,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 17,\n            },\n            id: 'af6313c9-8705-4984-bdb6-23f2ed4612bb',\n            source: {\n                cell: 'd502d11c-3c0b-4d15-99a5-480ef71af868',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: '17fb3b36-3d15-4438-b536-82fb04667055',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 10,\n            parent: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n        },\n        {\n            position: {\n                x: 109.99999999999682,\n                y: 702.0000000000063,\n            },\n            size: {\n                width: 980,\n                height: 530,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n            data: {\n                title: 'B',\n                exp: '',\n                inv: '',\n                composite: true,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 11,\n            children: [\n                '59752520-f097-44d0-a96e-8d563eded661',\n                '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n                'f8c408ab-20dc-4c41-a486-35224d069364',\n                'bc3ef988-e21d-4dd4-a996-d89151cdf37e',\n                '54be5835-e8aa-455a-95f7-a788fca962af',\n                '29916c50-2e09-41c9-9e23-ff6d067e69ce',\n                '37363a6d-ae54-4184-ace6-13f87c89ccec',\n                'fd53a442-3f0f-4f05-aae6-02b0a10e94e7',\n            ],\n        },\n        {\n            position: {\n                x: 161,\n                y: 894,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: '59752520-f097-44d0-a96e-8d563eded661',\n            data: {\n                title: 'B1',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 12,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            position: {\n                x: 454,\n                y: 927,\n            },\n            size: {\n                width: 20,\n                height: 20,\n            },\n            visible: true,\n            shape: 'probability-node',\n            id: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n            data: {},\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: '54e2d0ab-e2e6-4b20-8215-e2a50d4236a2',\n                    },\n                    {\n                        group: 'right',\n                        id: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n                    },\n                    {\n                        group: 'bottom',\n                        id: '6855da3f-d57c-4ba2-939a-28882eb50ee4',\n                    },\n                    {\n                        group: 'left',\n                        id: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n                    },\n                ],\n            },\n            zIndex: 13,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            position: {\n                x: 574,\n                y: 789,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 14,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            position: {\n                x: 574,\n                y: 1020,\n            },\n            size: {\n                width: 180,\n                height: 86,\n            },\n            view: 'react-shape-view',\n            shape: 'state',\n            id: 'f8c408ab-20dc-4c41-a486-35224d069364',\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                inv: '',\n                composite: false,\n            },\n            ports: {\n                groups: {\n                    top: {\n                        position: 'top',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    right: {\n                        position: 'right',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    bottom: {\n                        position: 'bottom',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                    left: {\n                        position: 'left',\n                        attrs: {\n                            circle: {\n                                r: 8,\n                                magnet: true,\n                                stroke: '#5F95FF',\n                                strokeWidth: 2,\n                                fill: '#fff',\n                                style: {\n                                    visibility: 'hidden',\n                                },\n                            },\n                        },\n                    },\n                },\n                items: [\n                    {\n                        group: 'top',\n                        id: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n                    },\n                    {\n                        group: 'right',\n                        id: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n                    },\n                    {\n                        group: 'bottom',\n                        id: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n                    },\n                    {\n                        group: 'left',\n                        id: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n                    },\n                ],\n            },\n            zIndex: 15,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: 'bc3ef988-e21d-4dd4-a996-d89151cdf37e',\n            source: {\n                cell: '59752520-f097-44d0-a96e-8d563eded661',\n                port: 'fe34202c-b5bf-4363-8572-4b0217c49a80',\n            },\n            target: {\n                cell: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                port: 'b57cf501-9057-4bd8-b713-be28b4af0de4',\n            },\n            zIndex: 16,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 12,\n            },\n            id: 'fd53a442-3f0f-4f05-aae6-02b0a10e94e7',\n            source: {\n                cell: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: 'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 17,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'probability-transition',\n            attrs: {\n                line: {\n                    stroke: '#1890ff',\n                    strokeDasharray: 5,\n                },\n            },\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n                weight: 17,\n            },\n            id: '29916c50-2e09-41c9-9e23-ff6d067e69ce',\n            source: {\n                cell: '932a73bc-ee76-4e0d-a1c2-769f29c12407',\n                port: '47ebf83a-d0ad-4441-b889-5191d351c8d1',\n            },\n            target: {\n                cell: 'f8c408ab-20dc-4c41-a486-35224d069364',\n                port: 'c1d22b2e-6108-43be-9687-7d63d60842d0',\n            },\n            zIndex: 18,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '37363a6d-ae54-4184-ace6-13f87c89ccec',\n            source: {\n                cell: 'ee63a1c0-f581-4b57-8253-4181cc9b34b1',\n                port: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n            },\n            target: {\n                cell: '59752520-f097-44d0-a96e-8d563eded661',\n                port: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n            },\n            zIndex: 19,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '54be5835-e8aa-455a-95f7-a788fca962af',\n            source: {\n                cell: 'f8c408ab-20dc-4c41-a486-35224d069364',\n                port: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n            },\n            target: {\n                cell: '59752520-f097-44d0-a96e-8d563eded661',\n                port: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n            },\n            zIndex: 20,\n            parent: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n        },\n        {\n            shape: 'transition',\n            router: {\n                name: 'metro',\n            },\n            connector: {\n                name: 'rounded',\n            },\n            data: {\n                guard: '',\n                sync: '',\n                update: '',\n            },\n            id: '1cd45879-64d6-4618-a5af-0b78bf2e3eff',\n            source: {\n                cell: 'd42792c0-3369-4281-88ea-2dd1d47df34e',\n                port: 'fc4e51a1-8e13-40a0-a618-22421f5bd5ac',\n            },\n            target: {\n                cell: '0cc8e00f-9a1e-49a4-8d12-2309100bfe58',\n                port: 'd8dc8b0f-0bc3-4e7c-be5d-a0c122023d41',\n            },\n            zIndex: 21,\n        },\n    ],\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Graph } from '@antv/x6'\nimport { Transform } from '@antv/x6-plugin-transform'\nimport { Selection } from '@antv/x6-plugin-selection'\nimport { Snapline } from '@antv/x6-plugin-snapline'\nimport { Keyboard } from '@antv/x6-plugin-keyboard'\nimport { Clipboard } from '@antv/x6-plugin-clipboard'\nimport { History } from '@antv/x6-plugin-history'\nimport { Stencil } from '@antv/x6-plugin-stencil'\nimport { register } from '@antv/x6-react-shape'\n\nimport {\n    DelayExpState,\n    DelayNormalState,\n    DelayState,\n    DelayUnifState,\n    State,\n} from './components'\nimport {\n    DelayExpStateInfo,\n    DelayNormalStateInfo,\n    DelayStateInfo,\n    DelayUnifStateInfo,\n    ProbabilityTransitionSidebar,\n    StateInfo,\n    TransitionSidebar,\n} from './sidebar'\nimport { convert, test_data_a } from './algorithm'\nimport { toUppaalXML } from './utils'\nimport { Button, Dropdown, Space } from 'antd'\nimport { GithubFilled, DownOutlined } from '@ant-design/icons'\nconst ports = {\n    groups: {\n        top: {\n            position: 'top',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n        right: {\n            position: 'right',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n        bottom: {\n            position: 'bottom',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n        left: {\n            position: 'left',\n            attrs: {\n                circle: {\n                    r: 8,\n                    magnet: true,\n                    stroke: '#5F95FF',\n                    strokeWidth: 2,\n                    fill: '#fff',\n                    style: {\n                        visibility: 'hidden',\n                    },\n                },\n            },\n        },\n    },\n    items: [\n        {\n            group: 'top',\n        },\n        {\n            group: 'right',\n        },\n        {\n            group: 'bottom',\n        },\n        {\n            group: 'left',\n        },\n    ],\n}\n// Register custom component\nregister({\n    shape: 'state',\n    width: 180,\n    height: 86,\n    component: State,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay-exp',\n    width: 180,\n    height: 86,\n    component: DelayExpState,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay-unif',\n    width: 180,\n    height: 86,\n    component: DelayUnifState,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay',\n    width: 180,\n    height: 86,\n    component: DelayState,\n    effect: ['data'],\n})\nregister({\n    shape: 'delay-normal',\n    width: 180,\n    height: 86,\n    component: DelayNormalState,\n    effect: ['data'],\n})\nGraph.registerNode(\n    'probability-node',\n    {\n        inherit: 'circle',\n        width: 20,\n        height: 20,\n        attrs: {\n            body: {\n                stroke: '#8f8f8f',\n                strokeWidth: 1,\n                fill: '#fff',\n                rx: 6,\n                ry: 6,\n            },\n        },\n    },\n    true\n)\nGraph.registerNode('initial-node', {\n    inherit: 'circle',\n    width: 30,\n    height: 30,\n    attrs: {\n        body: {\n            fill: '#888888',\n        },\n    },\n})\n\n// Register custom edge\nGraph.registerEdge('transition', {\n    inherit: 'edge',\n    router: { name: 'metro' },\n    connector: { name: 'rounded' },\n    attrs: {\n        line: {\n            stroke: '#faad14',\n            strokeDasharray: null,\n            targetMarker: 'classic',\n        },\n    },\n    data: {\n        guard: '',\n        sync: '',\n        update: '',\n    },\n})\nGraph.registerEdge('probability-transition', {\n    inherit: 'edge',\n    router: { name: 'metro' },\n    connector: { name: 'rounded' },\n    attrs: {\n        line: {\n            stroke: '#1890ff',\n            strokeDasharray: 5,\n            targetMarker: 'classic',\n        },\n    },\n    data: {\n        sync: '',\n        update: '',\n        weight: 0,\n    },\n})\n\nconst Layout = () => {\n    const refContainer = useRef(null)\n    const refStencilContainer = useRef(null)\n    const [state, setState] = useState({\n        shape: '',\n        id: '',\n        data: {},\n    })\n    const [G, setG] = useState(null)\n\n    useEffect(() => {\n        // Init graph\n        const graph = new Graph({\n            container: refContainer.current,\n            grid: true,\n            mousewheel: {\n                enabled: true,\n                zoomAtMousePosition: true,\n                modifiers: 'ctrl',\n                minScale: 0.5,\n                maxScale: 3,\n            },\n            highlighting: {\n                embedding: {\n                    name: 'stroke',\n                    args: {\n                        padding: -1,\n                        attrs: {\n                            stroke: '#73d13d',\n                        },\n                    },\n                },\n                magnetAdsorbed: {\n                    name: 'stroke',\n                    args: {\n                        attrs: {\n                            fill: '#5F95FF',\n                            stroke: '#5F95FF',\n                        },\n                    },\n                },\n            },\n            connecting: {\n                anchor: 'center',\n                connectionPoint: 'anchor',\n                allowBlank: false,\n                snap: {\n                    radius: 20,\n                },\n                createEdge() {\n                    return graph.createEdge({ shape: 'transition' })\n                },\n                validateConnection({ targetMagnet }) {\n                    return !!targetMagnet\n                },\n            },\n            embedding: {\n                enabled: true,\n                findParent({ node }) {\n                    const bbox = node.getBBox()\n                    return this.getNodes().filter((node) => {\n                        const data = node.getData()\n                        if (data && data.composite) {\n                            const targetBBox = node.getBBox()\n                            return bbox.isIntersectWithRect(targetBBox)\n                        }\n                        return false\n                    })\n                },\n            },\n        })\n            .use(\n                new Transform({\n                    resizing: true,\n                    rotating: true,\n                })\n            )\n            .use(\n                new Selection({\n                    enabled: true,\n                    rubberband: true,\n                    showNodeSelectionBox: true,\n                })\n            )\n            .use(\n                new Snapline({\n                    enabled: true,\n                })\n            )\n            .use(\n                new Keyboard({\n                    enabled: true,\n                })\n            )\n            .use(\n                new Clipboard({\n                    enabled: true,\n                })\n            )\n            .use(\n                new History({\n                    enabled: true,\n                })\n            )\n\n        // Init keymap\n        graph.bindKey(['meta+c', 'ctrl+c'], () => {\n            const cells = graph.getSelectedCells()\n            if (cells.length) {\n                graph.copy(cells)\n            }\n            return false\n        })\n        graph.bindKey(['meta+x', 'ctrl+x'], () => {\n            const cells = graph.getSelectedCells()\n            if (cells.length) {\n                graph.cut(cells)\n            }\n            return false\n        })\n        graph.bindKey(['meta+v', 'ctrl+v'], () => {\n            if (!graph.isClipboardEmpty()) {\n                const cells = graph.paste({ offset: 32 })\n                graph.cleanSelection()\n                graph.select(cells)\n            }\n            return false\n        })\n        graph.bindKey(['meta+z', 'ctrl+z'], () => {\n            if (graph.canUndo()) {\n                graph.undo()\n            }\n            return false\n        })\n        graph.bindKey(['meta+shift+z', 'ctrl+shift+z'], () => {\n            if (graph.canRedo()) {\n                graph.redo()\n            }\n            return false\n        })\n        graph.bindKey(['meta+a', 'ctrl+a'], () => {\n            const nodes = graph.getNodes()\n            if (nodes) {\n                graph.select(nodes)\n            }\n        })\n        graph.bindKey(['backspace', 'delete'], () => {\n            const cells = graph.getSelectedCells()\n            if (cells.length) {\n                graph.removeCells(cells)\n            }\n        })\n\n        graph.on('blank:contextmenu', () => {\n            graph.clearCells()\n            graph.fromJSON(test_data_a)\n        })\n\n        graph.on('blank:dblclick', () => {\n            const cells = graph.toJSON()\n\n            const output = convert(cells)\n            const xml = toUppaalXML(output)\n            console.log(xml)\n        })\n\n        // Init node ports\n        const showPorts = (ports, show) => {\n            for (let i = 0, len = ports.length; i < len; i = i + 1) {\n                ports[i].style.visibility = show ? 'visible' : 'hidden'\n            }\n        }\n        graph.on('node:mouseenter', () => {\n            const container = refContainer.current\n            const ports = container.querySelectorAll('.x6-port-body')\n            showPorts(ports, true)\n        })\n        graph.on('node:mouseleave', () => {\n            const container = refContainer.current\n            const ports = container.querySelectorAll('.x6-port-body')\n            showPorts(ports, false)\n        })\n\n        // Init stencil\n        const stencil = new Stencil({\n            title: 'Components',\n            target: graph,\n            stencilGraphWidth: 350,\n            stencilGraphHeight: 100,\n            groups: [\n                { name: 'STATE', title: 'state' },\n                { name: 'DELAY', title: 'Delay(t)' },\n                {\n                    name: 'DELAY_EXP',\n                    title: 'DelayExp(rate)',\n                },\n                { name: 'DELAY_UNIF', title: 'DelayUnif(a, b)' },\n                {\n                    name: 'DELAY_NORMAL',\n                    title: 'Normal(a, u)',\n                },\n                { name: 'PROBABILITY_NODE', title: 'Probability' },\n            ],\n        })\n        refStencilContainer.current.appendChild(stencil.container)\n        // Init stencil group\n        const r1 = graph.createNode({\n            shape: 'state',\n            x: 180,\n            y: 40,\n            data: { title: 'NEW STATE', exp: '', inv: '', composite: false },\n            ports: { ...ports },\n        })\n        const r2 = graph.createNode({\n            shape: 'delay-exp',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'c',\n                rate: 2,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r3 = graph.createNode({\n            shape: 'delay-unif',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'c',\n                a: 10,\n                b: 20,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r4 = graph.createNode({\n            shape: 'delay',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'c',\n                t: 5,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r5 = graph.createNode({\n            shape: 'delay-normal',\n            x: 180,\n            y: 40,\n            data: {\n                title: 'NEW STATE',\n                exp: '',\n                variable: 'v',\n                a: 10,\n                u: 5,\n                composite: false,\n            },\n            ports: { ...ports },\n        })\n        const r6 = graph.createNode({\n            shape: 'probability-node',\n            x: 180,\n            y: 40,\n            data: {},\n            ports: { ...ports },\n        })\n        stencil.load([r1], 'STATE')\n        stencil.load([r2], 'DELAY_EXP')\n        stencil.load([r3], 'DELAY_UNIF')\n        stencil.load([r4], 'DELAY')\n        stencil.load([r5], 'DELAY_NORMAL')\n        stencil.load([r6], 'PROBABILITY_NODE')\n\n        // Init node&edge action\n        graph.on('cell:click', ({ cell }) => {\n            setState({\n                shape: cell.shape,\n                id: cell.id,\n                data: cell.data ? cell.data : {},\n            })\n        })\n\n        setG(graph)\n    }, [refContainer, refStencilContainer])\n\n    return (\n        <>\n            <div className=\"topbar\">\n                <div className=\"topbar-left\">\n                    <div className=\"topbar-left-title\">\n                        <Button type=\"text\" size=\"small\">\n                            <b>StohM Charts</b>\n                        </Button>\n                    </div>\n\n                    <div className=\"topbar-left-menu\">\n                        <Space wrap size=\"middle\">\n                            <Button size=\"small\" type=\"primary\">\n                                New\n                            </Button>\n                            <Button size=\"small\">Load</Button>\n                            <Button size=\"small\">Save</Button>\n                            <Button size=\"small\">Export</Button>\n                            <Dropdown\n                                menu={{\n                                    items: [{ key: '1', label: '123' }],\n                                    onClick: (e) => {\n                                        console.log(e)\n                                    },\n                                }}\n                            >\n                                <Space>\n                                    <Button size=\"small\">\n                                        Examples\n                                        <DownOutlined />\n                                    </Button>\n                                </Space>\n                            </Dropdown>\n                        </Space>\n                    </div>\n                </div>\n                <div className=\"topbar-right\">\n                    <Button\n                        type=\"text\"\n                        size=\"small\"\n                        icon={<GithubFilled />}\n                        href=\"https://github.com/beiyanpiki/stohMCharts\"\n                        target=\"__blank\"\n                    />\n                </div>\n            </div>\n            <div className=\"app\">\n                <div className=\"app-stencil\" ref={refStencilContainer} />\n                <div className=\"app-content\" ref={refContainer} />\n                <div className=\"app-sidebar\">\n                    {(() => {\n                        switch (state.shape) {\n                            case 'state':\n                                return (\n                                    <StateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            inv: state.data.inv,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    inv: newState.inv,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                inv: newState.inv,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay-exp':\n                                return (\n                                    <DelayExpStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            variable: state.data.variable,\n                                            rate: state.data.rate,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                data: {\n                                                    shape: state.shape,\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    variable: newState.variable,\n                                                    rate: newState.rate,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                variable: newState.variable,\n                                                rate: newState.rate,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay-unif':\n                                return (\n                                    <DelayUnifStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            variable: state.data.variable,\n                                            a: state.data.a,\n                                            b: state.data.b,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    variable: newState.variable,\n                                                    a: newState.a,\n                                                    b: newState.b,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                variable: newState.variable,\n                                                a: newState.a,\n                                                b: newState.b,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay':\n                                return (\n                                    <DelayStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            exp: state.data.exp,\n                                            variable: state.data.variable,\n                                            t: state.data.t,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    exp: newState.exp,\n                                                    variable: newState.variable,\n                                                    t: newState.t,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                exp: newState.exp,\n                                                variable: newState.variable,\n                                                t: newState.t,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'delay-normal':\n                                return (\n                                    <DelayNormalStateInfo\n                                        state={{\n                                            id: state.id,\n                                            title: state.data.title,\n                                            inv: state.data.inv,\n                                            variable: state.data.variable,\n                                            a: state.data.a,\n                                            u: state.data.u,\n                                            composite: state.data.composite,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    title: newState.title,\n                                                    inv: newState.inv,\n                                                    variable: newState.variable,\n                                                    a: newState.a,\n                                                    u: newState.u,\n                                                    composite:\n                                                        newState.composite,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                title: newState.title,\n                                                inv: newState.inv,\n                                                variable: newState.variable,\n                                                a: newState.a,\n                                                u: newState.u,\n                                                composite: newState.composite,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'transition':\n                                return (\n                                    <TransitionSidebar\n                                        state={{\n                                            id: state.id,\n                                            guard: state.data.guard,\n                                            sync: state.data.sync,\n                                            update: state.data.update,\n                                        }}\n                                        onChange={(newState) => {\n                                            console.log(newState)\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    guard: newState.guard,\n                                                    sync: newState.sync,\n                                                    update: newState.update,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                guard: newState.guard,\n                                                sync: newState.sync,\n                                                update: newState.update,\n                                            })\n                                        }}\n                                        onSwitch={() => {\n                                            setState({\n                                                id: state.id,\n                                                shape: 'probability-transition',\n                                                data: {\n                                                    sync: '',\n                                                    update: '',\n                                                    weight: 0,\n                                                },\n                                            })\n                                            const cell = G.getCellById(state.id)\n                                            cell.prop(\n                                                'shape',\n                                                'probability-transition'\n                                            )\n                                            cell.attr('line/stroke', '#1890ff')\n                                            cell.attr('line/strokeDasharray', 5)\n                                            cell.setData({\n                                                sync: '',\n                                                update: '',\n                                                weight: 0,\n                                            })\n                                        }}\n                                    />\n                                )\n                            case 'probability-transition':\n                                return (\n                                    <ProbabilityTransitionSidebar\n                                        state={{\n                                            id: state.id,\n                                            weight: state.data.weight,\n                                            sync: state.data.sync,\n                                            update: state.data.update,\n                                        }}\n                                        onChange={(newState) => {\n                                            setState({\n                                                id: newState.id,\n                                                shape: state.shape,\n                                                data: {\n                                                    weight: newState.weight,\n                                                    sync: newState.sync,\n                                                    update: newState.update,\n                                                },\n                                            })\n                                            const cell = G.getCellById(\n                                                newState.id\n                                            )\n                                            cell.setData({\n                                                weight: newState.weight,\n                                                sync: newState.sync,\n                                                update: newState.update,\n                                            })\n                                        }}\n                                        onSwitch={() => {\n                                            setState({\n                                                id: state.id,\n                                                shape: 'transition',\n                                                data: {\n                                                    sync: '',\n                                                    update: '',\n                                                    guard: '',\n                                                },\n                                            })\n                                            const cell = G.getCellById(state.id)\n                                            cell.prop('shape', 'transition')\n                                            cell.attr('line/stroke', '#faad14')\n                                            cell.attr(\n                                                'line/strokeDasharray',\n                                                null\n                                            )\n                                            cell.setData({\n                                                sync: '',\n                                                update: '',\n                                                weight: 0,\n                                            })\n                                        }}\n                                    />\n                                )\n                            default:\n                                return <div></div>\n                        }\n                    })()}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Layout\n","import xml2js from 'xml-js'\n\nconst baseXML = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>\n<nta>\n\\t<declaration>// Place global declarations here.</declaration>\n\\t<template>\n\\t\\t<name>Empty Template</name>\n\\t\\t<declaration>// Place local declarations here.</declaration>\n\\t</template>\n\\t<system>// Place template instantiations here.\nProcess = Template();\n// List one or more processes to be composed into a system.\nsystem Process;\n    </system>\n\\t<queries>\n\\t\\t<query>\n\\t\\t\\t<formula></formula>\n\\t\\t\\t<comment></comment>\n\\t\\t</query>\n\\t</queries>\n</nta>`\n\nexport const toUppaalXML = (datas) => {\n    let result1 = xml2js.xml2js(baseXML, { compact: true })\n    result1.nta.template = []\n\n    for (const data of datas) {\n        let x = 0,\n            y = 0\n        const tpl = {\n            name: { _text: data.name },\n            declaration: { _text: '// Place local declarations here.' },\n            location: [],\n            branchpoint: [],\n            init: {},\n            transition: [],\n        }\n        // Add location and branchpoint\n        data.vertices.forEach((node_id) => {\n            x += 100\n            y += 0\n            const node_data = data.data.get(node_id)\n            const node_shape = node_data.shape\n            // Insert node\n            let obj = {\n                _attributes: { id: node_id, x: x, y: y },\n            }\n            if (node_shape === 'location') {\n                const { title, invariant, rate_exp } = node_data.data\n                if (title !== '') {\n                    obj.name = {\n                        _attributes: { x: x, y: y + 20 },\n                        _text: title,\n                    }\n                }\n                if (invariant !== '' || rate_exp !== '') {\n                    obj.label = []\n                    if (invariant !== '') {\n                        obj.label.push({\n                            _attributes: { kind: 'invariant', x: x, y: y + 40 },\n                            _text: invariant,\n                        })\n                    }\n                    if (rate_exp !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'exponentialrate',\n                                x: x,\n                                y: y + 60,\n                            },\n                            _text: `${rate_exp}`,\n                        })\n                    }\n                }\n                tpl.location.push(obj)\n            } else if (node_shape === 'branch') {\n                tpl.branchpoint.push(obj)\n            }\n            // Insert edge\n            const source_id = node_id\n            const edges = data.adjList.get(node_id)\n            edges.forEach((edge_id) => {\n                const edge_data = data.data.get(edge_id)\n                obj = {\n                    source: { _attributes: { ref: source_id } },\n                    target: { _attributes: { ref: edge_data.target } },\n                    label: [],\n                }\n                if (edge_data.shape === 'transition') {\n                    const { guard, sync, update } = edge_data.data\n                    if (guard !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'guard',\n                                x: x + 50,\n                                y: y + 10,\n                            },\n                            _text: guard,\n                        })\n                    }\n                    if (sync !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'synchronisation',\n                                x: x + 50,\n                                y: y + 20,\n                            },\n                            _text: sync,\n                        })\n                    }\n                    if (update !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'assignment',\n                                x: x + 50,\n                                y: y + 30,\n                            },\n                            _text: update,\n                        })\n                    }\n                } else if (edge_data.shape === 'prob-transition') {\n                    const { update, sync, weight } = edge_data.data\n                    if (weight !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'probability',\n                                x: x + 50,\n                                y: y + 10,\n                            },\n                            _text: `${weight}`,\n                        })\n                    }\n                    if (sync !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'synchronisation',\n                                x: x + 50,\n                                y: y + 20,\n                            },\n                            _text: sync,\n                        })\n                    }\n                    if (update !== '') {\n                        obj.label.push({\n                            _attributes: {\n                                kind: 'update',\n                                x: x + 50,\n                                y: y + 30,\n                            },\n                            _text: update,\n                        })\n                    }\n                }\n                tpl.transition.push(obj)\n            })\n        })\n        tpl.init = { _attributes: { ref: data.root } }\n\n        result1.nta.template.push(tpl)\n    }\n\n    const newXml = xml2js.js2xml(result1, { compact: true })\n    return newXml\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport Layout from './Layout'\nimport 'normalize.css'\nimport './global.css'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n    <React.StrictMode>\n        <Layout />\n    </React.StrictMode>\n)\n"],"sourceRoot":""}